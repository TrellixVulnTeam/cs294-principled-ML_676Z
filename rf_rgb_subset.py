#!/usr/bin/env python3
#
# This code has been produced by a free evaluation version of Brainome(tm).
# Portions of this code copyright (c) 2019-2021 by Brainome, Inc. All Rights Reserved.
# Brainome, Inc grants an exclusive (subject to our continuing rights to use and modify models),
# worldwide, non-sublicensable, and non-transferable limited license to use and modify this
# predictor produced through the input of your data:
# (i) for users accessing the service through a free evaluation account, solely for your
# own non-commercial purposes, including for the purpose of evaluating this service, and
# (ii) for users accessing the service through a paid, commercial use account, for your
# own internal  and commercial purposes.
# Please contact support@brainome.ai with any questions.
# Use of predictions results at your own risk.
#
# Output of Brainome v1.006-19-prod.
# Invocation: brainome -modelonly binaryset.csv -headerless
# Total compiler execution time: 0:04:08.46. Finished on: Nov-08-2021 21:23:24.
# This source code requires Python 3.
#
"""

[01;1mPredictor:[0m                        a.py
    Classifier Type:              Random Forest
    System Type:                  Binary classifier
    Training / Validation Split:  50% : 50%
    Accuracy:
      Best-guess accuracy:        50.00%
      Training accuracy:         100.00% (5000/5000 correct)
      Validation Accuracy:        87.06% (4353/5000 correct)
      Combined Model Accuracy:    93.53% (9353/10000 correct)

    Model Capacity (MEC):        207    bits

    Generalization Ratio:         24.15 bits/bit
    Percent of Data Memorized:     8.28%
    Resilience to Noise:          -1.38 dB


    Training Confusion Matrix:
              Actual | Predicted
              ------ | ---------
          automobile |  2500     0 
            airplane |     0  2500 

    Validation Confusion Matrix:
              Actual | Predicted
              ------ | ---------
          automobile |  2218   282 
            airplane |   365  2135 

    Training Accuracy by Class:
              target |    TP    FP    TN    FN     TPR      TNR      PPV      NPV       F1       TS 
              ------ | ----- ----- ----- ----- -------- -------- -------- -------- -------- --------
          automobile |  2500     0  2500     0  100.00%  100.00%  100.00%  100.00%  100.00%  100.00%
            airplane |  2500     0  2500     0  100.00%  100.00%  100.00%  100.00%  100.00%  100.00%

    Validation Accuracy by Class:
              target |    TP    FP    TN    FN     TPR      TNR      PPV      NPV       F1       TS 
              ------ | ----- ----- ----- ----- -------- -------- -------- -------- -------- --------
          automobile |  2218   365  2135   282   88.72%   85.40%   85.87%   88.33%   87.27%   77.42%
            airplane |  2135   282  2218   365   85.40%   88.72%   88.33%   85.87%   86.84%   76.74%


    Attribute Ranking:
                                      Feature | Relative Importance
                                         2278 :   0.0704
                                         2425 :   0.0440
                                          314 :   0.0351
                                         2476 :   0.0287
                                         2635 :   0.0269
                                         3069 :   0.0197
                                           90 :   0.0176
                                         2032 :   0.0172
                                          479 :   0.0145
                                         2290 :   0.0118
                                         2230 :   0.0105
                                         2833 :   0.0103
                                         2611 :   0.0102
                                          913 :   0.0102
                                          440 :   0.0095
                                         1544 :   0.0091
                                           53 :   0.0087
                                         2371 :   0.0081
                                          521 :   0.0077
                                          239 :   0.0076
                                          887 :   0.0071
                                          681 :   0.0070
                                         2458 :   0.0066
                                          767 :   0.0064
                                         1807 :   0.0063
                                         2653 :   0.0062
                                          952 :   0.0057
                                          725 :   0.0053
                                         1929 :   0.0052
                                         2447 :   0.0051
                                         2426 :   0.0050
                                         2731 :   0.0048
                                         1804 :   0.0048
                                         2512 :   0.0047
                                         2980 :   0.0046
                                         1832 :   0.0046
                                         2851 :   0.0045
                                         2194 :   0.0045
                                         2685 :   0.0042
                                         2923 :   0.0040
                                          776 :   0.0038
                                         2784 :   0.0038
                                          710 :   0.0038
                                         2647 :   0.0037
                                         2590 :   0.0037
                                         1521 :   0.0037
                                         2510 :   0.0036
                                         2874 :   0.0036
                                          709 :   0.0036
                                         2548 :   0.0036
                                         2740 :   0.0035
                                         3063 :   0.0035
                                         2451 :   0.0033
                                          819 :   0.0032
                                         2016 :   0.0030
                                         1388 :   0.0029
                                          171 :   0.0029
                                          868 :   0.0029
                                          928 :   0.0028
                                         1839 :   0.0028
                                         2195 :   0.0028
                                          197 :   0.0027
                                          230 :   0.0027
                                         2208 :   0.0027
                                         1396 :   0.0027
                                         2572 :   0.0027
                                          672 :   0.0027
                                         2446 :   0.0027
                                         1785 :   0.0027
                                         1415 :   0.0026
                                           83 :   0.0026
                                         2745 :   0.0026
                                         1624 :   0.0025
                                         1731 :   0.0025
                                            5 :   0.0025
                                         1726 :   0.0025
                                         1990 :   0.0024
                                          254 :   0.0024
                                         1984 :   0.0024
                                         1420 :   0.0024
                                         1151 :   0.0024
                                         1108 :   0.0024
                                         1034 :   0.0024
                                         2879 :   0.0023
                                         1659 :   0.0023
                                         2224 :   0.0023
                                         3068 :   0.0023
                                         1907 :   0.0023
                                          500 :   0.0023
                                         1727 :   0.0022
                                         1185 :   0.0022
                                          107 :   0.0022
                                         2175 :   0.0022
                                         2876 :   0.0021
                                          514 :   0.0021
                                         1197 :   0.0021
                                         2882 :   0.0021
                                         1487 :   0.0020
                                         2582 :   0.0020
                                         2402 :   0.0020
                                         2191 :   0.0020
                                         2977 :   0.0020
                                         2236 :   0.0020
                                         2270 :   0.0020
                                         2400 :   0.0020
                                         2021 :   0.0020
                                         2692 :   0.0019
                                         2490 :   0.0019
                                         1737 :   0.0019
                                         2684 :   0.0019
                                          531 :   0.0019
                                         2600 :   0.0019
                                         2537 :   0.0018
                                         2275 :   0.0018
                                         1495 :   0.0018
                                         1502 :   0.0018
                                         2838 :   0.0018
                                         1583 :   0.0018
                                         2691 :   0.0018
                                         2133 :   0.0018
                                         1416 :   0.0018
                                         1572 :   0.0018
                                          264 :   0.0017
                                         2797 :   0.0017
                                         1335 :   0.0017
                                         2817 :   0.0017
                                          650 :   0.0017
                                          329 :   0.0017
                                         2086 :   0.0017
                                         2187 :   0.0017
                                         2383 :   0.0017
                                         1592 :   0.0017
                                         1704 :   0.0016
                                           10 :   0.0016
                                         2586 :   0.0016
                                         2662 :   0.0016
                                         2643 :   0.0016
                                         1263 :   0.0016
                                         1112 :   0.0015
                                          674 :   0.0015
                                         1357 :   0.0015
                                         2020 :   0.0015
                                         1706 :   0.0015
                                         1596 :   0.0015
                                         1459 :   0.0015
                                         2725 :   0.0015
                                         2294 :   0.0014
                                         2617 :   0.0014
                                         1656 :   0.0014
                                         1480 :   0.0014
                                         1425 :   0.0014
                                         1196 :   0.0014
                                         1869 :   0.0014
                                         1711 :   0.0014
                                         1331 :   0.0014
                                         1806 :   0.0014
                                         1223 :   0.0014
                                          581 :   0.0014
                                         2387 :   0.0014
                                         1276 :   0.0013
                                          614 :   0.0013
                                         2597 :   0.0013
                                         2758 :   0.0013
                                           88 :   0.0013
                                         2296 :   0.0013
                                         2173 :   0.0013
                                         2234 :   0.0013
                                         2282 :   0.0013
                                         2037 :   0.0013
                                         2108 :   0.0013
                                         3053 :   0.0013
                                         1560 :   0.0013
                                         3056 :   0.0013
                                         1623 :   0.0013
                                         2435 :   0.0013
                                         2217 :   0.0012
                                         2112 :   0.0012
                                         2202 :   0.0012
                                         2124 :   0.0012
                                          990 :   0.0012
                                          373 :   0.0012
                                         1997 :   0.0012
                                            2 :   0.0012
                                         3041 :   0.0012
                                          638 :   0.0012
                                         1306 :   0.0012
                                         2099 :   0.0012
                                         1674 :   0.0012
                                          770 :   0.0012
                                         2828 :   0.0012
                                         2061 :   0.0011
                                         1679 :   0.0011
                                         1358 :   0.0011
                                         2439 :   0.0011
                                         1955 :   0.0011
                                         1055 :   0.0011
                                          356 :   0.0011
                                         1971 :   0.0011
                                         1911 :   0.0011
                                         2670 :   0.0011
                                         2613 :   0.0011
                                         1289 :   0.0011
                                           40 :   0.0011
                                         2494 :   0.0011
                                           75 :   0.0011
                                         1283 :   0.0011
                                          542 :   0.0011
                                         1834 :   0.0011
                                          536 :   0.0011
                                         1134 :   0.0011
                                          585 :   0.0010
                                         2225 :   0.0010
                                          388 :   0.0010
                                         1255 :   0.0010
                                         2281 :   0.0010
                                         1691 :   0.0010
                                         2527 :   0.0010
                                         2035 :   0.0010
                                         2346 :   0.0010
                                         1475 :   0.0010
                                          751 :   0.0010
                                         1229 :   0.0010
                                         2757 :   0.0010
                                          919 :   0.0010
                                         1477 :   0.0010
                                          129 :   0.0010
                                         1121 :   0.0010
                                         1756 :   0.0010
                                         1819 :   0.0010
                                         1077 :   0.0010
                                         1829 :   0.0010
                                          431 :   0.0010
                                           80 :   0.0010
                                         2575 :   0.0010
                                          101 :   0.0010
                                         1950 :   0.0009
                                         2131 :   0.0009
                                         1741 :   0.0009
                                         2161 :   0.0009
                                           95 :   0.0009
                                         1235 :   0.0009
                                         2570 :   0.0009
                                          865 :   0.0009
                                         1752 :   0.0009
                                         1191 :   0.0009
                                         1744 :   0.0009
                                         2818 :   0.0009
                                          854 :   0.0009
                                          701 :   0.0009
                                          449 :   0.0009
                                         1952 :   0.0009
                                         1225 :   0.0009
                                         2727 :   0.0009
                                          148 :   0.0009
                                         2040 :   0.0009
                                         1200 :   0.0009
                                          826 :   0.0009
                                          490 :   0.0009
                                          276 :   0.0009
                                         2181 :   0.0009
                                         1325 :   0.0009
                                         2665 :   0.0008
                                         1516 :   0.0008
                                         1419 :   0.0008
                                         1189 :   0.0008
                                         1864 :   0.0008
                                          874 :   0.0008
                                         2538 :   0.0008
                                         1671 :   0.0008
                                          924 :   0.0008
                                         2557 :   0.0008
                                         2318 :   0.0008
                                         1099 :   0.0008
                                         1722 :   0.0008
                                         1141 :   0.0008
                                         1028 :   0.0008
                                          551 :   0.0008
                                          907 :   0.0008
                                          771 :   0.0008
                                         2405 :   0.0008
                                         1489 :   0.0008
                                         1735 :   0.0008
                                         2920 :   0.0007
                                         1021 :   0.0007
                                         2381 :   0.0007
                                         1690 :   0.0007
                                         1903 :   0.0007
                                         2454 :   0.0007
                                          816 :   0.0007
                                          980 :   0.0007
                                         2004 :   0.0007
                                         1780 :   0.0007
                                          899 :   0.0007
                                         1944 :   0.0007
                                         1533 :   0.0007
                                         2607 :   0.0007
                                         1356 :   0.0007
                                         2205 :   0.0007
                                         2333 :   0.0007
                                         2767 :   0.0007
                                         2498 :   0.0007
                                         2423 :   0.0007
                                           18 :   0.0007
                                         2560 :   0.0007
                                         2220 :   0.0007
                                         2098 :   0.0007
                                         1919 :   0.0006
                                          588 :   0.0006
                                         2134 :   0.0006
                                         1899 :   0.0006
                                         1461 :   0.0006
                                         2164 :   0.0006
                                         2829 :   0.0006
                                         2137 :   0.0006
                                          918 :   0.0006
                                          706 :   0.0006
                                          177 :   0.0006
                                         1559 :   0.0006
                                         1822 :   0.0006
                                         2157 :   0.0006
                                         1655 :   0.0006
                                         2240 :   0.0006
                                          914 :   0.0006
                                         2147 :   0.0006
                                          895 :   0.0006
                                         3023 :   0.0006
                                         2514 :   0.0006
                                          862 :   0.0006
                                         1970 :   0.0006
                                         2038 :   0.0006
                                         1588 :   0.0006
                                         2389 :   0.0006
                                         1993 :   0.0006
                                         1015 :   0.0006
                                         3055 :   0.0006
                                          612 :   0.0006
                                         1550 :   0.0005
                                         1309 :   0.0005
                                         2852 :   0.0005
                                         2875 :   0.0005
                                         2591 :   0.0005
                                          488 :   0.0005
                                         1362 :   0.0005
                                         2679 :   0.0005
                                         1951 :   0.0005
                                         1492 :   0.0005
                                         2968 :   0.0005
                                          234 :   0.0005
                                         2974 :   0.0005
                                         1886 :   0.0005
                                         2097 :   0.0005
                                         1130 :   0.0005
                                          777 :   0.0005
                                          575 :   0.0005
                                         1933 :   0.0005
                                          414 :   0.0005
                                         2770 :   0.0005
                                         1862 :   0.0005
                                         1326 :   0.0005
                                         2671 :   0.0005
                                          870 :   0.0005
                                         2027 :   0.0005
                                          535 :   0.0005
                                         1753 :   0.0005
                                          774 :   0.0005
                                         2246 :   0.0005
                                          633 :   0.0005
                                          413 :   0.0005
                                         1612 :   0.0005
                                         1845 :   0.0005
                                          779 :   0.0005
                                         1389 :   0.0004
                                         1883 :   0.0004
                                         2007 :   0.0004
                                         2179 :   0.0004
                                         2508 :   0.0004
                                          625 :   0.0004
                                         2973 :   0.0004
                                         1816 :   0.0004
                                         1324 :   0.0004
                                         1964 :   0.0004
                                         1095 :   0.0004
                                          503 :   0.0004
                                          682 :   0.0004
                                         1247 :   0.0004
                                         2101 :   0.0004
                                         2140 :   0.0004
                                         2365 :   0.0004
                                          845 :   0.0004
                                         1996 :   0.0004
                                         1653 :   0.0004
                                         2649 :   0.0004
                                         1257 :   0.0004
                                         2975 :   0.0004
                                         1931 :   0.0004
                                         1014 :   0.0004
                                          886 :   0.0004
                                         1887 :   0.0004
                                         2079 :   0.0004
                                         2106 :   0.0004
                                         1714 :   0.0004
                                         2987 :   0.0004
                                         2931 :   0.0004
                                          323 :   0.0004
                                          836 :   0.0004
                                         2636 :   0.0004
                                          853 :   0.0004
                                         1193 :   0.0004
                                         2221 :   0.0004
                                         1333 :   0.0004
                                          569 :   0.0003
                                         1061 :   0.0003
                                           15 :   0.0003
                                          715 :   0.0003
                                           58 :   0.0003
                                         2155 :   0.0003
                                         2989 :   0.0003
                                         2072 :   0.0003
                                           38 :   0.0003
                                         1973 :   0.0003
                                         2749 :   0.0003
                                         1982 :   0.0003
                                         2783 :   0.0003
                                         1897 :   0.0003
                                         1080 :   0.0003
                                         1056 :   0.0003
                                         1054 :   0.0003
                                         1599 :   0.0003
                                         1288 :   0.0003
                                         2738 :   0.0003
                                         1865 :   0.0003
                                         2495 :   0.0003
                                          708 :   0.0003
                                         2067 :   0.0003
                                         1413 :   0.0003
                                          905 :   0.0003
                                         1657 :   0.0003
                                         2039 :   0.0003
                                         1478 :   0.0003
                                         2781 :   0.0003
                                         1218 :   0.0003
                                         1010 :   0.0003
                                         2922 :   0.0003
                                          383 :   0.0003
                                         2276 :   0.0003
                                         2775 :   0.0003
                                          125 :   0.0003
                                          111 :   0.0003
                                          881 :   0.0003
                                         1809 :   0.0003
                                         1383 :   0.0003
                                          165 :   0.0003
                                         2184 :   0.0003
                                         2555 :   0.0003
                                         2233 :   0.0003
                                         2385 :   0.0003
                                          534 :   0.0003
                                         2146 :   0.0003
                                         2782 :   0.0003
                                         2610 :   0.0003
                                         1954 :   0.0003
                                         2139 :   0.0003
                                         1962 :   0.0003
                                         2533 :   0.0003
                                         2174 :   0.0003
                                          901 :   0.0003
                                         2117 :   0.0003
                                         1999 :   0.0003
                                         1643 :   0.0003
                                         1123 :   0.0003
                                         2873 :   0.0003
                                         2624 :   0.0003
                                         2736 :   0.0003
                                          664 :   0.0002
                                         2288 :   0.0002
                                         2254 :   0.0002
                                         2805 :   0.0002
                                         2878 :   0.0002
                                         2976 :   0.0002
                                         1977 :   0.0002
                                         2046 :   0.0002
                                         2568 :   0.0002
                                         2091 :   0.0002
                                          643 :   0.0002
                                          696 :   0.0002
                                          609 :   0.0002
                                         1614 :   0.0002
                                         1906 :   0.0002
                                         1000 :   0.0002
                                         1645 :   0.0002
                                          375 :   0.0002
                                         1114 :   0.0002
                                         1154 :   0.0002
                                          716 :   0.0002
                                         2213 :   0.0002
                                         1472 :   0.0002
                                         2249 :   0.0002
                                         2883 :   0.0002
                                          525 :   0.0002
                                          859 :   0.0002
                                         1713 :   0.0002
                                         2704 :   0.0002
                                         2277 :   0.0002
                                          717 :   0.0002
                                          804 :   0.0002
                                         1918 :   0.0002
                                         2788 :   0.0002
                                         1555 :   0.0002
                                         1340 :   0.0002
                                         1634 :   0.0002
                                         2321 :   0.0002
                                           56 :   0.0002
                                         2596 :   0.0002
                                          268 :   0.0002
                                         2237 :   0.0002
                                         2517 :   0.0002
                                         2640 :   0.0002
                                         1857 :   0.0002
                                         2055 :   0.0002
                                         2128 :   0.0002
                                         2522 :   0.0002
                                         1104 :   0.0002
                                         1610 :   0.0002
                                         2742 :   0.0002
                                         2337 :   0.0002
                                          743 :   0.0002
                                         1303 :   0.0002
                                          926 :   0.0002
                                         1433 :   0.0002
                                         1730 :   0.0002
                                         2215 :   0.0002
                                         1688 :   0.0002
                                         1414 :   0.0002
                                         1036 :   0.0002
                                         1760 :   0.0002
                                         2516 :   0.0002
                                          247 :   0.0002
                                         1652 :   0.0002
                                         1939 :   0.0002
                                          969 :   0.0002
                                          684 :   0.0002
                                         1271 :   0.0002
                                         1684 :   0.0002
                                         2482 :   0.0002
                                         1507 :   0.0002
                                         2578 :   0.0002
                                         1059 :   0.0002
                                         2089 :   0.0002
                                          955 :   0.0002
                                         1991 :   0.0002
                                         1404 :   0.0002
                                         2421 :   0.0002
                                         1177 :   0.0002
                                         2870 :   0.0002
                                          191 :   0.0002
                                         2787 :   0.0002
                                         2521 :   0.0002
                                         2144 :   0.0002
                                         1195 :   0.0002
                                          686 :   0.0001
                                         1440 :   0.0001
                                         2505 :   0.0001
                                         1378 :   0.0001
                                          813 :   0.0001
                                         2272 :   0.0001
                                         1090 :   0.0001
                                         1960 :   0.0001
                                         2709 :   0.0001
                                         1705 :   0.0001
                                         1529 :   0.0001
                                         1597 :   0.0001
                                         2609 :   0.0001
                                         2807 :   0.0001
                                         1449 :   0.0001
                                         1500 :   0.0001
                                         2025 :   0.0001
                                         2348 :   0.0001
                                         2149 :   0.0001
                                         2285 :   0.0001
                                         1574 :   0.0001
                                          956 :   0.0001
                                          532 :   0.0001
                                          336 :   0.0001
                                         2978 :   0.0001
                                         2513 :   0.0001
                                         3006 :   0.0001
                                         2158 :   0.0001
                                         1118 :   0.0001
                                         2361 :   0.0001
                                         1496 :   0.0001
                                         2309 :   0.0001
                                         1513 :   0.0001
                                          733 :   0.0001
                                         2631 :   0.0001
                                          522 :   0.0001
                                         1273 :   0.0001
                                         2491 :   0.0001
                                         1222 :   0.0001
                                         2793 :   0.0001
                                         2370 :   0.0001
                                         1047 :   0.0001
                                         2436 :   0.0001
                                         2092 :   0.0001
                                         2678 :   0.0001
                                         2821 :   0.0001
                                          558 :   0.0001
                                         2897 :   0.0001
                                         1934 :   0.0001
                                         1961 :   0.0001
                                         2732 :   0.0001
                                         1016 :   0.0001
                                         2659 :   0.0001
                                         2036 :   0.0001
                                         1891 :   0.0001
                                         2313 :   0.0001
                                         1575 :   0.0001
                                          545 :   0.0001
                                         1446 :   0.0001
                                           57 :   0.0001
                                         1227 :   0.0001
                                         1773 :   0.0001
                                         1908 :   0.0001
                                         1767 :   0.0001
                                         2811 :   0.0001
                                          948 :   0.0001
                                         2206 :   0.0001
                                         1914 :   0.0001
                                         1455 :   0.0001
                                         2073 :   0.0001
                                         1210 :   0.0001
                                         2353 :   0.0001
                                          348 :   0.0001
                                         1640 :   0.0001
                                         1698 :   0.0001
                                         2308 :   0.0001
                                         2618 :   0.0001
                                         1243 :   0.0001
                                          190 :   0.0001
                                         2338 :   0.0001
                                          260 :   0.0001
                                         2552 :   0.0001
                                          898 :   0.0001
                                          939 :   0.0001
                                          798 :   0.0001
                                         2327 :   0.0001
                                         2415 :   0.0001
                                         1755 :   0.0001
                                         1628 :   0.0001
                                          628 :   0.0001
                                           26 :   0.0001
                                         2639 :   0.0001
                                          953 :   0.0001
                                          564 :   0.0001
                                         1206 :   0.0001
                                         1297 :   0.0001
                                         1724 :   0.0001
                                         1236 :   0.0001
                                         2728 :   0.0001
                                         2109 :   0.0001
                                         1926 :   0.0001
                                         1456 :   0.0001
                                          599 :   0.0001
                                         2266 :   0.0001
                                         1940 :   0.0001
                                          326 :   0.0001
                                         1913 :   0.0001
                                         2900 :   0.0001
                                          734 :   0.0001
                                          795 :   0.0001
                                          259 :   0.0001
                                         2672 :   0.0001
                                         1374 :   0.0001
                                          502 :   0.0001
                                         2485 :   0.0001
                                           74 :   0.0001
                                          908 :   0.0001
                                         1259 :   0.0001
                                         2209 :   0.0001
                                         2825 :   0.0001
                                         1916 :   0.0001
                                         2540 :   0.0001
                                         1281 :   0.0001
                                         1484 :   0.0001
                                         2994 :   0.0001
                                         1775 :   0.0001
                                         1689 :   0.0001
                                            0 :   0.0001
                                         2085 :   0.0001
                                          211 :   0.0001
                                           52 :   0.0001
                                         1230 :   0.0001
                                         1395 :   0.0001
                                         1442 :   0.0001
                                          992 :   0.0001
                                         1369 :   0.0001
                                          433 :   0.0001
                                         2523 :   0.0001
                                          906 :   0.0001
                                         2126 :   0.0001
                                          246 :   0.0001
                                         2030 :   0.0001
                                         2253 :   0.0001
                                         1830 :   0.0001
                                         2854 :   0.0001
                                           98 :   0.0001
                                            1 :   0.0001
                                          309 :   0.0001
                                          618 :   0.0001
                                          202 :   0.0001
                                         2450 :   0.0001
                                         2628 :   0.0001
                                         2729 :   0.0001
                                          322 :   0.0001
                                         1988 :   0.0001
                                         1393 :   0.0001
                                          652 :   0.0001
                                          601 :   0.0001
                                           43 :   0.0001
                                         2185 :   0.0001
                                         2496 :   0.0001
                                         2629 :   0.0001
                                           14 :   0.0001
                                         2411 :   0.0001
                                         2627 :   0.0001
                                          386 :   0.0001
                                         2972 :   0.0001
                                         2452 :   0.0001
                                         1604 :   0.0001
                                         1781 :   0.0001
                                         1426 :   0.0001
                                         1802 :   0.0001
                                         2535 :   0.0001
                                         1097 :   0.0001
                                         2720 :   0.0001
                                         1646 :   0.0001
                                         2967 :   0.0001
                                         1535 :   0.0001
                                         2588 :   0.0001
                                         2336 :   0.0001
                                         1045 :   0.0001
                                         1551 :   0.0001
                                          212 :   0.0001
                                         2250 :   0.0001
                                         2633 :   0.0001
                                         1851 :   0.0001
                                         2448 :   0.0001
                                          200 :   0.0001
                                         2103 :   0.0001
                                         1552 :   0.0001
                                          821 :   0.0001
                                         2645 :   0.0001
                                         1412 :   0.0001
                                         1166 :   0.0001
                                         2279 :   0.0001
                                         2830 :   0.0001
                                         2713 :   0.0001
                                         1900 :   0.0001
                                         1408 :   0.0001
                                         1673 :   0.0001
                                         2203 :   0.0001
                                         1239 :   0.0001
                                         2654 :   0.0001
                                         1872 :   0.0001
                                         1885 :   0.0001
                                          539 :   0.0001
                                         1965 :   0.0000
                                         1871 :   0.0000
                                         2785 :   0.0000
                                          678 :   0.0000
                                         1286 :   0.0000
                                         1719 :   0.0000
                                          966 :   0.0000
                                         1203 :   0.0000
                                         1651 :   0.0000
                                         1896 :   0.0000
                                         1220 :   0.0000
                                         2304 :   0.0000
                                          497 :   0.0000
                                         1715 :   0.0000
                                         2243 :   0.0000
                                         2917 :   0.0000
                                         1769 :   0.0000
                                         1920 :   0.0000
                                         1875 :   0.0000
                                         1718 :   0.0000
                                           32 :   0.0000
                                          756 :   0.0000
                                         1878 :   0.0000
                                         1548 :   0.0000
                                         2470 :   0.0000
                                         1179 :   0.0000
                                         2885 :   0.0000
                                         1536 :   0.0000
                                         2394 :   0.0000
                                         2093 :   0.0000
                                         2377 :   0.0000
                                         1307 :   0.0000
                                         1949 :   0.0000
                                         2660 :   0.0000
                                         1600 :   0.0000
                                          465 :   0.0000
                                         1488 :   0.0000
                                         1251 :   0.0000
                                          863 :   0.0000
                                         1202 :   0.0000
                                         1471 :   0.0000
                                         1365 :   0.0000
                                          867 :   0.0000
                                         1375 :   0.0000
                                          764 :   0.0000
                                         2356 :   0.0000
                                         2332 :   0.0000
                                          263 :   0.0000
                                         2347 :   0.0000
                                          994 :   0.0000
                                         1682 :   0.0000
                                         1219 :   0.0000
                                         1272 :   0.0000
                                         2280 :   0.0000
                                          183 :   0.0000
                                         1486 :   0.0000
                                         2018 :   0.0000
                                         1241 :   0.0000
                                         1909 :   0.0000
                                         1629 :   0.0000
                                         1699 :   0.0000
                                         2119 :   0.0000
                                         1523 :   0.0000
                                          910 :   0.0000
                                         2197 :   0.0000
                                          981 :   0.0000
                                         1213 :   0.0000
                                          794 :   0.0000
                                         2183 :   0.0000
                                          739 :   0.0000
                                         2303 :   0.0000
                                         2100 :   0.0000
                                         2606 :   0.0000
                                         1778 :   0.0000
                                          925 :   0.0000
                                         1086 :   0.0000
                                         2388 :   0.0000
                                          732 :   0.0000
                                          491 :   0.0000
                                         1428 :   0.0000
                                         1642 :   0.0000
                                         1594 :   0.0000
                                            7 :   0.0000
                                          861 :   0.0000
                                         2077 :   0.0000
                                         1980 :   0.0000
                                         2550 :   0.0000
                                          607 :   0.0000
                                          439 :   0.0000
                                         3051 :   0.0000
                                         1291 :   0.0000
                                         2630 :   0.0000
                                         3031 :   0.0000
                                         2473 :   0.0000
                                         2993 :   0.0000
                                         1353 :   0.0000
                                          726 :   0.0000
                                          927 :   0.0000
                                         2762 :   0.0000
                                         2539 :   0.0000
                                         2368 :   0.0000
                                         2315 :   0.0000
                                         2551 :   0.0000
                                         1585 :   0.0000
                                          224 :   0.0000
                                         2569 :   0.0000
                                         1912 :   0.0000
                                         2461 :   0.0000
                                         2571 :   0.0000
                                         1366 :   0.0000
                                         2515 :   0.0000
                                         1812 :   0.0000
                                         1876 :   0.0000
                                         2005 :   0.0000
                                         1981 :   0.0000
                                          842 :   0.0000
                                         1321 :   0.0000
                                          593 :   0.0000
                                         2951 :   0.0000
                                         2711 :   0.0000
                                          923 :   0.0000
                                         3059 :   0.0000
                                         1069 :   0.0000
                                         1332 :   0.0000
                                         2478 :   0.0000
                                          856 :   0.0000
                                         1758 :   0.0000
                                         1068 :   0.0000
                                         1662 :   0.0000
                                          117 :   0.0000
                                         1318 :   0.0000
                                         2342 :   0.0000
                                         1584 :   0.0000
                                         1305 :   0.0000
                                         1974 :   0.0000
                                         1018 :   0.0000
                                         1182 :   0.0000
                                         1025 :   0.0000
                                         1126 :   0.0000
                                         1106 :   0.0000
                                          241 :   0.0000
                                          578 :   0.0000
                                         2444 :   0.0000
                                         2422 :   0.0000
                                         2705 :   0.0000
                                         1327 :   0.0000
                                          251 :   0.0000
                                         2123 :   0.0000
                                         2238 :   0.0000
                                         1538 :   0.0000
                                          812 :   0.0000
                                          645 :   0.0000
                                         1062 :   0.0000
                                         2331 :   0.0000
                                         1002 :   0.0000
                                         1821 :   0.0000
                                          617 :   0.0000
                                          959 :   0.0000
                                         2594 :   0.0000
                                         1008 :   0.0000
                                          634 :   0.0000
                                         1749 :   0.0000
                                          537 :   0.0000
                                          401 :   0.0000
                                         1609 :   0.0000
                                         1873 :   0.0000
                                         1571 :   0.0000
                                         1519 :   0.0000
                                         1007 :   0.0000
                                         1791 :   0.0000
                                         1159 :   0.0000
                                         1879 :   0.0000
                                            6 :   0.0000
                                         2986 :   0.0000
                                         2554 :   0.0000
                                           49 :   0.0000
                                          738 :   0.0000
                                         1452 :   0.0000
                                          520 :   0.0000
                                         1626 :   0.0000
                                         2403 :   0.0000
                                         2486 :   0.0000
                                         1739 :   0.0000
                                         2219 :   0.0000
                                         1938 :   0.0000
                                         1020 :   0.0000
                                         1676 :   0.0000
                                         1184 :   0.0000
                                         1377 :   0.0000
                                         2614 :   0.0000
                                         2053 :   0.0000
                                         1352 :   0.0000
                                         1518 :   0.0000
                                         1868 :   0.0000
                                         1176 :   0.0000
                                           96 :   0.0000
                                         3007 :   0.0000
                                         1089 :   0.0000
                                         1942 :   0.0000
                                         2703 :   0.0000
                                         2156 :   0.0000
                                         2054 :   0.0000
                                         1784 :   0.0000
                                          245 :   0.0000
                                          982 :   0.0000
                                         1372 :   0.0000
                                          983 :   0.0000
                                         1710 :   0.0000
                                         2520 :   0.0000
                                          443 :   0.0000
                                         2899 :   0.0000
                                          932 :   0.0000
                                          422 :   0.0000
                                         2382 :   0.0000
                                          976 :   0.0000
                                         1644 :   0.0000
                                         1586 :   0.0000
                                         1274 :   0.0000
                                         1884 :   0.0000
                                          823 :   0.0000
                                         2804 :   0.0000
                                         1696 :   0.0000
                                         1817 :   0.0000
                                         2397 :   0.0000
                                         2484 :   0.0000
                                         1292 :   0.0000
                                          909 :   0.0000
                                         3062 :   0.0000
                                         1672 :   0.0000
                                         1995 :   0.0000
                                            3 :   0.0000
                                         1188 :   0.0000
                                         1254 :   0.0000
                                         1398 :   0.0000
                                         1874 :   0.0000
                                         2712 :   0.0000
                                          933 :   0.0000
                                          360 :   0.0000
                                         2585 :   0.0000
                                         1044 :   0.0000
                                          471 :   0.0000
                                          656 :   0.0000
                                          320 :   0.0000
                                         2734 :   0.0000
                                         1976 :   0.0000
                                         1448 :   0.0000
                                          220 :   0.0000
                                         2574 :   0.0000
                                          741 :   0.0000
                                         2080 :   0.0000
                                          810 :   0.0000
                                         2509 :   0.0000
                                         1789 :   0.0000
                                         1334 :   0.0000
                                         2069 :   0.0000
                                          761 :   0.0000
                                         1373 :   0.0000
                                         1616 :   0.0000
                                          598 :   0.0000
                                         2786 :   0.0000
                                         1198 :   0.0000
                                         1687 :   0.0000
                                         1852 :   0.0000
                                         2284 :   0.0000
                                         2013 :   0.0000
                                          272 :   0.0000
                                         2076 :   0.0000
                                         2130 :   0.0000
                                          605 :   0.0000
                                         2867 :   0.0000
                                          308 :   0.0000
                                         1183 :   0.0000
                                         2747 :   0.0000
                                         2453 :   0.0000
                                         1032 :   0.0000
                                         1300 :   0.0000
                                         2049 :   0.0000
                                         2074 :   0.0000
                                         2623 :   0.0000
                                         1117 :   0.0000
                                          680 :   0.0000
                                         1986 :   0.0000
                                         2081 :   0.0000
                                         1757 :   0.0000
                                         1505 :   0.0000
                                         1683 :   0.0000
                                         1170 :   0.0000
                                         2271 :   0.0000
                                         1279 :   0.0000
                                         1381 :   0.0000
                                         2546 :   0.0000
                                          441 :   0.0000
                                          679 :   0.0000
                                         2107 :   0.0000
                                         2911 :   0.0000
                                         2188 :   0.0000
                                          435 :   0.0000
                                         1530 :   0.0000
                                         2258 :   0.0000
                                          950 :   0.0000
                                          473 :   0.0000
                                         1431 :   0.0000
                                         1733 :   0.0000
                                         1768 :   0.0000
                                         1091 :   0.0000
                                         1470 :   0.0000
                                         1111 :   0.0000
                                         1808 :   0.0000
                                         1607 :   0.0000
                                         2029 :   0.0000
                                         2693 :   0.0000
                                          289 :   0.0000
                                         2142 :   0.0000
                                         1969 :   0.0000
                                         1379 :   0.0000
                                         2060 :   0.0000
                                         2357 :   0.0000
                                         1037 :   0.0000
                                         2741 :   0.0000
                                         2544 :   0.0000
                                         2323 :   0.0000
                                         1957 :   0.0000
                                         1368 :   0.0000
                                         1039 :   0.0000
                                         1100 :   0.0000
                                         2132 :   0.0000
                                          790 :   0.0000
                                         1088 :   0.0000
                                          736 :   0.0000
                                          930 :   0.0000
                                         2583 :   0.0000
                                         2507 :   0.0000
                                         1697 :   0.0000
         

"""

import sys
import math
import os
import argparse
import tempfile
import csv
import binascii
import faulthandler
import json
from io import StringIO
try:
    import numpy as np # For numpy see: http://numpy.org
    from numpy import array
except:
    print("This predictor requires the Numpy library. Please run 'python3 -m pip install numpy'.")
    sys.exit(1)
try:
    from scipy.sparse import coo_matrix
    report_cmat = True
except:
    print("Note: If you install scipy (https://www.scipy.org) this predictor generates a confusion matrix. Try 'python3 -m pip install scipy'.")
    report_cmat = False
try:
    import multiprocessing
    var_dict = {}
    default_to_serial = False
except:
    default_to_serial = True

IOBUF = 100000000
sys.setrecursionlimit(1000000)
TRAINFILE = ['binaryset.csv']
mapping = {'automobile': 0, 'airplane': 1}
ignorelabels = []
ignorecolumns = []
target = '' 
target_column = 3072
important_idxs
ignore_idxs = []
classifier_type = 'RF'
num_attr = 3072
n_classes = 2
model_cap = 207
logits_dict = {0: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.446520001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.372099996, -0.608890891, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.587526321, 0.446520001, 0.644973338, -0.446520001, 0.686398029, -0.186049998, -0.0, -0.496133327, -0.629707694, 0.297679991, 0.65307349, -0.446520001, -0.248066664, 0.578822196, 0.0744199976, -0.510174811, 0.519286215, 0.683818638, 0.684664011, -0.0372099988, 0.571353555, -0.124033332, 0.72535944, 0.186049998, 0.00729607837, 0.552148402, -0.372099996, 0.608890891, -0.656647027, 0.446520001, 0.297679991, -0.620166659, -0.212628573, 0.569583237, -0.446520001, 0.694586635, -0.0, -0.496133327, 0.641551733, -0.473581791, -0.440444916, 0.205842555, -0.208376005, 0.602447629, -0.0, 0.681662202, 0.446520001, -0.526385367, 0.64035815, -0.248066664, -0.63788569, 0.446520001, 0.62416774, 0.132686824, 0.338272721, -0.272761077, 0.14439702, -0.597443581]), 1: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.446520001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.372099996, 0.608890891, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.587526321, -0.446520001, -0.644973338, 0.446520001, -0.686398029, 0.186049998, -0.0, 0.496133327, 0.629707694, -0.297679991, -0.65307349, 0.446520001, 0.248066664, -0.578822196, -0.0744199976, 0.510174811, -0.519286215, -0.683818638, -0.684664011, 0.0372099988, -0.571353555, 0.124033332, -0.72535944, -0.186049998, -0.00729607837, -0.552148402, 0.372099996, -0.608890891, 0.656647027, -0.446520001, -0.297679991, 0.620166659, 0.212628573, -0.569583237, 0.446520001, -0.694586635, -0.0, 0.496133327, -0.641551733, 0.473581791, 0.440444916, -0.205842555, 0.208376005, -0.602447629, -0.0, -0.681662202, -0.446520001, 0.526385367, -0.64035815, 0.248066664, 0.63788569, -0.446520001, -0.62416774, -0.132686824, -0.338272721, 0.272761077, -0.14439702, 0.597443581]), 2: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0515374132, -0.51777178, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.559573591, -0.0953359604, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.614827275, 0.256070584, -0.181231827, 0.444473386, 0.271898985, -0.511592925, 0.503396988, -0.152349949, -0.463460237, 0.235724583, -0.194610208, 0.462739617, 0.439845413, -0.247662753, 0.611954212, -0.176127255, -0.369369656, 0.374566376, 0.0589409731, 0.520900488, 0.301015705, -0.620691955, 0.525403857, -0.180883229, 0.0822763145, 0.537623107, 0.446941018, -0.187270075, -0.0902802423, -0.553353906, 0.570191205, -0.158631131, 0.318624854, -0.409834087, 0.561733902, -0.317730933, 0.333451599, -0.269741595, -0.0564140305, 0.51814431, 0.20987232, 0.677155077, 0.198233634, -0.38352713, 0.62802881, -0.167698592, -0.105903924, -0.409530014, 0.229303151, 0.700390518, -0.468883246, 0.51186806, 0.510002553, -0.380763859, 0.0611631088, -0.45610106]), 3: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.051537443, 0.517771721, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.559573591, 0.0953359604, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.614827275, -0.256070584, 0.181231841, -0.444473386, -0.271898985, 0.511592925, -0.503396988, 0.152349919, 0.463460237, -0.235724583, 0.194610253, -0.462739617, -0.439845413, 0.247662753, -0.611954212, 0.176127225, 0.369369656, -0.374566376, -0.0589410067, -0.520900488, -0.301015705, 0.620691955, -0.525403857, 0.180883214, -0.0822763145, -0.537623107, -0.446940958, 0.187270105, 0.0902802423, 0.553353965, -0.570191205, 0.158631146, -0.318624854, 0.409834087, -0.561733902, 0.317730933, -0.333451569, 0.269741625, 0.0564140268, -0.51814431, -0.209872335, -0.677155077, -0.198233634, 0.383527189, -0.62802881, 0.167698637, 0.105903916, 0.409530014, -0.229303151, -0.700390577, 0.468883246, -0.511868119, -0.510002553, 0.380763859, -0.0611631013, 0.45610106]), 4: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.103843287, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.157131061, 0.0, 0.0, -0.930360734, -0.473983675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.281176567, 0.450263619, 0.316553533, -0.478842676, 0.285969853, -0.31712243, 0.151942283, 0.663486779, 0.430048138, -0.4660317, 0.33689484, -0.564391673, -0.168827832, 0.463932216, 0.0520261042, -0.50840342, -0.209823862, -0.778446853, -0.193505451, 0.476551384, -0.350894809, 0.275916666, 0.285234213, -0.404430062, 0.436173648, 0.00452693179, 0.460929185, -0.342615902, 0.383683503, -0.403397739, 0.408925503, 0.0551588014, -0.101339988, -0.924200475, -0.119328395, 0.511900187, 0.338496834, -0.491525888, 0.436792493, -0.324602336, -0.555199564, 0.129029304, -0.545779884, 0.295279533, 0.491450667, -0.00925185904, -0.48652789, 0.207731903, 0.379062176, -0.450668454, 0.0885825232, -0.28144294, 0.247800753, -0.29208526]), 5: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.103843287, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.157131091, 0.0, 0.0, 0.930360615, 0.473983735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.281176597, -0.450263619, -0.316553533, 0.478842676, -0.285969824, 0.31712243, -0.151942268, -0.663486779, -0.430048138, 0.4660317, -0.33689484, 0.564391613, 0.168827802, -0.463932157, -0.0520261265, 0.508403361, 0.209823862, 0.778446794, 0.193505436, -0.476551384, 0.350894839, -0.275916666, -0.285234213, 0.404430062, -0.436173648, -0.00452694483, -0.460929185, 0.342615873, -0.383683443, 0.403397739, -0.408925503, -0.0551588349, 0.101340033, 0.924200475, 0.119328395, -0.511900187, -0.338496834, 0.491525888, -0.436792493, 0.324602336, 0.555199564, -0.129029304, 0.545779884, -0.295279533, -0.491450667, 0.00925188325, 0.48652783, -0.207731903, -0.379062176, 0.450668484, -0.0885825157, 0.28144294, -0.247800753, 0.29208526]), 6: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.29487139, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.576371431, 0.0133429579, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.116018094, 0.0, 0.0, 0.0, -0.611740172, 0.335730016, 0.0, 0.0, 0.0, 0.0, -0.661266625, 0.226317763, 0.0, 0.0, 0.0, 0.400138855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.117244311, -0.327170908, 0.460233808, 0.036217127, -0.131232008, -0.673984885, 0.0888982564, 0.428946584, 0.114717253, -0.347777903, -0.156899482, 0.41874221, -0.308092356, 0.194875285, -0.113414697, 0.464121431, -0.0477522165, -0.329993039, -0.225401223, 0.481808037, -0.220146939, 0.291433305, 0.199536741, -0.640256882, 0.167225689, 0.490755171, 0.270825356, -0.406224847, 0.329673886, -0.441773772, 0.47482276, -0.3868545, 0.236891195, -0.308380425, -0.193988025, 0.121194206]), 7: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.29487139, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.576371431, -0.0133428993, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.116018116, 0.0, 0.0, 0.0, 0.611740172, -0.335730046, 0.0, 0.0, 0.0, 0.0, 0.661266625, -0.226317763, 0.0, 0.0, 0.0, -0.400138855, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.117244288, 0.327170879, -0.460233808, -0.0362171121, 0.131231979, 0.673984885, -0.0888982639, -0.428946584, -0.11471723, 0.347777903, 0.156899437, -0.41874221, 0.308092326, -0.194875285, 0.113414705, -0.464121431, 0.0477521941, 0.329993039, 0.225401223, -0.481808037, 0.220146909, -0.291433305, -0.199536711, 0.640256882, -0.167225689, -0.490755171, -0.270825386, 0.406224847, -0.329673886, 0.441773772, -0.47482276, 0.386854559, -0.236891195, 0.308380395, 0.193987995, -0.121194214]), 8: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.418668956, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0704565644, -0.586138844, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.155473992, 0.366074622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.514018655, 0.0, -0.293455333, 0.472562015, 0.0, 0.0, -0.118778467, 0.381754279, 0.173313305, 0.53042078, 0.389423668, -0.290521175, 0.185629845, -0.1083344, 0.569530725, -0.11804346, 0.382579744, 0.00474835001, 0.734245002, -0.172505245, -0.188297644, 0.349873334, 0.0137109626, -0.424532264, -0.147359952, 0.368786395, 0.217564315, -0.373848945, 0.084999539, 0.616719246, 0.173128083, -0.276281685, -0.263275146, 0.292989105, 0.138596982, -0.482399523, 0.216359064, -0.429233134, 0.363288373, -0.208461568, -0.0243418068, -0.490965515, 0.60083425, -0.0343671031, -0.0482154451, 0.675868809, 0.114425927, -0.240207598, 0.586555779, -0.273381412, -0.280594587, 0.900543213, 0.0696144998, -0.425335258]), 9: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.418668956, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0704565942, 0.586138904, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.155474007, -0.366074651, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.514018655, 0.0, 0.293455333, -0.472562015, 0.0, 0.0, 0.118778482, -0.381754279, -0.17331332, -0.53042078, -0.389423698, 0.290521175, -0.185629845, 0.1083344, -0.569530785, 0.118043415, -0.382579744, -0.00474835886, -0.734245002, 0.1725052, 0.1882976, -0.349873364, -0.0137109831, 0.424532205, 0.147359937, -0.368786395, -0.21756433, 0.373848885, -0.084999539, -0.616719246, -0.173128143, 0.276281685, 0.263275117, -0.292989105, -0.138596952, 0.482399523, -0.216359064, 0.429233134, -0.363288373, 0.208461538, 0.0243417975, 0.490965515, -0.60083425, 0.034367092, 0.0482154489, -0.675868809, -0.114425942, 0.240207598, -0.586555719, 0.273381382, 0.280594617, -0.900543392, -0.0696144551, 0.425335258]), 10: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.246570304, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2845909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.188450888, -0.3772282, 0.0461358726, 0.372617245, -0.243600667, 0.5334903, 0.349430948, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.32933262, 0.183729783, -0.446080774, 0.143724859, 0.343051225, -0.280486047, 0.290029466, -0.546631813, -0.334679812, 0.166190594, 0.328030854, -0.265212595, -0.0740866885, -0.528223336, 0.527363241, -0.140106887, -0.429109365, 0.160080254, -0.00120411359, 0.303825498, 0.281264842, -0.558735013, 0.376357317, 0.741515458, 0.210931733, -0.354848057, 0.168885976, -0.442343652, 0.275161773, -0.237776354, 0.155690134, -0.416956753, -0.242140457, 0.266723663, 0.571238935, -0.220984384, 0.208386019, -0.360620797, 0.482254028, 0.0227300953, 0.0231222082, 0.419038475, -0.214598417, -0.00972242001]), 11: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.246570334, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.2845909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.188450858, 0.377228141, -0.0461359322, -0.372617215, 0.243600681, -0.5334903, -0.349430919, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.32933262, -0.183729738, 0.446080774, -0.143724829, -0.343051225, 0.280486047, -0.290029466, 0.546631873, 0.334679782, -0.166190624, -0.328030854, 0.265212595, 0.0740866959, 0.528223336, -0.527363241, 0.140106946, 0.429109365, -0.160080194, 0.00120417599, -0.303825468, -0.281264842, 0.558735073, -0.376357317, -0.741515398, -0.210931763, 0.354848027, -0.168885961, 0.442343652, -0.275161803, 0.237776354, -0.155690119, 0.416956753, 0.242140457, -0.266723633, -0.571238995, 0.220984384, -0.208386049, 0.360620826, -0.482254028, -0.0227300785, -0.0231222082, -0.419038475, 0.214598417, 0.00972243119]), 12: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.111953236, -0.405162185, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.46636069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0826976672, -0.328479499, 0.312975109, -0.148953259, 0.174824759, -0.412764013, 0.318748116, -0.163819373, 0.256052494, -0.230549902, 0.426036298, 0.0621377975, 0.273411214, -0.301221728, 0.232831478, -0.285493553, 0.388696134, -0.277456701, 0.251676768, -0.378726572, 0.279498041, -0.350514263, 0.490200192, 0.135263354, -0.182823166, 0.376557142, 0.295305789, -0.21487987, 0.328194767, -0.144478083, -0.470750809, 0.0101948958, 0.253427476, -0.313895673, 0.306650847, -0.303477705, 0.0665118024, -0.386396825, 0.323743194, -0.159868419, 0.258325815, -0.0425013304, -0.26877591, 0.426200926, -0.00606351253, 0.496887863, 0.338444233, -0.273907155, -0.144492507, 0.554021955, 0.479686111, -0.152414292, 0.116127357, -0.434455365]), 13: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.111953206, 0.405162185, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.46636033, 0.0, 0.0, 0.0, 0.0, 0.0, -0.082697697, 0.328479499, -0.312975109, 0.148953229, -0.17482473, 0.412764043, -0.318748116, 0.163819462, -0.256052494, 0.230549946, -0.426036298, -0.0621378273, -0.273411214, 0.301221728, -0.232831508, 0.285493582, -0.388696134, 0.277456731, -0.251676798, 0.378726572, -0.279498011, 0.350514263, -0.490200192, -0.135263309, 0.182823122, -0.376557142, -0.295305789, 0.214879841, -0.328194797, 0.144478112, 0.470750839, -0.0101949107, -0.253427476, 0.313895673, -0.306650877, 0.303477705, -0.0665118024, 0.386396825, -0.323743224, 0.159868434, -0.258325815, 0.0425013416, 0.268775851, -0.426200867, 0.00606346736, -0.496887863, -0.338444203, 0.273907125, 0.144492462, -0.554021955, -0.479686111, 0.152414277, -0.116127327, 0.434455365]), 14: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.272738785, -0.144058481, 0.0, 0.0, 0.0698024407, 0.349779248, -0.296987921, 0.0, 0.0, -0.283427715, -0.377767146, -0.0696738064, 0.223904863, -0.183722064, 0.0192825999, 0.0, 0.0, -0.346432179, -0.00459794747, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.324471951, 0.0523182005, -0.205031842, 0.286925137, -0.0695658326, 0.306115717, -0.000100722216, 0.289931864, 0.113174617, 0.480236441, -0.191256821, 0.255846739, 0.455701798, 0.113514163, 0.218947515, -0.244555324, 0.363814354, -0.190310821, 0.28013733, -0.359035641, 0.0863778815, -0.332129061, -0.0755166933, 0.350360811, -0.267042071, 0.22529988, 0.280722857, -0.22333914, -0.143342614, 0.326408893, 0.264327347, -0.211918741, 0.338436991, 0.0132582784, 0.017602073, -0.366713464, 0.308915526, -0.11166475]), 15: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.272738785, 0.144058526, 0.0, 0.0, -0.0698024109, -0.349779248, 0.296987981, 0.0, 0.0, 0.283427745, 0.377767146, 0.0696738213, -0.223904833, 0.183722064, -0.0192825757, 0.0, 0.0, 0.346432149, 0.00459797168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.324471951, -0.0523182489, 0.205031782, -0.286925137, 0.0695658103, -0.306115717, 0.000100783458, -0.289931864, -0.113174617, -0.480236441, 0.191256806, -0.255846709, -0.455701768, -0.113514133, -0.218947589, 0.244555309, -0.363814354, 0.190310791, -0.280137241, 0.359035641, -0.0863778889, 0.332129061, 0.0755166858, -0.350360841, 0.267042071, -0.22529988, -0.280722886, 0.22333914, 0.143342629, -0.326408923, -0.264327347, 0.211918771, -0.338436961, -0.0132582644, -0.0176020693, 0.366713464, -0.308915466, 0.111664779]), 16: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.219491437, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0614199899, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0651781037, -0.316953927, -0.00957163982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.132765293, 0.222167656, -0.268800229, 0.0805087537, 0.120692454, -0.233499929, 0.336745679, -0.0788468644, 0.323951632, -0.0470763296, 0.0108190281, 0.422228098, -0.414792001, -0.0875320211, 0.11308638, -0.347040594, 0.351679951, -0.14262709, -0.0148930093, 0.49709931, 0.224096194, -0.192941308, -0.0472723022, -0.341599137, 0.0948818624, -0.341296881, 0.394832343, -0.0926627368, 0.181968227, -0.143646732, 0.0195880458, 0.280787855, 0.151812762, -0.364172578, 0.32003054, -0.158054799, 0.463335037, 0.00330380537, -0.0844849721, 0.192720741, -0.365840256, 0.115184754, -0.0751144737, 0.372727484, 0.273811758, -0.301633596]), 17: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.219491407, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0614199564, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0651781335, 0.316953957, 0.0095716482, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.132765353, -0.222167656, 0.268800259, -0.0805087239, -0.120692432, 0.233499929, -0.336745679, 0.0788468048, -0.323951632, 0.047076337, -0.01081903, -0.422228128, 0.414792061, 0.087532118, -0.113086358, 0.347040594, -0.351679951, 0.142627135, 0.0148930373, -0.49709937, -0.224096224, 0.192941308, 0.047272332, 0.341599137, -0.0948818699, 0.341296881, -0.394832283, 0.0926627591, -0.181968212, 0.143646732, -0.0195880253, -0.280787826, -0.151812717, 0.364172548, -0.320030481, 0.158054769, -0.463335037, -0.00330375088, 0.0844849646, -0.192720741, 0.365840256, -0.115184695, 0.0751144513, -0.372727484, -0.273811758, 0.301633567]), 18: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.404393256, 0.0676481724, 0.0, 0.0, 0.0, -0.202675074, 0.0, 0.0, -0.177126005, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.201892361, 0.0, -0.118463896, 0.0, 0.0, 0.0, -0.0262608342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.236252904, 0.0, -0.221846893, 0.0, 0.0, 0.0, 0.0, 0.0, -0.139044866, 0.149268344, -0.177293345, 0.0709585398, 0.415180981, -0.0431706458, 0.36129114, -0.043647103, -0.157462448, 0.242374435, -0.354792267, 0.0245766416, 0.107216448, 0.52772063, -0.123619057, 0.374823481, -0.00292671076, -0.316497236, 0.305238217, -0.238689452, -0.197643131, 0.276575774, 0.127168432, 0.474204093, -0.125976503, 0.247677013, 0.135414243, -0.360675305, 0.364868671, -0.16597113, 0.225069582, -0.294969499, 0.371535152, -0.064427346, 0.232705444, -0.262078077, 0.29202795, -0.248194948]), 19: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.404393256, -0.06764815, 0.0, 0.0, 0.0, 0.202675134, 0.0, 0.0, 0.17712599, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.201892331, 0.0, 0.118463896, 0.0, 0.0, 0.0, 0.0262608211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.236252993, 0.0, 0.221846834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.139044806, -0.149268344, 0.17729333, -0.0709585547, -0.415180981, 0.043170616, -0.361291111, 0.0436471105, 0.157462448, -0.242374465, 0.354792297, -0.0245766845, -0.107216462, -0.527720571, 0.123619035, -0.374823421, 0.00292680925, 0.316497266, -0.305238187, 0.238689452, 0.197643235, -0.276575744, -0.127168506, -0.474204093, 0.125976473, -0.247677013, -0.135414228, 0.360675335, -0.364868701, 0.1659711, -0.225069597, 0.294969499, -0.371535182, 0.0644273609, -0.232705399, 0.262078077, -0.29202795, 0.248194948]), 20: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.162180364, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.120252654, 0.0, 0.17507942, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0688777491, 0.0, 0.0, 0.0, 0.0, -0.0759597346, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0561410151, -0.271560848, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0370622836, 0.295114577, -0.205823988, 0.201975465, -0.021660246, 0.337930888, -0.161945909, 0.287502706, -0.221915618, -0.0108379936, 0.0236338675, 0.411078274, 0.216132462, -0.127139926, 0.184672534, -0.329676181, 0.300201535, 0.0647906959, 0.157075405, -0.304499418, 0.011093257, 0.429790378, -0.177615181, 0.234187454, 0.14059329, -0.165375441, 0.0349543989, 0.362696052, -0.179382876, 0.123748623, 0.29513073, -0.0737064555, -0.2819435, 0.00656155543, 0.316666335, -0.0915067568, 0.281273842, -0.199956357, 0.45401305, -0.0701675341, -0.157758653, 0.383587688, 0.0219576638, -0.271803707]), 21: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.162180305, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.120252699, 0.0, -0.175079495, 0.0, 0.0, 0.0, 0.0, 0.0, 0.068877764, 0.0, 0.0, 0.0, 0.0, 0.0759596378, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0561409742, 0.271560907, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0370622799, -0.295114577, 0.205823898, -0.201975465, 0.0216602478, -0.337930858, 0.161945865, -0.287502736, 0.221915588, 0.0108379787, -0.0236338675, -0.411078274, -0.216132462, 0.127139956, -0.184672534, 0.329676181, -0.300201535, -0.0647906512, -0.15707536, 0.304499507, -0.0110933138, -0.429790378, 0.177615255, -0.234187484, -0.14059332, 0.165375412, -0.0349544398, -0.362696052, 0.179382846, -0.1237486, -0.295130759, 0.0737064332, 0.28194353, -0.00656156382, -0.316666335, 0.0915068537, -0.281273842, 0.199956387, -0.45401305, 0.0701675639, 0.157758608, -0.383587718, -0.0219576731, 0.271803737]), 22: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.232169464, 0.0367680155, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0331907086, 0.0, 0.204684928, -0.117298216, 0.0, -0.0109578334, 0.0, 0.0, -0.00766526768, 0.0, 0.0, 0.254873604, 0.0, 0.0, 0.0, 0.0, -0.191869512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.292593241, -0.0486103892, 0.327842414, 0.0651210248, 0.0395141132, -0.293291986, 0.213303223, -0.170212984, 0.387928188, 0.021036474, 0.0222218614, -0.246263355, 0.136074662, -0.238807902, 0.240816459, -0.184049457, 0.120471783, -0.317520618, -0.118634075, 0.250958949, 0.328528076, -0.0098674437, -0.108562708, 0.263843358, 0.0923538208, -0.2764754, 0.237454116, -0.0811511353, -0.210712105, 0.0808538496, 0.174234986, -0.197908163, 0.0515564606, 0.358254403, 0.226693675, -0.155609325, -0.0281341299, 0.283561528, 0.25308457, -0.151244953, 0.0250240006, -0.154522061]), 23: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.232169449, -0.0367679112, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0331906416, 0.0, -0.204684928, 0.117298216, 0.0, 0.0109578334, 0.0, 0.0, 0.00766530028, 0.0, 0.0, -0.254873633, 0.0, 0.0, 0.0, 0.0, 0.191869512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.292593271, 0.0486102439, -0.327842414, -0.0651209652, -0.0395141132, 0.293291986, -0.213303238, 0.170213103, -0.387928128, -0.0210364182, -0.0222218297, 0.24626337, -0.136074558, 0.238807946, -0.240816459, 0.184049457, -0.120471753, 0.317520618, 0.118634097, -0.25095889, -0.328528047, 0.00986742321, 0.108562626, -0.263843358, -0.0923537388, 0.27647537, -0.237454116, 0.0811511129, 0.210712105, -0.0808538795, -0.174235001, 0.197908163, -0.05155655, -0.358254403, -0.226693764, 0.15560928, 0.0281341635, -0.283561528, -0.25308457, 0.151244953, -0.0250240322, 0.154522076]), 24: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.205997795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.344068766, -0.0332096145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.113025419, 0.0, -0.0840090066, 0.26119712, 0.0, 0.0, 0.0, 0.0, 0.21428521, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.171671674, 0.0, -0.0418349989, 0.225236729, 0.015909072, -0.251833677, 0.280711263, 0.000167272694, -0.160134137, 0.138956696, 0.155408084, -0.240770534, -0.228466704, 0.133434817, 0.083698824, 0.332134515, 0.119964793, -0.250884682, 0.116695166, -0.195113063, 0.350997448, -0.0656648427, 0.152080134, -0.251085818, -0.0188818201, 0.237701878, 0.152333796, -0.111638777, 0.0809588954, -0.209516212, 0.0622447878, -0.273921937, -0.0486552753, 0.335380375, 0.125053927, -0.23545289, 0.0461982824, 0.368442655, 0.0258309804, -0.251025617]), 25: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.205997869, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.344068795, 0.0332096592, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.113025524, 0.0, 0.0840091407, -0.26119715, 0.0, 0.0, 0.0, 0.0, -0.214285165, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.171671674, 0.0, 0.0418350361, -0.225236639, -0.0159090366, 0.251833647, -0.280711263, -0.000167274964, 0.160134107, -0.13895674, -0.155408114, 0.240770549, 0.228466809, -0.133434802, -0.0836988613, -0.332134515, -0.119964831, 0.250884712, -0.116695195, 0.195113093, -0.350997418, 0.0656648874, -0.152080253, 0.251085818, 0.018881781, -0.237701938, -0.152333796, 0.111638807, -0.0809589028, 0.209516197, -0.0622447729, 0.273921877, 0.0486553088, -0.335380375, -0.125054106, 0.23545292, -0.0461982749, -0.368442625, -0.0258309394, 0.251025587]), 26: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025126094, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00971330795, 0.0, 0.0, 0.174046323, 0.0, 0.0, 0.0, 0.0, 0.0975575522, 0.0, 0.0, -0.0451466106, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0448158346, -0.335105151, 0.0, 0.0, 0.0, 0.0, -0.292612135, 0.0279821474, 0.0228402205, -0.197623834, -0.115098692, 0.0, 0.0236164313, 0.0, -0.187656209, 0.0486724302, 0.175254196, -0.0923810154, 0.315111041, 0.0488310754, 0.049044989, 0.308721364, -0.188622326, 0.131978214, 0.0680285692, -0.10920921, 0.189941436, -0.202790022, 0.226656541, -0.091446206, -0.202650025, 0.13815026, -0.121512562, 0.269879103, 0.0971940011, -0.211287111, 0.0801652521, 0.315786541, -0.0940798968, -0.328401655]), 27: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0251260623, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00971333869, 0.0, 0.0, -0.174046338, 0.0, 0.0, 0.0, 0.0, -0.0975573733, 0.0, 0.0, 0.0451466776, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0448157899, 0.335105121, 0.0, 0.0, 0.0, 0.0, 0.292612165, -0.0279821474, -0.0228402857, 0.197623789, 0.115098767, 0.0, -0.0236165039, 0.0, 0.187656149, -0.0486724339, -0.175254166, 0.0923810452, -0.315111071, -0.0488311015, -0.0490450412, -0.308721364, 0.18862246, -0.131978139, -0.0680285469, 0.109209232, -0.189941391, 0.202790007, -0.226656631, 0.0914463028, 0.202650055, -0.13815023, 0.121512726, -0.269879103, -0.0971939638, 0.211287156, -0.0801652893, -0.31578657, 0.0940797478, 0.328401655]), 28: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.128329381, 0.0, 0.106497765, 0.0, 0.0847198218, -0.237316921, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227192432, -0.0732939094, 0.0, 0.0744888112, 0.0, 0.0, -0.167086706, 0.143887281, 0.0, 0.0, 0.0558447726, 0.0, 0.10698875, -0.188988879, -0.0557759292, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.155342817, 0.0, -0.124253459, 0.00498643145, -0.27586633, 0.176935792, -0.156027332, 0.055399362, 0.33612287, -0.187699154, 0.13616994, -0.103794247, 0.201285079, -0.039718207, -0.279216975, 0.312366515, 0.0477138124, -0.177142844, 0.168226227, -0.143628567, 0.179311737, -0.136979625, 0.205739662, 0.0141953072, -0.19259195, 0.106192969, -0.205273658, 0.304913938, -0.0201886874]), 29: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.128329337, 0.0, -0.106497765, 0.0, -0.0847198367, 0.237316966, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.227192387, 0.0732939094, 0.0, -0.074488841, 0.0, 0.0, 0.16708672, -0.143887341, 0.0, 0.0, -0.0558447279, 0.0, -0.10698875, 0.188988984, 0.0557759628, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.155342713, 0.0, 0.124253452, -0.00498637883, 0.2758663, -0.176935822, 0.156027406, -0.0553993396, -0.336122811, 0.18769908, -0.136170015, 0.103794269, -0.201285139, 0.0397182256, 0.279216975, -0.312366426, -0.0477137342, 0.177142829, -0.168226168, 0.143628567, -0.179311678, 0.136979669, -0.205739722, -0.014195323, 0.19259192, -0.106192917, 0.205273688, -0.304913968, 0.0201887246]), 30: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00889242813, 0.0, -0.113194324, 0.165135965, 0.179648057, 0.0, -0.0344448015, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0340192467, 0.125993833, -0.170584619, 0.0, -0.0083125392, 0.332362086, 0.0773409605, 0.0, 0.158192083, 0.314988017, 0.0806030408, 0.0, 0.0, 0.0, 0.0, -0.0837095529, 0.0, 0.0, 0.0, 0.0686212331, -0.194759607, 0.00698447786, 0.19311367, 0.0613548681, 0.254499853, 0.0797631368, 0.288127214, 0.0244827811, -0.240525275, 0.228949785, -0.0873338878, 0.0900609866, -0.207344562, 0.0501223467, -0.156911969, 0.211302504, -0.11469195, 0.297345996, 0.0499326549, -0.0932459682, 0.223311111, -0.201761276, 0.063615948]), 31: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00889243092, 0.0, 0.113194346, -0.165135965, -0.179648072, 0.0, 0.0344448835, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.034019351, -0.125993833, 0.170584679, 0.0, 0.00831255876, -0.332362056, -0.0773409456, 0.0, -0.158192202, -0.314987987, -0.0806030259, 0.0, 0.0, 0.0, 0.0, 0.0837095678, 0.0, 0.0, 0.0, -0.0686213076, 0.194759533, -0.00698442664, -0.193113625, -0.0613548569, -0.254499882, -0.0797630623, -0.288127244, -0.0244825948, 0.240525231, -0.228949785, 0.0873340517, -0.0900610536, 0.207344547, -0.0501223281, 0.156911954, -0.211302504, 0.114691913, -0.297345936, -0.0499325655, 0.0932459459, -0.223311067, 0.201761276, -0.0636159927]), 32: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0583916828, 0.0, -0.155677065, 0.140824363, 0.213320166, -0.049787119, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0994302183, 0.0, 0.0, 0.0, 0.0617327876, -0.185691267, 0.0, 0.0, 0.0, 0.0, 0.0564873256, 0.0, 0.0, 0.0, -0.0578295439, 0.0, 0.130415723, 0.0, 0.0, 0.0, -0.152941123, 0.130749866, -0.0576455966, 0.183505014, 0.0537515879, -0.263896734, 0.0548601821, -0.167468846, 0.218082875, -0.0862097219, 0.0364767164, 0.306200713, 0.172268271, -0.143165648, 0.0712705925, -0.194887996, 0.225558653, 0.0184710547, 0.044911515, -0.260696352, -0.101267904, 0.227169633, -0.19055967, 0.0987344012, 0.311622858, 0.00352989999, -0.232186258, 0.0487689078, -0.095743224, 0.206797197, 0.106706046, -0.197182432]), 33: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.058391802, 0.0, 0.155677199, -0.140824288, -0.213320047, 0.0497869812, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0994302928, 0.0, 0.0, 0.0, -0.0617327243, 0.185691297, 0.0, 0.0, 0.0, 0.0, -0.0564872809, 0.0, 0.0, 0.0, 0.0578295365, 0.0, -0.130415648, 0.0, 0.0, 0.0, 0.152941063, -0.130749762, 0.0576455966, -0.183504954, -0.0537514612, 0.263896763, -0.0548602007, 0.167468831, -0.21808292, 0.086209774, -0.0364766456, -0.306200713, -0.172268286, 0.143165603, -0.0712706372, 0.194887996, -0.225558668, -0.0184711386, -0.0449115075, 0.260696322, 0.101267919, -0.227169722, 0.1905597, -0.0987343639, -0.311622828, -0.00352990231, 0.232186228, -0.0487688296, 0.095743224, -0.206797153, -0.10670606, 0.197182432]), 34: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0848479345, -0.00105439359, -0.258778751, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0721100494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.000324651046, 0.0, 0.0996323079, -0.130985707, 0.0, 0.0, -0.0477934927, 0.0, -0.0594273508, -0.261535168, -0.0655919313, 0.171377316, 0.0299678966, -0.257480204, 0.00652633933, 0.0, 0.0, 0.0, 0.0454859249, 0.266646802, 0.086409457, -0.0415967256, -0.0641855672, 0.181045979, 0.0728232116, 0.273221999, 0.263287157, 0.0724699348, -0.0435453765, -0.195081815, -0.0578431338, 0.150032878]), 35: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0848477781, 0.00105444109, 0.258778781, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0721101165, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000324599299, 0.0, -0.0996323898, 0.130985618, 0.0, 0.0, 0.0477935337, 0.0, 0.059427198, 0.261535168, 0.0655919388, -0.171377376, -0.0299680475, 0.257480145, -0.00652627368, 0.0, 0.0, 0.0, -0.0454859547, -0.266646892, -0.086409457, 0.0415967219, 0.0641853511, -0.18104589, -0.0728232786, -0.273222029, -0.263287097, -0.0724699125, 0.0435456671, 0.195081621, 0.0578432567, -0.150032863]), 36: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0620965958, 0.0, 0.0, 0.103276201, 0.0, 0.0, -0.0913576856, -0.0521639735, 0.235566676, 0.0, 0.0, 0.0, 0.0, 0.157370761, -0.0932903141, 0.0, -0.043816369, 0.0, -0.161744729, -0.0240868293, 0.0, -0.051307857, 0.184544086, -0.180739358, -0.0279928762, 0.0, 0.0504189059, -0.0645816252, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00249067601, -0.20060496, 0.137716174, -0.112883665, 0.0543054119, 0.237087727, -0.0536909588, 0.124111995, 0.244818062, 0.00493467646, -0.0231511537, -0.232250169, 0.22287713, 0.00333334645, -0.193726927, 0.0695595443, -0.131899551, 0.134570301, 0.177999824, -0.108906612, -0.157769158, 0.0306910705]), 37: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0620965548, 0.0, 0.0, -0.103276245, 0.0, 0.0, 0.0913575292, 0.0521641076, -0.235566676, 0.0, 0.0, 0.0, 0.0, -0.157370761, 0.0932901576, 0.0, 0.0438163951, 0.0, 0.161744788, 0.0240870547, 0.0, 0.0513077155, -0.184544101, 0.180739373, 0.027992839, 0.0, -0.0504187383, 0.0645816922, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00249050721, 0.20060496, -0.137716308, 0.112883456, -0.0543052778, -0.237087727, 0.0536908619, -0.124111995, -0.244818062, -0.00493465783, 0.0231511183, 0.232250169, -0.22287716, -0.00333334063, 0.193726972, -0.069559522, 0.131899551, -0.13457033, -0.177999765, 0.108906649, 0.157769218, -0.030691117]), 38: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.163937688, 0.122489356, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0916557014, -0.127581418, 0.0, 0.0, 0.0, 0.0961199328, 0.0, 0.00517045101, -0.125986606, 0.0, 0.0, 0.0, -0.0485447496, 0.160905585, 0.265963137, 0.0701424628, 0.0587559491, 0.0, 0.0295683555, 0.277370006, 0.0, -0.0491252542, 0.0, 0.0, 0.0, 0.0, -0.202685356, -0.0346046723, -0.00463033514, 0.223081976, -0.0087250853, 0.178882644, 0.118468523, -0.135484993, 0.212374315, 0.00660555577, 0.0529044941, -0.147519663]), 39: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.163937777, -0.122489288, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0916556194, 0.127581388, 0.0, 0.0, 0.0, -0.0961200371, 0.0, -0.0051702694, 0.125986457, 0.0, 0.0, 0.0, 0.0485447161, -0.160905659, -0.265963137, -0.0701424703, -0.0587558895, 0.0, -0.0295682866, -0.277370095, 0.0, 0.0491251498, 0.0, 0.0, 0.0, 0.0, 0.202685267, 0.0346046351, 0.0046303384, -0.223081887, 0.00872514304, -0.178882629, -0.118468486, 0.135485023, -0.212374359, -0.00660548126, -0.0529044233, 0.147519663]), 40: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0300301313, 0.0, 0.0, 0.0, -0.0651284158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0286212265, -0.0129707213, 0.0, -0.0287033506, -0.208270162, -0.056364987, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0403709188, -0.173928812, 0.180546731, 0.00153346162, 0.0, -0.00028895904, 0.00796514656, 0.0, 0.185782328, 0.0480530076, -0.0110197542, 0.215442747, -0.110993028, 0.0970392451, -0.128024742, 0.0843756795, 0.0147254299, 0.221544623, 0.096439749, -0.103972644, 0.162007213, -0.0868364498, -0.0354629457, -0.26515457, 0.253070772, 0.0511514843]), 41: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0300301779, 0.0, 0.0, 0.0, 0.0651283711, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0286211707, 0.0129706878, 0.0, 0.028703399, 0.208270341, 0.056364879, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0403708294, 0.173928782, -0.180546775, -0.00153313542, 0.0, 0.000288988551, -0.00796495564, 0.0, -0.185782269, -0.0480529293, 0.0110198893, -0.215442806, 0.110992923, -0.097039111, 0.128024682, -0.084375754, -0.014725348, -0.221544623, -0.0964396819, 0.103972666, -0.162007093, 0.0868364573, 0.0354630165, 0.26515466, -0.253070831, -0.0511517115]), 42: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0193129387, -0.221584573, 0.0, 0.0, 0.0, 0.0, -0.0870009735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.110413, 0.0, 0.0, -0.0439277515, 0.12403401, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0909967422, 0.0, -0.0156898852, 0.0, -0.091468744, 0.107402429, 0.0, 0.108117521, 0.0, -0.0534679219, -0.0293899104, -0.244599462, 0.0687683821, 0.240936652, -0.117862545, 0.0838170871, 0.227078632, -0.00318863802, 0.0435169116, -0.152965993, 0.224703759, 0.0127824098, -0.0867515653, 0.0966985449, -0.193467677, 0.0383491218, 0.00999266654, 0.234325275, -0.0118474727, -0.198592067, 0.240671128, 0.0434484594]), 43: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0193130001, 0.221584529, 0.0, 0.0, 0.0, 0.0, 0.0870010555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.110412762, 0.0, 0.0, 0.043927744, -0.12403392, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0909967348, 0.0, 0.0156896263, 0.0, 0.0914687291, -0.107402496, 0.0, -0.108117677, 0.0, 0.053467866, 0.0293901563, 0.244599462, -0.0687684864, -0.240936667, 0.117862612, -0.083817184, -0.227078632, 0.00318866922, -0.0435165912, 0.152965978, -0.224703714, -0.0127824582, 0.0867516249, -0.0966982096, 0.193467617, -0.0383491218, -0.00999253802, -0.234325275, 0.0118475445, 0.198592007, -0.240671158, -0.0434485078]), 44: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.016365651, 0.0, -0.0536381155, 0.0461250246, 0.0, 0.0, 0.0, -0.00881587062, -0.179308906, 0.225935623, 0.0554113463, 0.184560388, 0.0263187941, 0.0, 0.0178184304, 0.0, 0.0, -0.0702698529, 0.0, 0.0, -0.0247159004, -0.0263285637, 0.0891022384, 0.0598822646, -0.112607911, 0.167960763, -0.0307024177, -0.0570292585, -0.251681834]), 45: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0163656417, 0.0, 0.0536381565, -0.0461249724, 0.0, 0.0, 0.0, 0.00881584734, 0.179308802, -0.225935623, -0.0554112568, -0.184560359, -0.0263187662, 0.0, -0.0178183857, 0.0, 0.0, 0.070270285, 0.0, 0.0, 0.0247158092, 0.0263286196, -0.0891022161, -0.0598821156, 0.112607978, -0.167960837, 0.0307027306, 0.0570290796, 0.251681864]), 46: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0333835557, 0.136011481, -0.0774511248, 0.0153540792, 0.211296782, 0.0, 0.0, 0.0234417487, 0.0, -0.0320544913, 0.0, 0.0, 0.0, -0.0214464627, 0.0, 0.0309617165, 0.229492322, 0.0, 0.0, 0.0, 0.0, -0.0436052121, -0.221975982, 0.116566606, -0.0368954353, -0.161906317, 0.0331630036, 0.215771034, 0.0419048555, -0.0626654997, 0.0464606881]), 47: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0333834775, -0.136011481, 0.0774512589, -0.0153537709, -0.211296648, 0.0, 0.0, -0.0234416537, 0.0, 0.0320544727, 0.0, 0.0, 0.0, 0.0214465875, 0.0, -0.0309616886, -0.229492322, 0.0, 0.0, 0.0, 0.0, 0.0436052121, 0.221975788, -0.116566703, 0.0368955992, 0.161906332, -0.0331628919, -0.21577099, -0.041904781, 0.0626656562, -0.0464605689]), 48: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0343211927, 0.0, 0.0, 0.0, 0.186031416, 0.0154209714, -0.0366683602, -0.200393423, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0600248277, 0.115174219, 0.0348711237, 0.0, -0.00422168849, 0.114138335, 0.0394226313, -0.139672101, 0.205068856, 0.0356477126, -0.100292355, 0.0860090032, -0.169999033, 0.00431769853]), 49: array([0.0, 0.0, 0.0, 0.0, 0.0, -0.0343210064, 0.0, 0.0, 0.0, -0.186031073, -0.015421153, 0.0366681516, 0.200393572, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0600247756, -0.115174182, -0.0348710939, 0.0, 0.00422176113, -0.114138305, -0.0394225344, 0.139672115, -0.205068901, -0.0356475562, 0.100292392, -0.0860089287, 0.169998974, -0.00431774696]), 50: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0500913523, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0143349208, 0.0, -0.106783181, 0.0907150209, 0.168385476, 0.0408202074, 0.0374942049, 0.0, 0.128614858, -0.0974630862, 0.0, 0.0, 0.0, 0.0, -0.0649763346, 0.078817457, -0.172105193, -0.00783634745, 0.0533843003, 0.222483873, 0.0022351353, 0.0, 0.0660060048, -0.0973416194, 0.13533479, -0.0391407833, 0.0115014445, 0.196907744, 0.095475547, -0.0526418127, -0.216998935, -0.0244321302]), 51: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0500912555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0143347532, 0.0, 0.106783107, -0.0907149836, -0.168385312, -0.0408202298, -0.0374941938, 0.0, -0.128614917, 0.097463049, 0.0, 0.0, 0.0, 0.0, 0.0649765432, -0.0788173079, 0.172105268, 0.00783646759, -0.0533842295, -0.222483739, -0.00223518722, 0.0, -0.0660062209, 0.0973415896, -0.135334581, 0.0391408093, -0.0115015386, -0.196907759, -0.0954756141, 0.0526417121, 0.216998801, 0.0244321469]), 52: array([0.0, 0.0, 0.0, 0.060245391, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0484203324, 0.0, 0.0, 0.0, -0.00446536765, 0.11381498, -0.0606918223, -0.00185242924, 0.0, -0.0886408687, 0.0, 0.0, 0.0, -0.190677807, -0.0356885269, 0.0, 0.0205031689, 0.0, -0.0348076262, 0.161701664, -0.001661713, 0.116821572, 0.0, 0.0711515695, 0.210226953, 0.0194025002, 0.171523497, -0.12640664, 0.0298184585]), 53: array([0.0, 0.0, 0.0, -0.0602454245, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0484202728, 0.0, 0.0, 0.0, 0.00446546776, -0.113815144, 0.0606918782, 0.00185233878, 0.0, 0.0886407793, 0.0, 0.0, 0.0, 0.190677807, 0.035688661, 0.0, -0.0205029286, 0.0, 0.034807723, -0.161701754, 0.00166154781, -0.11682149, 0.0, -0.0711515099, -0.210226893, -0.0194024667, -0.171523362, 0.126406789, -0.0298183542]), 54: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0223466177, 0.203921273, 0.0393423066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0111069484, -0.195349187, 0.0, -0.0835238025, 0.0, 0.0, -0.0491406545, 0.12492314, 0.0375335552, 0.0, 0.0, 0.11244157, 0.0, -0.0331456773, 0.0, -0.0590808764, -0.000154982306, -0.184792757, 0.0, -0.092343986, 0.0229384452, -0.177649915, 0.0639534369, -0.127729133, 0.183712021, 0.0319822766, -0.00992266461, 0.168466941, 0.15960744, 0.0129898377]), 55: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0223467108, -0.203921393, -0.0393422768, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0111069269, 0.195349187, 0.0, 0.0835237429, 0.0, 0.0, 0.0491406582, -0.12492314, -0.0375334062, 0.0, 0.0, -0.112441428, 0.0, 0.0331457555, 0.0, 0.0590808317, 0.000154992274, 0.184792727, 0.0, 0.0923441648, -0.0229384489, 0.177649975, -0.0639534965, 0.127729341, -0.18371205, -0.0319824591, 0.00992272794, -0.168466881, -0.159607634, -0.0129896756]), 56: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0349605605, 0.0, -0.119312748, 0.0347253829, 0.0, 0.0, -0.060919784, 0.0, 0.0, -0.00155725679, 0.0, 0.0, 0.0380272865, 0.0, 0.0, -0.0370466448, 0.0303306878, 0.187309995, 0.0501450896, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0162289515, 0.164580956, -0.137866944, 0.0275536031, 0.08303909, -0.105543204, 0.132838532, -0.029249778, -0.0987328887, 0.0628802031, -0.186996609, -0.0207025539]), 57: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0349605754, 0.0, 0.119312935, -0.0347254723, 0.0, 0.0, 0.0609198324, 0.0, 0.0, 0.0015574717, 0.0, 0.0, -0.0380272381, 0.0, 0.0, 0.0370466635, -0.0303305667, -0.187310025, -0.0501451641, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0162285287, -0.164580926, 0.137866959, -0.0275535472, -0.0830392167, 0.105543509, -0.132838592, 0.0292499326, 0.0987331495, -0.0628800988, 0.186996415, 0.0207027532]), 58: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.111790985, 0.190425545, 0.000829957717, 0.150724664, 0.00729406858, 0.0, 0.0, 0.0, 0.102695435, 0.0, 0.0, -0.0621750019, 0.0, 0.0, 0.0, 0.0331684463, 0.0, 0.0, 0.0, 0.0, -0.0521084256, -0.050791122, 0.116196595, 0.00759857288, -0.148376852, -0.155943304, 0.0314377099, 0.138037726, -0.00670849904, 0.0526858829, -0.100653604, 0.006839843, 0.149162859]), 59: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.111790776, -0.190425694, -0.000830003992, -0.150724664, -0.00729405833, 0.0, 0.0, 0.0, -0.102695704, 0.0, 0.0, 0.0621748753, 0.0, 0.0, 0.0, -0.0331684686, 0.0, 0.0, 0.0, 0.0, 0.0521084815, 0.050791163, -0.11619664, -0.00759875309, 0.14837718, 0.155943394, -0.0314375907, -0.138037711, 0.00670852792, -0.0526858494, 0.100653738, -0.00683982205, -0.149162829]), 60: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0714631304, 0.0, 0.0, 0.0, 0.0, 0.00711930031, 0.089959383, -0.0586152412, 0.0, 0.0, 0.0, -0.0225174204, 0.0, 0.0, -0.0139513062, -0.163236365, 0.0, 0.0494635776, 0.0936334431, -0.0423918515, 0.030474646, 0.186990097, -0.13262552, 0.00302008144, 0.0, 0.0, 0.00989907514, -0.149614379, -0.0234010909, 0.148063868, 0.0769670531, -0.0673201755]), 61: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0714631155, 0.0, 0.0, 0.0, 0.0, -0.00711929007, -0.0899591222, 0.0586155131, 0.0, 0.0, 0.0, 0.0225172509, 0.0, 0.0, 0.013951147, 0.163236722, 0.0, -0.0494635515, -0.0936335176, 0.0423916727, -0.0304745026, -0.186990097, 0.132625341, -0.00302028866, 0.0, 0.0, -0.009898833, 0.149614558, 0.0234010164, -0.148063689, -0.0769671723, 0.067320317]), 62: array([0.0, 0.0, 0.0, -0.0285756849, 0.0, 0.0, 0.0, 0.152224138, 0.0346335135, 0.0, 0.0, 0.0, 0.0, 0.0269863009, 0.0, 0.0, -0.0507524982, 0.0, -0.0176672507, 0.105483145, 0.0, 0.0, 0.00620388612, 0.141040623, 0.00704276329, 0.029148737, 0.16222614, 0.0, 0.0, -0.148359001, -0.010073564, 0.0671156198, -0.11523965, 0.107803591, -0.0217057467]), 63: array([0.0, 0.0, 0.0, 0.0285756141, 0.0, 0.0, 0.0, -0.152224228, -0.0346338116, 0.0, 0.0, 0.0, 0.0, -0.026986314, 0.0, 0.0, 0.0507525317, 0.0, 0.017667193, -0.105483025, 0.0, 0.0, -0.0062037129, -0.141040549, -0.00704287691, -0.0291484836, -0.162226006, 0.0, 0.0, 0.14835915, 0.0100739049, -0.0671156272, 0.11523962, -0.107803568, 0.0217059627]), 64: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.000851239252, -0.123438239, 0.0, 0.0, 0.0, 0.0, -0.0566271357, 0.0965564325, -0.000585077272, -0.128889591, -0.0324350037, 0.0, 0.14646861, 0.0, 0.0, -0.00541714719, 0.0829437226, 0.0, 0.140057713, 0.0334845595, -0.0686988905, 0.0780239701]), 65: array([0.0, 0.0, 0.0, 0.0, 0.0, -0.000851340941, 0.123438485, 0.0, 0.0, 0.0, 0.0, 0.0566268638, -0.0965563357, 0.000585019356, 0.12888962, 0.0324350446, 0.0, -0.146468624, 0.0, 0.0, 0.00541732321, -0.0829435661, 0.0, -0.140057564, -0.0334843397, 0.0686989501, -0.0780239105]), 66: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00376173458, -0.139320582, -0.057577379, 0.0, 0.148323715, 0.0140460255, 0.0, 0.0, 0.137327641, -0.018576989, 0.066366978, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.020417491, 0.0535698272, 0.0, -0.0813840926, 0.0999148041, -0.0128694344, -0.15519686, 0.0199869219, 0.143994585, -0.129083231, -0.0095529845]), 67: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00376164028, 0.139320582, 0.057577312, 0.0, -0.14832361, -0.0140463198, 0.0, 0.0, -0.137327656, 0.0185772199, -0.0663671419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0204175618, -0.0535699166, 0.0, 0.0813839957, -0.0999147743, 0.0128693981, 0.155197069, -0.019986745, -0.143994614, 0.129083499, 0.00955306832]), 68: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0963184983, 0.159601048, 0.011242412, 0.0511972234, 0.0, -0.0462499224, 0.0, 0.0752802491, 0.0, 0.0342903286, 0.0, 0.127897725, 0.0169375632, 0.0, 0.0, 0.0082765352, 0.0, -0.0297808405, 0.101378441, -0.0931089371, 0.0261146035, -0.00457868166, -0.16916047]), 69: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0963185504, -0.15960069, -0.0112423161, -0.0511970893, 0.0, 0.0462498292, 0.0, -0.0752800256, 0.0, -0.0342902727, 0.0, -0.127897546, -0.0169372894, 0.0, 0.0, -0.00827657338, 0.0, 0.029780902, -0.101378344, 0.0931090787, -0.0261145402, 0.00457877107, 0.169160813]), 70: array([0.0, 0.0, 0.0, 0.00975261815, -0.0992651656, 0.0, 0.0, 0.0, -0.0347702764, 0.0, 0.0, 0.0137383323, 0.149076536, 0.0406566076, 0.0, 0.0, 0.0, 0.0, 0.0119219106, -0.0486844331, 0.0, -0.10659828, 0.0470207296, -0.0123928143, -0.139395714, -0.0166772716, 0.0906230286]), 71: array([0.0, 0.0, 0.0, -0.00975270756, 0.0992650837, 0.0, 0.0, 0.0, 0.0347701907, 0.0, 0.0, -0.0137380743, -0.14907676, -0.0406564251, 0.0, 0.0, 0.0, 0.0, -0.0119215949, 0.0486848094, 0.0, 0.106598347, -0.0470207557, 0.0123931952, 0.139395878, 0.0166771505, -0.0906229615]), 72: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0708801076, 0.0, 0.0626496896, 0.0, -0.013488777, 0.0, 0.0, 0.0, 0.0, 0.0303554926, 0.0316690467, 0.158753157, 0.0401478112, 0.0, 0.0, 0.0, -0.0250769127, -0.113385074, 0.0, 0.0, 0.0, -0.0245806593, -0.0975067392, 0.0272966493, -0.0150986109, -0.136714652, 0.0693387315, -0.0627126247, 0.00394023908, 0.126147807]), 73: array([0.0, 0.0, 0.0, 0.0, 0.0, -0.0708799362, 0.0, -0.0626498163, 0.0, 0.0134892417, 0.0, 0.0, 0.0, 0.0, -0.0303555075, -0.0316692553, -0.158752933, -0.0401477441, 0.0, 0.0, 0.0, 0.0250772145, 0.113385364, 0.0, 0.0, 0.0, 0.0245807003, 0.0975068957, -0.0272968709, 0.0150984982, 0.136714831, -0.0693386197, 0.0627126172, -0.00394018693, -0.12614803]), 74: array([0.0, 0.0, 0.0, -0.00863906555, 0.128628165, 0.0, 0.0, 0.0, 0.0, 0.0109362062, 0.0, 0.0, 0.0, 0.0, -0.0384775437, -0.134652451, -0.0145767862, 0.0935837403, -0.0164000504, 0.0596341118, 0.0, -0.0183388628, 0.0, 0.0366053656, -0.0829444677, 0.142615929, 0.0206056945]), 75: array([0.0, 0.0, 0.0, 0.00863929279, -0.12862815, 0.0, 0.0, 0.0, 0.0, -0.010935965, 0.0, 0.0, 0.0, 0.0, 0.0384773649, 0.134652406, 0.0145767536, -0.0935835838, 0.0163998827, -0.0596343055, 0.0, 0.0183387678, 0.0, -0.0366054773, 0.0829449221, -0.142615795, -0.0206053369]), 76: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0584036149, 0.0956955478, 0.0, 0.0324400552, 0.125894338, -0.0111263869, 0.0, 0.0, 0.0, 0.00258309906, 0.00438724831, -0.108885214, 0.0, -0.0573129468, -0.156396747, -0.026608089, 0.0, 0.0, 0.0566987842, -0.0682209134, 0.0264389981, 0.127499104]), 77: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0584038533, -0.0956955478, 0.0, -0.0324397273, -0.125894323, 0.011126521, 0.0, 0.0, 0.0, -0.00258300849, -0.00438699964, 0.108884797, 0.0, 0.0573128909, 0.156396985, 0.0266082119, 0.0, 0.0, -0.0566987209, 0.0682207569, -0.0264389813, -0.127498671]), 78: array([0.0, 0.0, 0.0, 0.000861448294, 0.119198285, 0.0, 0.0, 0.0, 0.0154855959, 0.0, 0.0, -0.126311824, 0.00245991931, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0352030508, 0.132821202, -0.0441244058, 0.0858801529, 0.0, 0.0, 0.0892907605, -0.0149405804, -0.00186458486, -0.0879720971, -0.0450740494, 0.0505756922, -0.0124803809, -0.124062508]), 79: array([0.0, 0.0, 0.0, -0.000861515, -0.119198434, 0.0, 0.0, 0.0, -0.0154853491, 0.0, 0.0, 0.126312137, -0.0024600199, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0352033116, -0.132820979, 0.044124797, -0.0858800039, 0.0, 0.0, -0.0892907307, 0.0149405822, 0.00186454458, 0.0879723877, 0.0450738557, -0.0505755283, 0.0124804471, 0.12406259]), 80: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.124328472, 0.026276907, 0.0474800654, 0.0, -0.0326768197, 0.0, -0.0380591899, 0.102567434, 0.030894449, 0.0, 0.0336797908, 0.0, 0.104403757, 0.00484480057, 0.00637237029, 0.0, -0.150205299, -0.0238799639, -0.131455794, -0.030501768]), 81: array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.124328338, -0.0262769256, -0.0474800467, 0.0, 0.0326768719, 0.0, 0.0380591191, -0.102567047, -0.030894639, 0.0, -0.0336795188, 0.0, -0.104404107, -0.00484456029, -0.00637228834, 0.0, 0.150205195, 0.0238799565, 0.131455868, 0.0305019375]), 82: array([0.0, 0.0, 0.0, -0.00716939475, 0.115797438, 0.0, 0.0, 0.0, 0.0, -0.0576487035, 0.0, 0.0121726776, 0.0, 0.0672818571, -0.0362320207, 0.0, 0.0, -0.00743227592, -0.131933823, -0.00248953886, 0.0, 0.0, 0.0, 0.0253010318, 0.1376957, 0.0912592486, -0.00398183241, 0.0259782877, -0.0834517702]), 83: array([0.0, 0.0, 0.0, 0.00716903713, -0.115797237, 0.0, 0.0, 0.0, 0.0, 0.0576488972, 0.0, -0.012172604, 0.0, -0.067282103, 0.0362320542, 0.0, 0.0, 0.00743205659, 0.131933734, 0.00248977984, 0.0, 0.0, 0.0, -0.0253007058, -0.137695298, -0.0912590697, 0.0039817947, -0.0259779766, 0.0834519714]), 84: array([0.0, -0.0589889847, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0573080853, 0.122998714, 0.0, -0.0495112464, 0.0, -0.114586323, 0.012051302, 0.0381482989, 0.0, -0.026729444, 0.0686048865, 0.00518238917, 0.0941978842, 0.00333894626, -0.106525145]), 85: array([0.0, 0.0589889325, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0573078394, -0.122998491, 0.0, 0.0495114066, 0.0, 0.114585906, -0.0120508736, -0.0381480865, 0.0, 0.0267298222, -0.0686048642, -0.00518238079, -0.0941980407, -0.00333916373, 0.106525145])}
right_children_dict = {0: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, -1, 79, 81, 83, 85, 87, 89, 91, 93, 95, -1, -1, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 1: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, -1, 79, 81, 83, 85, 87, 89, 91, 93, 95, -1, -1, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 2: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, -1, -1, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, -1, -1, 103, 105, 107, 109, 111, 113, 115, 117, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 3: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, -1, -1, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, -1, -1, 103, 105, 107, 109, 111, 113, 115, 117, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 4: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, -1, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, -1, 79, 81, -1, -1, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 5: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, -1, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, -1, 79, 81, -1, -1, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 6: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, -1, 21, 23, 25, 27, 29, 31, 33, 35, -1, -1, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, -1, 57, 59, 61, -1, -1, 63, 65, 67, 69, -1, -1, 71, 73, 75, -1, 77, 79, 81, 83, 85, 87, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 7: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, -1, 21, 23, 25, 27, 29, 31, 33, 35, -1, -1, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, -1, 57, 59, 61, -1, -1, 63, 65, 67, 69, -1, -1, 71, 73, 75, -1, 77, 79, 81, 83, 85, 87, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 8: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, -1, 67, 69, 71, 73, 75, -1, -1, 77, 79, 81, 83, 85, 87, -1, -1, 89, 91, 93, 95, 97, 99, 101, 103, -1, 105, -1, -1, 107, 109, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 9: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, -1, 67, 69, 71, 73, 75, -1, -1, 77, 79, 81, 83, 85, 87, -1, -1, 89, 91, 93, 95, 97, 99, 101, 103, -1, 105, -1, -1, 107, 109, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 10: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, -1, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, -1, 75, 77, 79, 81, 83, 85, -1, -1, -1, -1, -1, -1, -1, 87, 89, 91, 93, 95, 97, 99, 101, 103, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 11: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, -1, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, -1, 75, 77, 79, 81, 83, 85, -1, -1, -1, -1, -1, -1, -1, 87, 89, 91, 93, 95, 97, 99, 101, 103, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 12: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, -1, -1, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, -1, 103, 105, 107, 109, 111, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 13: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, -1, -1, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, -1, 103, 105, 107, 109, 111, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 14: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, -1, -1, 63, 65, -1, -1, -1, 67, 69, -1, -1, -1, -1, -1, -1, 71, 73, -1, -1, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 15: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, -1, -1, 63, 65, -1, -1, -1, 67, 69, -1, -1, -1, -1, -1, -1, 71, 73, -1, -1, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 16: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, -1, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, -1, -1, -1, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 17: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, -1, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, -1, -1, -1, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 18: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, -1, -1, 35, 37, 39, -1, 41, 43, -1, 45, 47, 49, 51, 53, 55, 57, 59, -1, 61, -1, 63, 65, 67, -1, 69, 71, 73, 75, 77, 79, -1, 81, -1, 83, 85, 87, 89, 91, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 19: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, -1, -1, 35, 37, 39, -1, 41, 43, -1, 45, 47, 49, 51, 53, 55, 57, 59, -1, 61, -1, 63, 65, 67, -1, 69, 71, 73, 75, 77, 79, -1, 81, -1, 83, 85, 87, 89, 91, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 20: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, -1, 33, 35, 37, 39, 41, 43, 45, -1, 47, -1, 49, 51, 53, 55, 57, -1, 59, 61, 63, 65, -1, 67, 69, 71, 73, 75, 77, 79, 81, 83, -1, -1, 85, 87, 89, 91, 93, 95, 97, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 21: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, -1, 33, 35, 37, 39, 41, 43, 45, -1, 47, -1, 49, 51, 53, 55, 57, -1, 59, 61, 63, 65, -1, 67, 69, 71, 73, 75, 77, 79, 81, 83, -1, -1, 85, 87, 89, 91, 93, 95, 97, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 22: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, -1, -1, 43, 45, 47, 49, 51, 53, 55, 57, -1, 59, -1, -1, 61, -1, 63, 65, -1, 67, 69, -1, 71, 73, 75, 77, -1, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 23: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, -1, -1, 43, 45, 47, 49, 51, 53, 55, 57, -1, 59, -1, -1, 61, -1, 63, 65, -1, 67, 69, -1, 71, 73, 75, 77, -1, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 24: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, -1, 21, 23, 25, 27, 29, 31, 33, 35, -1, -1, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, -1, 57, -1, -1, 59, 61, 63, 65, -1, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, -1, 89, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 25: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, -1, 21, 23, 25, 27, 29, 31, 33, 35, -1, -1, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, -1, 57, -1, -1, 59, 61, 63, 65, -1, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, -1, 89, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 26: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, -1, 39, 41, -1, 43, 45, 47, 49, -1, 51, 53, -1, 55, 57, 59, 61, 63, -1, -1, 65, 67, 69, 71, -1, -1, -1, -1, -1, 73, -1, 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 27: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, -1, 39, 41, -1, 43, 45, 47, 49, -1, 51, 53, -1, 55, 57, 59, 61, 63, -1, -1, 65, 67, 69, 71, -1, -1, -1, -1, -1, 73, -1, 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 28: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, -1, 31, -1, 33, -1, -1, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, -1, -1, 55, -1, 57, 59, -1, -1, 61, 63, -1, 65, -1, -1, -1, 67, 69, 71, 73, 75, 77, -1, 79, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 29: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, -1, 31, -1, 33, -1, -1, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, -1, -1, 55, -1, 57, 59, -1, -1, 61, 63, -1, 65, -1, -1, -1, 67, 69, 71, 73, 75, 77, -1, 79, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 30: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, -1, 39, -1, -1, -1, 41, -1, 43, 45, 47, 49, 51, 53, 55, 57, -1, -1, -1, 59, -1, -1, -1, 61, -1, -1, -1, 63, 65, 67, 69, -1, 71, 73, 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 31: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, -1, 39, -1, -1, -1, 41, -1, 43, 45, 47, 49, 51, 53, 55, 57, -1, -1, -1, 59, -1, -1, -1, 61, -1, -1, -1, 63, 65, 67, 69, -1, 71, 73, 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 32: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, -1, 39, -1, -1, -1, -1, 41, 43, 45, 47, 49, 51, 53, 55, -1, 57, 59, 61, -1, -1, 63, 65, 67, 69, -1, 71, 73, 75, -1, 77, -1, 79, 81, 83, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 33: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, -1, 39, -1, -1, -1, -1, 41, 43, 45, 47, 49, 51, 53, 55, -1, 57, 59, 61, -1, -1, 63, 65, 67, 69, -1, 71, 73, 75, -1, 77, -1, 79, 81, 83, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 34: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, -1, -1, -1, 21, 23, 25, 27, 29, 31, -1, 33, 35, 37, 39, 41, -1, 43, -1, -1, 45, 47, -1, 49, -1, -1, -1, -1, -1, -1, -1, 51, 53, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 35: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, -1, -1, -1, 21, 23, 25, 27, 29, 31, -1, 33, 35, 37, 39, 41, -1, 43, -1, -1, 45, 47, -1, 49, -1, -1, -1, -1, -1, -1, -1, 51, 53, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 36: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, -1, 41, 43, -1, 45, 47, -1, -1, -1, 49, 51, 53, 55, -1, -1, 57, -1, 59, -1, -1, 61, -1, -1, -1, -1, 63, -1, -1, 65, 67, 69, 71, 73, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 37: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, -1, 41, 43, -1, 45, 47, -1, -1, -1, 49, 51, 53, 55, -1, -1, 57, -1, 59, -1, -1, 61, -1, -1, -1, -1, 63, -1, -1, 65, 67, 69, 71, 73, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 38: array([1, 3, 5, 7, 9, 11, 13, -1, -1, 15, 17, 19, 21, 23, 25, -1, -1, 27, 29, 31, -1, 33, -1, -1, 35, 37, 39, -1, -1, -1, -1, -1, 41, -1, -1, 43, -1, 45, 47, 49, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 39: array([1, 3, 5, 7, 9, 11, 13, -1, -1, 15, 17, 19, 21, 23, 25, -1, -1, 27, 29, 31, -1, 33, -1, -1, 35, 37, 39, -1, -1, -1, -1, -1, 41, -1, -1, 43, -1, 45, 47, 49, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 40: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, -1, 25, 27, 29, -1, 31, 33, 35, 37, 39, -1, -1, 41, -1, -1, -1, 43, 45, 47, 49, 51, 53, 55, -1, -1, -1, -1, 57, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 41: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, -1, 25, 27, 29, -1, 31, 33, 35, 37, 39, -1, -1, 41, -1, -1, -1, 43, 45, 47, 49, 51, 53, 55, -1, -1, -1, -1, 57, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 42: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, -1, 19, 21, 23, 25, -1, 27, 29, 31, 33, 35, 37, 39, 41, 43, -1, 45, 47, -1, -1, 49, 51, 53, 55, 57, -1, 59, -1, 61, -1, -1, 63, -1, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 43: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, -1, 19, 21, 23, 25, -1, 27, 29, 31, 33, 35, 37, 39, 41, 43, -1, 45, 47, -1, -1, 49, 51, 53, 55, 57, -1, 59, -1, 61, -1, -1, 63, -1, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 44: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, -1, 21, -1, -1, 23, 25, 27, -1, -1, -1, -1, -1, -1, 29, -1, 31, 33, -1, 35, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 45: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, -1, 21, -1, -1, 23, 25, 27, -1, -1, -1, -1, -1, -1, 29, -1, 31, 33, -1, 35, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 46: array([1, 3, 5, 7, 9, 11, 13, 15, -1, -1, -1, -1, -1, 17, 19, -1, 21, -1, 23, 25, 27, -1, 29, -1, -1, 31, 33, 35, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 47: array([1, 3, 5, 7, 9, 11, 13, 15, -1, -1, -1, -1, -1, 17, 19, -1, 21, -1, 23, 25, 27, -1, 29, -1, -1, 31, 33, 35, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 48: array([1, 3, 5, 7, 9, -1, 11, 13, 15, -1, -1, -1, -1, 17, 19, 21, 23, 25, 27, 29, 31, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 49: array([1, 3, 5, 7, 9, -1, 11, 13, 15, -1, -1, -1, -1, 17, 19, 21, 23, 25, 27, 29, 31, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 50: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, -1, 25, 27, 29, 31, 33, 35, -1, 37, -1, -1, -1, -1, -1, 39, -1, -1, 41, 43, 45, 47, -1, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 51: array([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, -1, 25, 27, 29, 31, 33, 35, -1, 37, -1, -1, -1, -1, -1, 39, -1, -1, 41, 43, 45, 47, -1, -1, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 52: array([1, 3, 5, -1, 7, 9, 11, 13, 15, 17, -1, 19, 21, 23, -1, -1, -1, -1, 25, -1, 27, 29, 31, -1, -1, 33, -1, 35, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1]), 53: array([1, 3, 5, -1, 7, 9, 11, 13, 15, 17, -1, 19, 21, 23, -1, -1, -1, -1, 25, -1, 27, 29, 31, -1, -1, 33, -1, 35, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1]), 54: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, -1, -1, 19, 21, 23, 25, 27, 29, 31, -1, -1, 33, -1, 35, 37, -1, -1, -1, 39, 41, -1, 43, -1, 45, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 55: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, -1, -1, 19, 21, 23, 25, 27, 29, 31, -1, -1, 33, -1, 35, 37, -1, -1, -1, 39, 41, -1, 43, -1, 45, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 56: array([1, 3, 5, 7, 9, 11, 13, -1, 15, -1, -1, 17, 19, -1, 21, 23, -1, 25, 27, -1, 29, 31, -1, -1, -1, -1, 33, 35, 37, 39, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 57: array([1, 3, 5, 7, 9, 11, 13, -1, 15, -1, -1, 17, 19, -1, 21, 23, -1, 25, 27, -1, 29, 31, -1, -1, -1, -1, 33, 35, 37, 39, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 58: array([1, 3, 5, 7, 9, 11, 13, 15, -1, -1, -1, -1, -1, 17, 19, 21, -1, 23, 25, -1, 27, 29, 31, -1, 33, 35, 37, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 59: array([1, 3, 5, 7, 9, 11, 13, 15, -1, -1, -1, -1, -1, 17, 19, 21, -1, 23, 25, -1, 27, 29, 31, -1, 33, 35, 37, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 60: array([1, 3, 5, 7, 9, 11, 13, -1, 15, 17, 19, 21, -1, -1, -1, 23, 25, 27, -1, 29, 31, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 35, 37, -1, -1, -1, -1, -1, -1]), 61: array([1, 3, 5, 7, 9, 11, 13, -1, 15, 17, 19, 21, -1, -1, -1, 23, 25, 27, -1, 29, 31, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 35, 37, -1, -1, -1, -1, -1, -1]), 62: array([1, 3, 5, -1, 7, 9, 11, -1, -1, 13, 15, 17, 19, -1, 21, 23, -1, 25, -1, -1, 27, 29, -1, -1, -1, -1, -1, 31, 33, -1, -1, -1, -1, -1, -1]), 63: array([1, 3, 5, -1, 7, 9, 11, -1, -1, 13, 15, 17, 19, -1, 21, 23, -1, 25, -1, -1, 27, 29, -1, -1, -1, -1, -1, 31, 33, -1, -1, -1, -1, -1, -1]), 64: array([1, 3, 5, 7, 9, -1, -1, 11, 13, 15, 17, -1, -1, -1, -1, -1, 19, -1, 21, 23, -1, -1, 25, -1, -1, -1, -1]), 65: array([1, 3, 5, 7, 9, -1, -1, 11, 13, 15, 17, -1, -1, -1, -1, -1, 19, -1, 21, 23, -1, -1, 25, -1, -1, -1, -1]), 66: array([1, 3, 5, 7, 9, 11, 13, -1, -1, -1, 15, -1, -1, 17, 19, -1, -1, -1, 21, 23, 25, 27, 29, 31, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1]), 67: array([1, 3, 5, 7, 9, 11, 13, -1, -1, -1, 15, -1, -1, 17, 19, -1, -1, -1, 21, 23, 25, 27, 29, 31, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1]), 68: array([1, 3, 5, 7, 9, 11, 13, 15, -1, -1, -1, -1, 17, -1, 19, -1, 21, -1, 23, -1, -1, 25, 27, -1, 29, -1, -1, -1, -1, -1, -1]), 69: array([1, 3, 5, 7, 9, 11, 13, 15, -1, -1, -1, -1, 17, -1, 19, -1, 21, -1, 23, -1, -1, 25, 27, -1, 29, -1, -1, -1, -1, -1, -1]), 70: array([1, 3, 5, -1, -1, 7, 9, 11, -1, 13, 15, -1, -1, -1, 17, 19, 21, 23, -1, -1, 25, -1, -1, -1, -1, -1, -1]), 71: array([1, 3, 5, -1, -1, 7, 9, 11, -1, 13, 15, -1, -1, -1, 17, 19, 21, 23, -1, -1, 25, -1, -1, -1, -1, -1, -1]), 72: array([1, 3, 5, 7, 9, -1, 11, -1, 13, -1, 15, 17, 19, 21, -1, -1, -1, -1, 23, 25, 27, -1, -1, 29, 31, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 73: array([1, 3, 5, 7, 9, -1, 11, -1, 13, -1, 15, 17, 19, 21, -1, -1, -1, -1, 23, 25, 27, -1, -1, 29, 31, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1]), 74: array([1, 3, 5, -1, -1, 7, 9, 11, 13, -1, 15, 17, 19, 21, -1, -1, -1, -1, -1, -1, 23, -1, 25, -1, -1, -1, -1]), 75: array([1, 3, 5, -1, -1, 7, 9, 11, 13, -1, 15, 17, 19, 21, -1, -1, -1, -1, -1, -1, 23, -1, 25, -1, -1, -1, -1]), 76: array([1, 3, 5, 7, 9, 11, 13, -1, -1, 15, -1, -1, -1, 17, 19, 21, -1, -1, -1, 23, -1, -1, -1, 25, 27, -1, -1, -1, -1]), 77: array([1, 3, 5, 7, 9, 11, 13, -1, -1, 15, -1, -1, -1, 17, 19, 21, -1, -1, -1, 23, -1, -1, -1, 25, 27, -1, -1, -1, -1]), 78: array([1, 3, 5, -1, -1, 7, 9, 11, -1, 13, 15, -1, -1, 17, 19, 21, 23, 25, 27, -1, -1, -1, -1, 29, 31, -1, -1, -1, -1, -1, -1, -1, -1]), 79: array([1, 3, 5, -1, -1, 7, 9, 11, -1, 13, 15, -1, -1, 17, 19, 21, 23, 25, 27, -1, -1, -1, -1, 29, 31, -1, -1, -1, -1, -1, -1, -1, -1]), 80: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, -1, -1, 19, -1, 21, -1, -1, -1, 23, -1, 25, -1, -1, -1, 27, -1, -1, -1, -1]), 81: array([1, 3, 5, 7, 9, 11, 13, 15, 17, -1, -1, -1, 19, -1, 21, -1, -1, -1, 23, -1, 25, -1, -1, -1, 27, -1, -1, -1, -1]), 82: array([1, 3, 5, -1, -1, 7, 9, 11, 13, -1, 15, -1, 17, -1, -1, 19, 21, -1, -1, -1, 23, 25, 27, -1, -1, -1, -1, -1, -1]), 83: array([1, 3, 5, -1, -1, 7, 9, 11, 13, -1, 15, -1, 17, -1, -1, 19, 21, -1, -1, -1, 23, 25, 27, -1, -1, -1, -1, -1, -1]), 84: array([1, -1, 3, 5, 7, 9, 11, 13, 15, 17, -1, -1, 19, -1, 21, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1]), 85: array([1, -1, 3, 5, 7, 9, 11, 13, 15, 17, -1, -1, 19, -1, 21, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1])}
split_feats_dict = {0: array([2278, 3069, 2425, 2371, 521, 440, 2476, 2400, 479, 2371, 2447, 2426, 2731, 725, 314, 1911, 650, 1521, 2548, 2684, 3063, 767, 2510, 1572, 431, 1990, 2, 1357, 2879, 2426, 2032, 1459, 1263, 1495, 0, 2691, 854, 1704, 2923, 0, 3056, 2647, 1502, 2179, 2208, 80, 531, 1108, 1416, 0, 0, 2236, 0, 2275, 5, 1839, 2423, 776, 2294, 329, 2230, 887, 2512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 1: array([2278, 3069, 2425, 2371, 521, 440, 2476, 2400, 479, 2371, 2447, 2426, 2731, 725, 314, 1911, 650, 1521, 2548, 2684, 3063, 767, 2510, 1572, 431, 1990, 2, 1357, 2879, 2426, 2032, 1459, 1263, 1495, 0, 2691, 854, 1704, 2923, 0, 3056, 2647, 1502, 2179, 2208, 80, 531, 1108, 1416, 0, 0, 2236, 0, 2275, 5, 1839, 2423, 776, 2294, 329, 2230, 887, 2512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 2: array([479, 3068, 2635, 2194, 2086, 2874, 90, 2016, 952, 1656, 2740, 2446, 2270, 239, 913, 1785, 1191, 1416, 2882, 56, 75, 1623, 2133, 1225, 2451, 2838, 1, 1907, 2833, 1807, 2439, 1324, 2586, 38, 2007, 2874, 1691, 1804, 2131, 0, 0, 1461, 2968, 650, 1883, 709, 2191, 433, 1653, 107, 1955, 2731, 1671, 0, 0, 1822, 1731, 2817, 1544, 2685, 1200, 1289, 2097, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 3: array([479, 3068, 2635, 2194, 2086, 2874, 90, 2016, 952, 1656, 2740, 2446, 2270, 239, 913, 1785, 1191, 1416, 2882, 56, 75, 1623, 2133, 1225, 2451, 2838, 1, 1907, 2833, 1807, 2439, 1324, 2586, 38, 2007, 2874, 1691, 1804, 2131, 0, 0, 1461, 2968, 650, 1883, 709, 2191, 433, 1653, 107, 1955, 2731, 1671, 0, 0, 1822, 1731, 2817, 1544, 2685, 1200, 1289, 2097, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 4: array([2230, 1306, 2290, 2208, 928, 2590, 2611, 1425, 1624, 1276, 2381, 2572, 2597, 2980, 53, 2537, 2037, 2234, 1806, 1533, 373, 0, 2156, 2600, 197, 1726, 2446, 1737, 1659, 2021, 681, 1257, 1862, 2514, 2818, 1015, 638, 2783, 2805, 2313, 0, 1362, 2296, 0, 0, 2365, 701, 2147, 514, 1673, 2782, 1489, 1744, 2987, 1671, 2527, 1834, 1596, 2387, 1151, 1929, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 5: array([2230, 1306, 2290, 2208, 928, 2590, 2611, 1425, 1624, 1276, 2381, 2572, 2597, 2980, 53, 2537, 2037, 2234, 1806, 1533, 373, 0, 2156, 2600, 197, 1726, 2446, 1737, 1659, 2021, 681, 1257, 1862, 2514, 2818, 1015, 638, 2783, 2805, 2313, 0, 1362, 2296, 0, 0, 2365, 701, 2147, 514, 1673, 2782, 1489, 1744, 2987, 1671, 2527, 1834, 1596, 2387, 1151, 1929, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 6: array([2224, 2225, 2653, 3053, 2038, 2876, 2458, 1829, 1952, 111, 0, 2797, 1134, 2662, 2851, 2692, 1753, 919, 1229, 0, 0, 2643, 1141, 2061, 2570, 1223, 2282, 2977, 1984, 1461, 2968, 0, 1914, 1356, 2337, 0, 0, 1599, 2435, 2155, 0, 0, 0, 2454, 1679, 1021, 0, 2828, 488, 1196, 1130, 1832, 2784, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 7: array([2224, 2225, 2653, 3053, 2038, 2876, 2458, 1829, 1952, 111, 0, 2797, 1134, 2662, 2851, 2692, 1753, 919, 1229, 0, 0, 2643, 1141, 2061, 2570, 1223, 2282, 2977, 1984, 1461, 2968, 0, 1914, 1356, 2337, 0, 0, 1599, 2435, 2155, 0, 0, 0, 2454, 1679, 1021, 0, 2828, 488, 1196, 1130, 1832, 2784, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 8: array([1034, 1223, 710, 1396, 1583, 1388, 2195, 1420, 1415, 1283, 129, 1055, 868, 1335, 2617, 531, 2, 2758, 777, 2421, 1077, 770, 2004, 551, 2727, 1331, 1229, 254, 1592, 18, 2099, 1419, 1706, 0, 2224, 1727, 2224, 2557, 816, 0, 0, 1326, 1897, 1325, 383, 3041, 2365, 0, 0, 708, 2476, 2649, 2270, 2309, 2098, 264, 1121, 0, 1690, 0, 0, 1674, 2738, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 9: array([1034, 1223, 710, 1396, 1583, 1388, 2195, 1420, 1415, 1283, 129, 1055, 868, 1335, 2617, 531, 2, 2758, 777, 2421, 1077, 770, 2004, 551, 2727, 1331, 1229, 254, 1592, 18, 2099, 1419, 1706, 0, 2224, 1727, 2224, 2557, 816, 0, 0, 1326, 1897, 1325, 383, 3041, 2365, 0, 0, 708, 2476, 2649, 2270, 2309, 2098, 264, 1121, 0, 1690, 0, 0, 1674, 2738, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 10: array([674, 2402, 672, 1358, 1196, 2131, 819, 230, 2187, 1197, 2381, 1977, 101, 1099, 2575, 388, 2670, 1425, 1780, 356, 2512, 1235, 1954, 0, 2649, 177, 1516, 845, 2175, 1973, 83, 2061, 536, 234, 924, 1000, 588, 2522, 0, 2067, 1809, 1130, 1492, 148, 165, 0, 0, 0, 0, 0, 0, 0, 2974, 1933, 2636, 771, 706, 2560, 926, 551, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 11: array([674, 2402, 672, 1358, 1196, 2131, 819, 230, 2187, 1197, 2381, 1977, 101, 1099, 2575, 388, 2670, 1425, 1780, 356, 2512, 1235, 1954, 0, 2649, 177, 1516, 845, 2175, 1973, 83, 2061, 536, 234, 924, 1000, 588, 2522, 0, 2067, 1809, 1130, 1492, 148, 165, 0, 0, 0, 0, 0, 0, 0, 2974, 1933, 2636, 771, 706, 2560, 926, 551, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 12: array([1903, 2692, 1971, 1560, 1112, 2346, 2745, 2140, 2173, 914, 2736, 2490, 674, 500, 2217, 2875, 1834, 2679, 2157, 2161, 1478, 0, 0, 1028, 2020, 1655, 2591, 2757, 1480, 1559, 1255, 1404, 1383, 1054, 1227, 1288, 1408, 2225, 614, 865, 2240, 1309, 2027, 774, 2725, 2133, 2213, 1752, 899, 3053, 2582, 1741, 2079, 0, 2873, 826, 2208, 2164, 1845, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 13: array([1903, 2692, 1971, 1560, 1112, 2346, 2745, 2140, 2173, 914, 2736, 2490, 674, 500, 2217, 2875, 1834, 2679, 2157, 2161, 1478, 0, 0, 1028, 2020, 1655, 2591, 2757, 1480, 1559, 1255, 1404, 1383, 1054, 1227, 1288, 1408, 2225, 614, 865, 2240, 1309, 2027, 774, 2725, 2133, 2213, 1752, 899, 3053, 2582, 1741, 2079, 0, 2873, 826, 2208, 2164, 1845, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 14: array([2383, 2494, 2882, 1977, 1592, 751, 2725, 1982, 853, 907, 1449, 1919, 2613, 2202, 1834, 1374, 1964, 1353, 2975, 1714, 910, 2288, 2089, 2288, 1218, 1507, 1475, 1247, 990, 2112, 1487, 0, 0, 1414, 643, 0, 0, 0, 2254, 1134, 0, 0, 0, 0, 0, 0, 1713, 1690, 0, 0, 96, 881, 1014, 1911, 1897, 2870, 2665, 490, 2538, 2233, 2124, 2035, 1185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 15: array([2383, 2494, 2882, 1977, 1592, 751, 2725, 1982, 853, 907, 1449, 1919, 2613, 2202, 1834, 1374, 1964, 1353, 2975, 1714, 910, 2288, 2089, 2288, 1218, 1507, 1475, 1247, 990, 2112, 1487, 0, 0, 1414, 643, 0, 0, 0, 2254, 1134, 0, 0, 0, 0, 0, 0, 1713, 1690, 0, 0, 96, 881, 1014, 1911, 1897, 2870, 2665, 490, 2538, 2233, 2124, 2035, 1185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 16: array([2281, 1819, 1886, 3055, 905, 1711, 1997, 1218, 895, 0, 2085, 1722, 1869, 2108, 585, 2276, 1962, 1970, 2659, 1698, 0, 2548, 449, 2607, 1864, 2758, 1189, 581, 1950, 2321, 1960, 1645, 1177, 1756, 1657, 0, 0, 0, 2993, 1151, 1653, 2767, 2318, 2610, 1643, 1222, 816, 1151, 569, 1191, 625, 40, 980, 1477, 2770, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 17: array([2281, 1819, 1886, 3055, 905, 1711, 1997, 1218, 895, 0, 2085, 1722, 1869, 2108, 585, 2276, 1962, 1970, 2659, 1698, 0, 2548, 449, 2607, 1864, 2758, 1189, 581, 1950, 2321, 1960, 1645, 1177, 1756, 1657, 0, 0, 0, 2993, 1151, 1653, 2767, 2318, 2610, 1643, 1222, 816, 1151, 569, 1191, 625, 40, 980, 1477, 2770, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 18: array([575, 10, 2191, 88, 2405, 2181, 2389, 862, 966, 1816, 1944, 2072, 1333, 2495, 542, 95, 1612, 0, 0, 1123, 1918, 2883, 0, 1735, 1588, 0, 2144, 503, 682, 1389, 276, 2876, 874, 268, 0, 2505, 0, 1652, 1781, 1389, 0, 2704, 2557, 2174, 2973, 1874, 1047, 0, 2533, 0, 1555, 1899, 901, 2829, 1931, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 19: array([575, 10, 2191, 88, 2405, 2181, 2389, 862, 966, 1816, 1944, 2072, 1333, 2495, 542, 95, 1612, 0, 0, 1123, 1918, 2883, 0, 1735, 1588, 0, 2144, 503, 682, 1389, 276, 2876, 874, 268, 0, 2505, 0, 1652, 1781, 1389, 0, 2704, 2557, 2174, 2973, 1874, 1047, 0, 2533, 0, 1555, 1899, 901, 2829, 1931, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 20: array([2035, 2205, 2920, 2137, 1952, 836, 2134, 1303, 2560, 918, 2852, 2294, 2249, 2333, 2040, 733, 0, 2184, 38, 1489, 1550, 2931, 2555, 2055, 0, 2030, 0, 2498, 2783, 15, 2220, 2109, 0, 2254, 2552, 1440, 1357, 0, 1000, 1513, 535, 2080, 696, 2036, 2385, 863, 2785, 0, 0, 58, 2221, 1951, 2522, 779, 1714, 2989, 1356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 21: array([2035, 2205, 2920, 2137, 1952, 836, 2134, 1303, 2560, 918, 2852, 2294, 2249, 2333, 2040, 733, 0, 2184, 38, 1489, 1550, 2931, 2555, 2055, 0, 2030, 0, 2498, 2783, 15, 2220, 2109, 0, 2254, 2552, 1440, 1357, 0, 1000, 1513, 535, 2080, 696, 2036, 2385, 863, 2785, 0, 0, 58, 2221, 1951, 2522, 779, 1714, 2989, 1356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 22: array([1993, 1887, 612, 525, 1036, 870, 2671, 558, 715, 1614, 2517, 1061, 1865, 3023, 2508, 652, 1718, 2253, 1472, 1230, 2091, 0, 0, 2246, 1056, 1883, 886, 813, 2878, 2596, 633, 0, 2208, 0, 0, 1025, 0, 1297, 1705, 0, 545, 2119, 0, 2278, 2568, 2128, 1080, 0, 2149, 1730, 2513, 2631, 1575, 2436, 1471, 3006, 2046, 859, 2004, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 23: array([1993, 1887, 612, 525, 1036, 870, 2671, 558, 715, 1614, 2517, 1061, 1865, 3023, 2508, 652, 1718, 2253, 1472, 1230, 2091, 0, 0, 2246, 1056, 1883, 886, 813, 2878, 2596, 633, 0, 2208, 0, 0, 1025, 0, 1297, 1705, 0, 545, 2119, 0, 2278, 2568, 2128, 1080, 0, 2149, 1730, 2513, 2631, 1575, 2436, 1471, 3006, 2046, 859, 2004, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 24: array([1193, 1059, 1095, 2215, 1271, 414, 2385, 1857, 2101, 2361, 0, 413, 706, 2079, 1991, 1099, 336, 2793, 609, 0, 0, 2021, 125, 2987, 708, 1413, 1713, 2217, 717, 795, 1488, 0, 1086, 0, 0, 534, 664, 1597, 2742, 0, 2039, 2994, 1684, 1104, 1378, 1154, 2976, 2485, 2640, 1433, 1872, 0, 2631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 25: array([1193, 1059, 1095, 2215, 1271, 414, 2385, 1857, 2101, 2361, 0, 413, 706, 2079, 1991, 1099, 336, 2793, 609, 0, 0, 2021, 125, 2987, 708, 1413, 1713, 2217, 717, 795, 1488, 0, 1086, 0, 0, 534, 664, 1597, 2742, 0, 2039, 2994, 1684, 1104, 1378, 1154, 2976, 2485, 2640, 1433, 1872, 0, 2631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 26: array([2781, 2482, 1645, 2749, 98, 1010, 2517, 2788, 2272, 0, 1365, 2879, 2277, 1671, 1688, 1455, 2361, 1340, 1996, 2279, 0, 2327, 1610, 0, 992, 2550, 2787, 2452, 0, 1715, 1206, 0, 1594, 1229, 1973, 2038, 2609, 0, 0, 1551, 1988, 804, 2854, 0, 0, 0, 0, 0, 1683, 0, 2007, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 27: array([2781, 2482, 1645, 2749, 98, 1010, 2517, 2788, 2272, 0, 1365, 2879, 2277, 1671, 1688, 1455, 2361, 1340, 1996, 2279, 0, 2327, 1610, 0, 992, 2550, 2787, 2452, 0, 1715, 1206, 0, 1594, 1229, 1973, 2038, 2609, 0, 0, 1551, 1988, 804, 2854, 0, 0, 0, 0, 0, 1683, 0, 2007, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 28: array([1054, 2106, 1999, 955, 1210, 1886, 969, 1908, 2353, 1259, 2421, 743, 2133, 2139, 1773, 0, 2645, 0, 2811, 0, 0, 948, 2308, 1195, 908, 1395, 2968, 2237, 2922, 1574, 1939, 0, 0, 2203, 0, 956, 861, 0, 0, 2968, 1891, 0, 2450, 0, 0, 0, 1926, 2146, 2775, 2709, 1114, 1273, 0, 2086, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 29: array([1054, 2106, 1999, 955, 1210, 1886, 969, 1908, 2353, 1259, 2421, 743, 2133, 2139, 1773, 0, 2645, 0, 2811, 0, 0, 948, 2308, 1195, 908, 1395, 2968, 2237, 2922, 1574, 1939, 0, 0, 2203, 0, 956, 861, 0, 0, 2968, 1891, 0, 2450, 0, 0, 0, 1926, 2146, 2775, 2709, 1114, 1273, 0, 2086, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 30: array([2, 323, 191, 2897, 2540, 716, 375, 1634, 259, 771, 2629, 2654, 57, 2521, 247, 1529, 212, 260, 322, 0, 738, 0, 0, 0, 2516, 0, 435, 2030, 2073, 1016, 1816, 1090, 3031, 1969, 0, 0, 0, 1198, 0, 0, 0, 2448, 0, 0, 0, 532, 1907, 2233, 2678, 0, 739, 2618, 1872, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 31: array([2, 323, 191, 2897, 2540, 716, 375, 1634, 259, 771, 2629, 2654, 57, 2521, 247, 1529, 212, 260, 322, 0, 738, 0, 0, 0, 2516, 0, 435, 2030, 2073, 1016, 1816, 1090, 3031, 1969, 0, 0, 0, 1198, 0, 0, 0, 2448, 0, 0, 0, 532, 1907, 2233, 2678, 0, 739, 2618, 1872, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 32: array([1442, 2117, 2783, 1689, 1500, 383, 2624, 2346, 2285, 1118, 1281, 2628, 1913, 1760, 129, 1916, 2158, 2067, 1276, 0, 2672, 0, 0, 0, 0, 1914, 2825, 1991, 2447, 2348, 1906, 1640, 1965, 0, 2610, 1781, 2415, 0, 0, 2897, 326, 2185, 1318, 0, 599, 2821, 1358, 0, 2185, 0, 2185, 1484, 522, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 33: array([1442, 2117, 2783, 1689, 1500, 383, 2624, 2346, 2285, 1118, 1281, 2628, 1913, 1760, 129, 1916, 2158, 2067, 1276, 0, 2672, 0, 0, 0, 0, 1914, 2825, 1991, 2447, 2348, 1906, 1640, 1965, 0, 2610, 1781, 2415, 0, 0, 2897, 326, 2185, 1318, 0, 599, 2821, 1358, 0, 2185, 0, 2185, 1484, 522, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 34: array([1393, 2092, 1369, 2272, 2266, 845, 1961, 1903, 2233, 1456, 0, 0, 0, 798, 1767, 1949, 1220, 1496, 1236, 0, 2623, 867, 2627, 1885, 1604, 0, 2986, 0, 0, 1513, 2978, 0, 1210, 0, 0, 0, 0, 0, 0, 0, 2507, 2544, 1781, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 35: array([1393, 2092, 1369, 2272, 2266, 845, 1961, 1903, 2233, 1456, 0, 0, 0, 798, 1767, 1949, 1220, 1496, 1236, 0, 2623, 867, 2627, 1885, 1604, 0, 2986, 0, 0, 1513, 2978, 0, 1210, 0, 0, 0, 0, 0, 0, 0, 2507, 2544, 1781, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 36: array([2126, 2807, 686, 1426, 2523, 2491, 2578, 1851, 2522, 734, 1830, 2197, 2109, 2496, 684, 1920, 1239, 1428, 2377, 618, 0, 1875, 2882, 0, 1551, 211, 0, 0, 0, 1955, 388, 2630, 1719, 0, 0, 2486, 0, 3059, 0, 0, 2473, 0, 0, 0, 0, 2123, 0, 0, 1486, 1724, 246, 1755, 1775, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 37: array([2126, 2807, 686, 1426, 2523, 2491, 2578, 1851, 2522, 734, 1830, 2197, 2109, 2496, 684, 1920, 1239, 1428, 2377, 618, 0, 1875, 2882, 0, 1551, 211, 0, 0, 0, 1955, 388, 2630, 1719, 0, 0, 2486, 0, 3059, 0, 0, 2473, 0, 0, 0, 0, 2123, 0, 0, 1486, 1724, 246, 1755, 1775, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 38: array([2, 1628, 2728, 2900, 43, 2338, 2370, 0, 0, 2, 1596, 1802, 2394, 2967, 2206, 0, 0, 1271, 0, 2713, 0, 1744, 0, 0, 2005, 2128, 2025, 0, 0, 0, 0, 0, 1586, 0, 0, 2018, 0, 2119, 260, 575, 1446, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 39: array([2, 1628, 2728, 2900, 43, 2338, 2370, 0, 0, 2, 1596, 1802, 2394, 2967, 2206, 0, 0, 1271, 0, 2713, 0, 1744, 0, 0, 2005, 2128, 2025, 0, 0, 0, 0, 0, 1586, 0, 0, 2018, 0, 2119, 260, 575, 1446, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 40: array([678, 674, 628, 2233, 190, 2250, 564, 1871, 1243, 1885, 1977, 1822, 0, 360, 2238, 1203, 0, 348, 898, 2036, 1519, 465, 0, 0, 1682, 0, 0, 0, 2238, 1099, 1773, 2103, 2073, 2704, 939, 0, 0, 0, 0, 2515, 0, 0, 1227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 41: array([678, 674, 628, 2233, 190, 2250, 564, 1871, 1243, 1885, 1977, 1822, 0, 360, 2238, 1203, 0, 348, 898, 2036, 1519, 465, 0, 0, 1682, 0, 0, 0, 2238, 1099, 1773, 2103, 2073, 2704, 939, 0, 0, 0, 0, 2515, 0, 0, 1227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 42: array([2885, 502, 2732, 386, 2327, 1045, 1934, 1829, 969, 0, 0, 953, 2470, 2209, 2450, 0, 2423, 1940, 906, 1486, 2174, 1769, 7, 1878, 1643, 0, 856, 790, 0, 0, 74, 1699, 1909, 1812, 1585, 0, 1202, 0, 1821, 0, 0, 49, 0, 2098, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 43: array([2885, 502, 2732, 386, 2327, 1045, 1934, 1829, 969, 0, 0, 953, 2470, 2209, 2450, 0, 2423, 1940, 906, 1486, 2174, 1769, 7, 1878, 1643, 0, 856, 790, 0, 0, 74, 1699, 1909, 1812, 1585, 0, 1202, 0, 1821, 0, 0, 49, 0, 2098, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 44: array([914, 497, 26, 1166, 994, 1213, 2523, 1412, 245, 1037, 0, 2085, 0, 0, 1775, 1646, 1449, 0, 0, 0, 0, 0, 0, 1971, 0, 309, 386, 0, 1834, 2197, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 45: array([914, 497, 26, 1166, 994, 1213, 2523, 1412, 245, 1037, 0, 2085, 0, 0, 1775, 1646, 1449, 0, 0, 0, 0, 0, 0, 1971, 0, 309, 386, 0, 1834, 2197, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 46: array([2972, 2633, 2639, 2332, 1536, 2444, 38, 2551, 0, 0, 0, 0, 0, 821, 202, 0, 2482, 0, 1369, 200, 52, 0, 1687, 0, 0, 862, 1251, 1862, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 47: array([2972, 2633, 2639, 2332, 1536, 2444, 38, 2551, 0, 0, 0, 0, 0, 821, 202, 0, 2482, 0, 1369, 200, 52, 0, 1687, 0, 0, 862, 1251, 1862, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 48: array([2093, 2588, 1219, 601, 1321, 0, 2585, 1555, 2425, 0, 0, 0, 0, 1552, 1651, 3051, 925, 2830, 2482, 2571, 732, 0, 0, 0, 927, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 49: array([2093, 2588, 1219, 601, 1321, 0, 2585, 1555, 2425, 0, 0, 0, 0, 1552, 1651, 3051, 925, 2830, 2482, 2571, 732, 0, 0, 0, 927, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 50: array([2514, 2336, 2140, 1307, 2720, 794, 2535, 1097, 1106, 3068, 2280, 2583, 0, 2660, 1548, 1896, 1241, 1007, 1062, 0, 2060, 0, 0, 0, 0, 0, 1960, 0, 0, 1291, 1916, 1305, 1507, 0, 0, 0, 0, 0, 0, 0, 1571, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 51: array([2514, 2336, 2140, 1307, 2720, 794, 2535, 1097, 1106, 3068, 2280, 2583, 0, 2660, 1548, 1896, 1241, 1007, 1062, 0, 2060, 0, 0, 0, 0, 0, 1960, 0, 0, 1291, 1916, 1305, 1507, 0, 0, 0, 0, 0, 0, 0, 1571, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 52: array([2591, 2077, 2411, 0, 1600, 1257, 2243, 1739, 842, 2403, 0, 1286, 2729, 1279, 0, 0, 0, 0, 2514, 0, 981, 1377, 1535, 0, 0, 2741, 0, 2606, 0, 0, 0, 0, 2304, 0, 0, 0, 0, 0, 0]), 53: array([2591, 2077, 2411, 0, 1600, 1257, 2243, 1739, 842, 2403, 0, 1286, 2729, 1279, 0, 0, 0, 0, 2514, 0, 981, 1377, 1535, 0, 0, 2741, 0, 2606, 0, 0, 0, 0, 2304, 0, 0, 0, 0, 0, 0]), 54: array([1912, 1918, 1973, 3068, 1332, 1903, 2388, 491, 1551, 0, 0, 0, 959, 3031, 2203, 2897, 2294, 2347, 2100, 0, 0, 1655, 0, 726, 1900, 0, 0, 0, 2825, 2303, 0, 1913, 0, 1416, 0, 0, 0, 810, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 55: array([1912, 1918, 1973, 3068, 1332, 1903, 2388, 491, 1551, 0, 0, 0, 959, 3031, 2203, 2897, 2294, 2347, 2100, 0, 0, 1655, 0, 726, 1900, 0, 0, 0, 2825, 2303, 0, 1913, 0, 1416, 0, 0, 0, 810, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 56: array([1225, 1375, 1272, 607, 1222, 1179, 2782, 0, 1327, 0, 0, 1484, 2762, 0, 2338, 2085, 0, 2368, 756, 0, 1306, 1188, 0, 0, 0, 0, 1876, 1488, 1876, 2486, 1274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 57: array([1225, 1375, 1272, 607, 1222, 1179, 2782, 0, 1327, 0, 0, 1484, 2762, 0, 2338, 2085, 0, 2368, 756, 0, 1306, 1188, 0, 0, 0, 0, 1876, 1488, 1876, 2486, 1274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 58: array([479, 539, 32, 1523, 1068, 1845, 183, 263, 0, 0, 0, 0, 0, 1778, 2951, 764, 0, 2131, 1200, 0, 2097, 1643, 251, 0, 1980, 1995, 1662, 1292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 59: array([479, 539, 32, 1523, 1068, 1845, 183, 263, 0, 0, 0, 0, 0, 1778, 2951, 764, 0, 2131, 1200, 0, 2097, 1643, 251, 0, 1980, 1995, 1662, 1292, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 60: array([1034, 2597, 1872, 1366, 2183, 1676, 1868, 0, 1324, 2439, 1629, 1442, 0, 0, 0, 2539, 521, 2987, 0, 1868, 1642, 0, 0, 1609, 0, 0, 0, 0, 0, 0, 0, 1069, 2711, 0, 0, 0, 0, 0, 0]), 61: array([1034, 2597, 1872, 1366, 2183, 1676, 1868, 0, 1324, 2439, 1629, 1442, 0, 0, 0, 2539, 521, 2987, 0, 1868, 1642, 0, 0, 1609, 0, 0, 0, 0, 0, 0, 0, 1069, 2711, 0, 0, 0, 0, 0, 0]), 62: array([1981, 2073, 1886, 0, 1957, 1572, 1878, 0, 0, 1791, 1478, 812, 2575, 0, 1784, 2130, 0, 1530, 0, 0, 241, 1374, 0, 0, 0, 0, 0, 239, 1538, 0, 0, 0, 0, 0, 0]), 63: array([1981, 2073, 1886, 0, 1957, 1572, 1878, 0, 0, 1791, 1478, 812, 2575, 0, 1784, 2130, 0, 1530, 0, 0, 241, 1374, 0, 0, 0, 0, 0, 239, 1538, 0, 0, 0, 0, 0, 0]), 64: array([1507, 2785, 605, 1008, 2356, 0, 0, 1518, 656, 739, 2917, 0, 0, 0, 0, 0, 2185, 0, 2478, 2453, 0, 0, 2569, 0, 0, 0, 0]), 65: array([1507, 2785, 605, 1008, 2356, 0, 0, 1518, 656, 739, 2917, 0, 0, 0, 0, 0, 2185, 0, 2478, 2453, 0, 0, 2569, 0, 0, 0, 0]), 66: array([2495, 1974, 2606, 1879, 1749, 2484, 2304, 0, 0, 0, 1911, 0, 0, 5, 2027, 0, 0, 0, 2315, 1758, 2461, 2645, 1334, 2609, 0, 0, 1773, 0, 0, 0, 0, 0, 0, 0, 0]), 67: array([2495, 1974, 2606, 1879, 1749, 2484, 2304, 0, 0, 0, 1911, 0, 0, 5, 2027, 0, 0, 0, 2315, 1758, 2461, 2645, 1334, 2609, 0, 0, 1773, 0, 0, 0, 0, 0, 0, 0, 0]), 68: array([251, 439, 593, 2079, 909, 224, 1478, 2521, 0, 0, 0, 0, 2422, 0, 1379, 0, 1897, 0, 2473, 0, 0, 2389, 2237, 0, 2331, 0, 0, 0, 0, 0, 0]), 69: array([251, 439, 593, 2079, 909, 224, 1478, 2521, 0, 0, 0, 0, 2422, 0, 1379, 0, 1897, 0, 2473, 0, 0, 2389, 2237, 0, 2331, 0, 0, 0, 0, 0, 0]), 70: array([1230, 1393, 1327, 0, 0, 1126, 1321, 2076, 0, 1020, 2097, 0, 0, 0, 1036, 1873, 1584, 2074, 0, 0, 2397, 0, 0, 0, 0, 0, 0]), 71: array([1230, 1393, 1327, 0, 0, 1126, 1321, 2076, 0, 1020, 2097, 0, 0, 0, 1036, 1873, 1584, 2074, 0, 0, 2397, 0, 0, 0, 0, 0, 0]), 72: array([578, 923, 191, 1176, 1440, 0, 777, 0, 3062, 0, 1872, 617, 520, 2005, 0, 0, 0, 0, 1586, 1644, 2147, 0, 0, 2126, 2512, 2591, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 73: array([578, 923, 191, 1176, 1440, 0, 777, 0, 3062, 0, 1872, 617, 520, 2005, 0, 0, 0, 0, 1586, 1644, 2147, 0, 0, 2126, 2512, 2591, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 74: array([2551, 2452, 1002, 0, 0, 645, 741, 2053, 1353, 0, 2258, 1183, 1159, 976, 0, 0, 0, 0, 0, 0, 3007, 0, 933, 0, 0, 0, 0]), 75: array([2551, 2452, 1002, 0, 0, 645, 741, 2053, 1353, 0, 2258, 1183, 1159, 976, 0, 0, 0, 0, 0, 0, 3007, 0, 933, 0, 0, 0, 0]), 76: array([1184, 1352, 1182, 2342, 2609, 2219, 1965, 0, 0, 983, 0, 0, 0, 1518, 2705, 1607, 0, 0, 0, 2594, 0, 0, 0, 2275, 2400, 0, 0, 0, 0]), 77: array([1184, 1352, 1182, 2342, 2609, 2219, 1965, 0, 0, 983, 0, 0, 0, 1518, 2705, 1607, 0, 0, 0, 2594, 0, 0, 0, 2275, 2400, 0, 0, 0, 0]), 78: array([1247, 2402, 1365, 0, 0, 2712, 1912, 2080, 0, 1335, 1938, 0, 0, 1372, 1697, 2054, 2388, 1852, 497, 0, 0, 0, 0, 1986, 1431, 0, 0, 0, 0, 0, 0, 0, 0]), 79: array([1247, 2402, 1365, 0, 0, 2712, 1912, 2080, 0, 1335, 1938, 0, 0, 1372, 1697, 2054, 2388, 1852, 497, 0, 0, 0, 0, 1986, 1431, 0, 0, 0, 0, 0, 0, 0, 0]), 80: array([3, 117, 6, 401, 736, 537, 1478, 1626, 823, 0, 0, 0, 1059, 0, 1111, 0, 0, 0, 1306, 0, 926, 0, 0, 0, 930, 0, 0, 0, 0]), 81: array([3, 117, 6, 401, 736, 537, 1478, 1626, 823, 0, 0, 0, 1059, 0, 1111, 0, 0, 0, 1306, 0, 926, 0, 0, 0, 930, 0, 0, 0, 0]), 82: array([2272, 2072, 982, 0, 0, 2899, 1449, 2734, 2029, 0, 2614, 0, 308, 0, 0, 2013, 1452, 0, 0, 0, 3006, 1470, 761, 0, 0, 0, 0, 0, 0]), 83: array([2272, 2072, 982, 0, 0, 2899, 1449, 2734, 2029, 0, 2614, 0, 308, 0, 0, 2013, 1452, 0, 0, 0, 3006, 1470, 761, 0, 0, 0, 0, 0, 0]), 84: array([1373, 0, 1378, 1018, 932, 1976, 2188, 1121, 1428, 1984, 0, 0, 2081, 0, 2323, 0, 0, 0, 1300, 0, 0, 0, 0, 0, 0]), 85: array([1373, 0, 1378, 1018, 932, 1976, 2188, 1121, 1428, 1984, 0, 0, 2081, 0, 2323, 0, 0, 0, 1300, 0, 0, 0, 0, 0, 0])}
split_vals_dict = {0: array([79.5, 62.5, 70.5, 31.5, 180.5, 166.5, 70.5, 25.0, 50.5, 67.5, 158.5, 91.0, 44.5, 153.5, 72.5, 40.0, 250.0, 54.5, 27.5, 6.0, 114.5, 125.0, 124.0, 43.5, 66.5, 220.0, 133.0, 86.5, 130.0, 48.5, 80.5, 198.5, 146.0, 226.0, 170.0, 63.0, 127.0, 52.0, 35.5, 0.0, 86.5, 44.5, 220.5, 105.0, 176.5, 178.5, 252.5, 101.0, 26.5, 0.0, 0.0, 5.0, 77.0, 158.5, 239.5, 111.0, 40.0, 123.5, 156.0, 81.5, 88.5, 83.5, 60.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 1: array([79.5, 62.5, 70.5, 31.5, 180.5, 166.5, 70.5, 25.0, 50.5, 67.5, 158.5, 91.0, 44.5, 153.5, 72.5, 40.0, 250.0, 54.5, 27.5, 6.0, 114.5, 125.0, 124.0, 43.5, 66.5, 220.0, 133.0, 86.5, 130.0, 48.5, 80.5, 198.5, 146.0, 226.0, 170.0, 63.0, 127.0, 52.0, 35.5, 0.0, 86.5, 44.5, 220.5, 105.0, 176.5, 178.5, 252.5, 101.0, 26.5, 0.0, 0.0, 5.0, 77.0, 158.5, 239.5, 111.0, 40.0, 123.5, 156.0, 81.5, 88.5, 83.5, 60.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 2: array([120.5, 88.5, 51.5, 44.5, 70.5, 86.5, 240.5, 40.5, 55.5, 11.5, 60.5, 23.5, 218.5, 119.5, 217.0, 55.0, 18.5, 45.5, 113.0, 75.5, 14.5, 28.5, 117.5, 32.0, 97.0, 44.5, 235.5, 102.5, 33.5, 211.0, 59.5, 188.0, 20.5, 28.5, 207.5, 56.0, 21.0, 40.0, 152.0, 0.0, 0.0, 109.0, 72.5, 43.0, 249.0, 114.5, 78.5, 128.0, 213.0, 102.5, 141.5, 34.5, 35.5, 0.0, 0.0, 82.5, 144.5, 103.5, 110.5, 244.5, 202.5, 212.0, 81.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 3: array([120.5, 88.5, 51.5, 44.5, 70.5, 86.5, 240.5, 40.5, 55.5, 11.5, 60.5, 23.5, 218.5, 119.5, 217.0, 55.0, 18.5, 45.5, 113.0, 75.5, 14.5, 28.5, 117.5, 32.0, 97.0, 44.5, 235.5, 102.5, 33.5, 211.0, 59.5, 188.0, 20.5, 28.5, 207.5, 56.0, 21.0, 40.0, 152.0, 0.0, 0.0, 109.0, 72.5, 43.0, 249.0, 114.5, 78.5, 128.0, 213.0, 102.5, 141.5, 34.5, 35.5, 0.0, 0.0, 82.5, 144.5, 103.5, 110.5, 244.5, 202.5, 212.0, 81.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 4: array([52.5, 199.5, 60.5, 55.5, 217.5, 89.5, 51.5, 77.5, 212.5, 64.0, 13.0, 45.5, 47.5, 45.5, 68.5, 24.5, 63.0, 101.5, 176.0, 112.5, 115.0, 0.0, 30.0, 25.5, 58.5, 111.0, 164.0, 84.5, 38.5, 69.5, 227.5, 17.5, 29.5, 39.5, 51.5, 253.5, 150.5, 83.0, 63.0, 55.0, 0.0, 52.5, 70.5, 0.0, 0.0, 20.5, 162.0, 176.0, 57.0, 174.0, 118.0, 32.5, 123.0, 38.0, 178.0, 56.5, 201.5, 125.5, 217.0, 74.5, 199.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 5: array([52.5, 199.5, 60.5, 55.5, 217.5, 89.5, 51.5, 77.5, 212.5, 64.0, 13.0, 45.5, 47.5, 45.5, 68.5, 24.5, 63.0, 101.5, 176.0, 112.5, 115.0, 0.0, 30.0, 25.5, 58.5, 111.0, 164.0, 84.5, 38.5, 69.5, 227.5, 17.5, 29.5, 39.5, 51.5, 253.5, 150.5, 83.0, 63.0, 55.0, 0.0, 52.5, 70.5, 0.0, 0.0, 20.5, 162.0, 176.0, 57.0, 174.0, 118.0, 32.5, 123.0, 38.0, 178.0, 56.5, 201.5, 125.5, 217.0, 74.5, 199.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 6: array([44.5, 59.5, 49.5, 71.5, 71.0, 65.5, 44.5, 145.5, 213.0, 117.0, 0.0, 99.5, 16.5, 49.5, 42.5, 52.5, 106.5, 239.5, 184.0, 0.0, 0.0, 12.5, 208.0, 69.5, 50.5, 132.0, 170.5, 40.5, 51.5, 170.0, 84.5, 0.0, 115.5, 39.0, 75.5, 0.0, 0.0, 26.5, 87.5, 26.5, 181.0, 0.0, 0.0, 2.5, 61.0, 84.5, 0.0, 92.5, 148.0, 78.5, 236.5, 160.0, 241.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 7: array([44.5, 59.5, 49.5, 71.5, 71.0, 65.5, 44.5, 145.5, 213.0, 117.0, 0.0, 99.5, 16.5, 49.5, 42.5, 52.5, 106.5, 239.5, 184.0, 0.0, 0.0, 12.5, 208.0, 69.5, 50.5, 132.0, 170.5, 40.5, 51.5, 170.0, 84.5, 0.0, 115.5, 39.0, 75.5, 0.0, 0.0, 26.5, 87.5, 26.5, 181.0, 0.0, 0.0, 2.5, 61.0, 84.5, 0.0, 92.5, 148.0, 78.5, 236.5, 160.0, 241.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 8: array([166.5, 164.5, 157.5, 69.5, 95.0, 104.5, 179.5, 113.5, 174.5, 69.5, 117.5, 111.5, 135.0, 243.5, 56.0, 73.5, 62.0, 230.5, 195.5, 60.5, 179.5, 133.5, 203.0, 93.5, 48.0, 119.5, 95.5, 145.5, 57.0, 149.0, 146.5, 91.5, 53.5, 0.0, 54.0, 38.5, 216.5, 65.5, 203.5, 0.0, 0.0, 76.0, 91.0, 123.5, 84.5, 63.5, 103.0, 0.0, 0.0, 53.5, 24.5, 51.5, 138.5, 171.5, 189.0, 120.0, 135.0, 0.0, 218.0, 0.0, 0.0, 172.5, 33.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 9: array([166.5, 164.5, 157.5, 69.5, 95.0, 104.5, 179.5, 113.5, 174.5, 69.5, 117.5, 111.5, 135.0, 243.5, 56.0, 73.5, 62.0, 230.5, 195.5, 60.5, 179.5, 133.5, 203.0, 93.5, 48.0, 119.5, 95.5, 145.5, 57.0, 149.0, 146.5, 91.5, 53.5, 0.0, 54.0, 38.5, 216.5, 65.5, 203.5, 0.0, 0.0, 76.0, 91.0, 123.5, 84.5, 63.5, 103.0, 0.0, 0.0, 53.5, 24.5, 51.5, 138.5, 171.5, 189.0, 120.0, 135.0, 0.0, 218.0, 0.0, 0.0, 172.5, 33.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 10: array([95.5, 98.5, 85.5, 93.5, 89.5, 43.5, 81.5, 104.0, 180.0, 80.5, 196.5, 38.5, 81.5, 63.5, 40.5, 55.5, 155.5, 45.5, 202.0, 204.5, 107.5, 231.0, 64.5, 0.0, 56.5, 96.0, 29.5, 125.5, 100.5, 66.5, 99.5, 75.0, 110.5, 253.5, 86.0, 55.5, 225.0, 68.0, 0.0, 192.5, 129.5, 61.5, 61.0, 186.5, 201.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.5, 156.5, 40.0, 122.5, 237.0, 39.5, 230.5, 115.5, 179.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 11: array([95.5, 98.5, 85.5, 93.5, 89.5, 43.5, 81.5, 104.0, 180.0, 80.5, 196.5, 38.5, 81.5, 63.5, 40.5, 55.5, 155.5, 45.5, 202.0, 204.5, 107.5, 231.0, 64.5, 0.0, 56.5, 96.0, 29.5, 125.5, 100.5, 66.5, 99.5, 75.0, 110.5, 253.5, 86.0, 55.5, 225.0, 68.0, 0.0, 192.5, 129.5, 61.5, 61.0, 186.5, 201.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.5, 156.5, 40.0, 122.5, 237.0, 39.5, 230.5, 115.5, 179.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 12: array([76.5, 123.5, 152.5, 78.5, 231.5, 70.5, 146.5, 50.5, 42.5, 85.5, 116.0, 99.5, 72.5, 243.5, 149.5, 46.0, 116.5, 45.0, 73.0, 118.5, 34.5, 0.0, 0.0, 68.5, 217.5, 75.5, 101.5, 126.5, 102.0, 128.5, 107.5, 56.5, 139.0, 25.5, 116.0, 118.0, 201.0, 27.5, 196.0, 214.5, 99.0, 96.0, 162.0, 46.5, 19.5, 148.5, 230.5, 66.0, 205.0, 29.5, 92.5, 102.0, 71.5, 0.0, 113.0, 101.5, 106.5, 177.5, 90.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 13: array([76.5, 123.5, 152.5, 78.5, 231.5, 70.5, 146.5, 50.5, 42.5, 85.5, 116.0, 99.5, 72.5, 243.5, 149.5, 46.0, 116.5, 45.0, 73.0, 118.5, 34.5, 0.0, 0.0, 68.5, 217.5, 75.5, 101.5, 126.5, 102.0, 128.5, 107.5, 56.5, 139.0, 25.5, 116.0, 118.0, 201.0, 27.5, 196.0, 214.5, 99.0, 96.0, 162.0, 46.5, 19.5, 148.5, 230.5, 66.0, 205.0, 29.5, 92.5, 102.0, 71.5, 0.0, 113.0, 101.5, 106.5, 177.5, 90.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 14: array([57.5, 58.5, 74.5, 79.5, 158.5, 68.5, 99.5, 16.5, 72.5, 228.5, 57.5, 70.5, 41.5, 91.5, 108.5, 160.5, 105.5, 43.0, 21.5, 226.0, 236.0, 42.5, 28.0, 97.0, 73.0, 117.5, 36.5, 76.5, 86.5, 107.5, 110.5, 0.0, 0.0, 195.0, 72.0, 0.0, 0.0, 0.0, 82.5, 90.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 60.5, 110.0, 0.0, 0.0, 106.0, 74.5, 200.5, 169.5, 43.5, 45.0, 102.5, 100.0, 27.5, 54.5, 118.5, 89.5, 90.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 15: array([57.5, 58.5, 74.5, 79.5, 158.5, 68.5, 99.5, 16.5, 72.5, 228.5, 57.5, 70.5, 41.5, 91.5, 108.5, 160.5, 105.5, 43.0, 21.5, 226.0, 236.0, 42.5, 28.0, 97.0, 73.0, 117.5, 36.5, 76.5, 86.5, 107.5, 110.5, 0.0, 0.0, 195.0, 72.0, 0.0, 0.0, 0.0, 82.5, 90.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 60.5, 110.0, 0.0, 0.0, 106.0, 74.5, 200.5, 169.5, 43.5, 45.0, 102.5, 100.0, 27.5, 54.5, 118.5, 89.5, 90.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 16: array([57.5, 186.5, 106.5, 74.5, 49.0, 67.5, 105.5, 145.5, 235.5, 0.0, 117.0, 65.5, 104.5, 71.5, 204.5, 31.5, 56.0, 94.5, 82.0, 48.0, 0.0, 155.5, 137.5, 169.5, 70.5, 45.5, 124.5, 192.5, 178.5, 29.5, 131.0, 86.0, 212.0, 80.5, 57.5, 0.0, 0.0, 0.0, 153.0, 40.0, 67.0, 98.5, 106.5, 55.5, 162.5, 158.0, 79.5, 67.5, 56.0, 81.5, 224.5, 168.5, 237.5, 114.5, 45.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 17: array([57.5, 186.5, 106.5, 74.5, 49.0, 67.5, 105.5, 145.5, 235.5, 0.0, 117.0, 65.5, 104.5, 71.5, 204.5, 31.5, 56.0, 94.5, 82.0, 48.0, 0.0, 155.5, 137.5, 169.5, 70.5, 45.5, 124.5, 192.5, 178.5, 29.5, 131.0, 86.0, 212.0, 80.5, 57.5, 0.0, 0.0, 0.0, 153.0, 40.0, 67.0, 98.5, 106.5, 55.5, 162.5, 158.0, 79.5, 67.5, 56.0, 81.5, 224.5, 168.5, 237.5, 114.5, 45.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 18: array([154.5, 179.5, 93.5, 187.5, 129.5, 120.5, 92.5, 157.5, 170.5, 113.5, 167.5, 81.5, 41.5, 80.5, 163.5, 58.5, 180.0, 0.0, 0.0, 164.5, 138.5, 242.0, 0.0, 56.0, 81.5, 0.0, 129.5, 149.5, 91.0, 121.5, 254.5, 29.5, 139.5, 172.5, 0.0, 140.5, 0.0, 72.5, 159.5, 59.5, 0.0, 94.5, 76.5, 64.0, 49.5, 57.5, 207.5, 0.0, 41.5, 0.0, 214.0, 76.0, 142.0, 29.5, 214.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 19: array([154.5, 179.5, 93.5, 187.5, 129.5, 120.5, 92.5, 157.5, 170.5, 113.5, 167.5, 81.5, 41.5, 80.5, 163.5, 58.5, 180.0, 0.0, 0.0, 164.5, 138.5, 242.0, 0.0, 56.0, 81.5, 0.0, 129.5, 149.5, 91.0, 121.5, 254.5, 29.5, 139.5, 172.5, 0.0, 140.5, 0.0, 72.5, 159.5, 59.5, 0.0, 94.5, 76.5, 64.0, 49.5, 57.5, 207.5, 0.0, 41.5, 0.0, 214.0, 76.0, 142.0, 29.5, 214.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 20: array([97.5, 127.5, 49.5, 30.5, 76.5, 188.0, 158.5, 241.0, 37.5, 73.5, 86.5, 170.5, 116.5, 84.5, 146.5, 224.0, 0.0, 41.5, 36.5, 31.5, 126.5, 86.0, 187.5, 60.5, 0.0, 117.0, 0.0, 118.5, 197.5, 186.5, 106.5, 32.5, 0.0, 56.5, 6.5, 45.5, 107.5, 0.0, 52.0, 136.0, 115.0, 150.0, 135.5, 29.0, 182.0, 91.0, 41.5, 0.0, 0.0, 212.0, 147.0, 163.5, 116.5, 118.5, 210.5, 98.5, 147.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 21: array([97.5, 127.5, 49.5, 30.5, 76.5, 188.0, 158.5, 241.0, 37.5, 73.5, 86.5, 170.5, 116.5, 84.5, 146.5, 224.0, 0.0, 41.5, 36.5, 31.5, 126.5, 86.0, 187.5, 60.5, 0.0, 117.0, 0.0, 118.5, 197.5, 186.5, 106.5, 32.5, 0.0, 56.5, 6.5, 45.5, 107.5, 0.0, 52.0, 136.0, 115.0, 150.0, 135.5, 29.0, 182.0, 91.0, 41.5, 0.0, 0.0, 212.0, 147.0, 163.5, 116.5, 118.5, 210.5, 98.5, 147.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 22: array([50.5, 70.5, 102.5, 108.5, 215.5, 95.5, 61.5, 94.5, 157.5, 164.5, 73.5, 64.5, 126.5, 76.5, 70.5, 34.0, 110.5, 125.5, 77.5, 44.5, 77.0, 0.0, 0.0, 41.5, 76.5, 10.0, 139.5, 111.5, 67.5, 83.5, 80.5, 0.0, 92.0, 0.0, 0.0, 183.5, 0.0, 90.0, 118.5, 0.0, 215.0, 72.0, 0.0, 54.0, 193.5, 56.5, 103.5, 0.0, 161.5, 95.5, 100.5, 50.0, 201.5, 36.0, 55.5, 39.0, 95.5, 178.5, 87.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 23: array([50.5, 70.5, 102.5, 108.5, 215.5, 95.5, 61.5, 94.5, 157.5, 164.5, 73.5, 64.5, 126.5, 76.5, 70.5, 34.0, 110.5, 125.5, 77.5, 44.5, 77.0, 0.0, 0.0, 41.5, 76.5, 10.0, 139.5, 111.5, 67.5, 83.5, 80.5, 0.0, 92.0, 0.0, 0.0, 183.5, 0.0, 90.0, 118.5, 0.0, 215.0, 72.0, 0.0, 54.0, 193.5, 56.5, 103.5, 0.0, 161.5, 95.5, 100.5, 50.0, 201.5, 36.0, 55.5, 39.0, 95.5, 178.5, 87.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 24: array([97.5, 236.5, 148.5, 69.5, 199.0, 130.5, 135.5, 114.5, 48.5, 191.5, 0.0, 109.5, 148.5, 136.5, 88.5, 87.5, 33.5, 77.5, 89.5, 0.0, 0.0, 61.5, 102.5, 74.5, 148.5, 136.5, 88.0, 189.5, 85.5, 99.5, 70.5, 0.0, 168.5, 0.0, 0.0, 88.0, 56.5, 152.5, 129.5, 0.0, 48.5, 71.0, 196.5, 90.0, 114.5, 204.0, 69.5, 63.0, 49.0, 126.5, 90.0, 0.0, 52.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 25: array([97.5, 236.5, 148.5, 69.5, 199.0, 130.5, 135.5, 114.5, 48.5, 191.5, 0.0, 109.5, 148.5, 136.5, 88.5, 87.5, 33.5, 77.5, 89.5, 0.0, 0.0, 61.5, 102.5, 74.5, 148.5, 136.5, 88.0, 189.5, 85.5, 99.5, 70.5, 0.0, 168.5, 0.0, 0.0, 88.0, 56.5, 152.5, 129.5, 0.0, 48.5, 71.0, 196.5, 90.0, 114.5, 204.0, 69.5, 63.0, 49.0, 126.5, 90.0, 0.0, 52.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 26: array([160.5, 172.5, 168.5, 39.5, 30.0, 216.5, 143.0, 65.5, 39.5, 0.0, 207.5, 156.5, 94.0, 111.5, 212.5, 74.5, 21.5, 123.0, 161.5, 79.5, 0.0, 88.5, 206.5, 0.0, 241.5, 136.5, 143.0, 81.5, 0.0, 107.0, 185.5, 0.0, 199.5, 53.5, 60.0, 50.5, 138.0, 0.0, 0.0, 159.5, 170.0, 29.5, 168.5, 0.0, 0.0, 0.0, 0.0, 0.0, 119.5, 0.0, 126.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 27: array([160.5, 172.5, 168.5, 39.5, 30.0, 216.5, 143.0, 65.5, 39.5, 0.0, 207.5, 156.5, 94.0, 111.5, 212.5, 74.5, 21.5, 123.0, 161.5, 79.5, 0.0, 88.5, 206.5, 0.0, 241.5, 136.5, 143.0, 81.5, 0.0, 107.0, 185.5, 0.0, 199.5, 53.5, 60.0, 50.5, 138.0, 0.0, 0.0, 159.5, 170.0, 29.5, 168.5, 0.0, 0.0, 0.0, 0.0, 0.0, 119.5, 0.0, 126.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 28: array([79.5, 76.5, 74.5, 41.5, 40.5, 88.5, 216.5, 22.0, 31.5, 69.5, 175.5, 201.5, 39.5, 85.5, 112.5, 0.0, 139.5, 0.0, 119.5, 0.0, 0.0, 70.5, 152.5, 112.5, 141.0, 129.0, 66.0, 63.5, 49.5, 164.0, 207.5, 0.0, 0.0, 37.0, 0.0, 87.5, 35.5, 0.0, 0.0, 131.5, 19.5, 0.0, 51.5, 0.0, 0.0, 0.0, 168.0, 93.0, 72.5, 27.5, 82.5, 85.0, 0.0, 178.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 29: array([79.5, 76.5, 74.5, 41.5, 40.5, 88.5, 216.5, 22.0, 31.5, 69.5, 175.5, 201.5, 39.5, 85.5, 112.5, 0.0, 139.5, 0.0, 119.5, 0.0, 0.0, 70.5, 152.5, 112.5, 141.0, 129.0, 66.0, 63.5, 49.5, 164.0, 207.5, 0.0, 0.0, 37.0, 0.0, 87.5, 35.5, 0.0, 0.0, 131.5, 19.5, 0.0, 51.5, 0.0, 0.0, 0.0, 168.0, 93.0, 72.5, 27.5, 82.5, 85.0, 0.0, 178.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 30: array([104.5, 113.5, 112.5, 107.5, 151.5, 125.5, 214.5, 98.5, 64.5, 27.5, 185.0, 45.5, 68.5, 50.5, 225.5, 151.0, 77.5, 51.5, 130.5, 0.0, 196.0, 0.0, 0.0, 0.0, 128.5, 0.0, 205.5, 138.5, 204.5, 99.5, 91.5, 50.5, 68.5, 95.0, 0.0, 0.0, 0.0, 87.5, 0.0, 0.0, 0.0, 81.5, 0.0, 0.0, 0.0, 208.5, 126.5, 46.5, 155.0, 0.0, 195.0, 66.5, 135.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 31: array([104.5, 113.5, 112.5, 107.5, 151.5, 125.5, 214.5, 98.5, 64.5, 27.5, 185.0, 45.5, 68.5, 50.5, 225.5, 151.0, 77.5, 51.5, 130.5, 0.0, 196.0, 0.0, 0.0, 0.0, 128.5, 0.0, 205.5, 138.5, 204.5, 99.5, 91.5, 50.5, 68.5, 95.0, 0.0, 0.0, 0.0, 87.5, 0.0, 0.0, 0.0, 81.5, 0.0, 0.0, 0.0, 208.5, 126.5, 46.5, 155.0, 0.0, 195.0, 66.5, 135.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 32: array([112.5, 104.5, 122.5, 135.5, 196.5, 91.0, 127.5, 92.5, 149.0, 48.5, 186.5, 133.5, 93.5, 132.5, 172.5, 64.5, 48.5, 59.5, 134.5, 0.0, 174.5, 0.0, 0.0, 0.0, 0.0, 109.5, 30.5, 87.0, 29.5, 51.5, 162.5, 76.5, 41.5, 0.0, 45.5, 162.5, 161.5, 0.0, 0.0, 49.0, 154.5, 51.0, 116.5, 0.0, 99.0, 64.5, 152.5, 0.0, 176.5, 0.0, 183.5, 78.5, 177.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 33: array([112.5, 104.5, 122.5, 135.5, 196.5, 91.0, 127.5, 92.5, 149.0, 48.5, 186.5, 133.5, 93.5, 132.5, 172.5, 64.5, 48.5, 59.5, 134.5, 0.0, 174.5, 0.0, 0.0, 0.0, 0.0, 109.5, 30.5, 87.0, 29.5, 51.5, 162.5, 76.5, 41.5, 0.0, 45.5, 162.5, 161.5, 0.0, 0.0, 49.0, 154.5, 51.0, 116.5, 0.0, 99.0, 64.5, 152.5, 0.0, 176.5, 0.0, 183.5, 78.5, 177.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 34: array([191.5, 196.5, 124.5, 38.5, 210.5, 82.5, 88.0, 106.5, 200.5, 71.0, 0.0, 0.0, 0.0, 108.5, 153.5, 20.5, 146.0, 180.5, 125.5, 0.0, 74.5, 77.5, 49.5, 111.5, 174.5, 0.0, 48.5, 0.0, 0.0, 68.5, 80.5, 0.0, 103.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 139.5, 118.0, 194.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 35: array([191.5, 196.5, 124.5, 38.5, 210.5, 82.5, 88.0, 106.5, 200.5, 71.0, 0.0, 0.0, 0.0, 108.5, 153.5, 20.5, 146.0, 180.5, 125.5, 0.0, 74.5, 77.5, 49.5, 111.5, 174.5, 0.0, 48.5, 0.0, 0.0, 68.5, 80.5, 0.0, 103.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 139.5, 118.0, 194.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 36: array([77.5, 72.5, 96.5, 120.5, 143.5, 86.5, 43.5, 139.5, 42.5, 230.0, 129.0, 51.5, 207.5, 79.5, 170.5, 93.5, 110.5, 205.0, 102.5, 58.5, 0.0, 93.5, 133.0, 0.0, 139.5, 35.0, 0.0, 0.0, 0.0, 187.5, 192.5, 15.5, 102.0, 0.0, 0.0, 33.0, 0.0, 52.5, 0.0, 0.0, 166.5, 0.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 196.0, 220.5, 120.5, 185.0, 117.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 37: array([77.5, 72.5, 96.5, 120.5, 143.5, 86.5, 43.5, 139.5, 42.5, 230.0, 129.0, 51.5, 207.5, 79.5, 170.5, 93.5, 110.5, 205.0, 102.5, 58.5, 0.0, 93.5, 133.0, 0.0, 139.5, 35.0, 0.0, 0.0, 0.0, 187.5, 192.5, 15.5, 102.0, 0.0, 0.0, 33.0, 0.0, 52.5, 0.0, 0.0, 166.5, 0.0, 0.0, 0.0, 0.0, 87.0, 0.0, 0.0, 196.0, 220.5, 120.5, 185.0, 117.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 38: array([55.5, 42.5, 45.5, 50.0, 28.5, 69.5, 48.5, 0.0, 0.0, 17.5, 104.5, 136.0, 157.5, 53.5, 138.5, 0.0, 0.0, 101.5, 74.5, 23.5, 0.0, 92.0, 0.0, 0.0, 159.5, 39.5, 141.5, 0.0, 0.0, 0.0, 0.0, 0.0, 150.5, 0.0, 0.0, 66.5, 0.0, 67.5, 58.5, 150.5, 148.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 39: array([55.5, 42.5, 45.5, 50.0, 28.5, 69.5, 48.5, 0.0, 0.0, 17.5, 104.5, 136.0, 157.5, 53.5, 138.5, 0.0, 0.0, 101.5, 74.5, 23.5, 0.0, 92.0, 0.0, 0.0, 159.5, 39.5, 141.5, 0.0, 0.0, 0.0, 0.0, 0.0, 150.5, 0.0, 0.0, 66.5, 0.0, 67.5, 58.5, 150.5, 148.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 40: array([208.5, 192.5, 228.5, 53.5, 167.5, 186.5, 242.5, 186.5, 80.5, 113.5, 192.5, 76.0, 0.0, 228.5, 120.5, 152.5, 0.0, 93.5, 166.5, 82.5, 123.5, 228.0, 0.0, 0.0, 58.5, 0.0, 0.0, 0.0, 162.0, 34.5, 74.5, 79.5, 59.5, 50.5, 162.5, 0.0, 0.0, 0.0, 0.0, 57.5, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 41: array([208.5, 192.5, 228.5, 53.5, 167.5, 186.5, 242.5, 186.5, 80.5, 113.5, 192.5, 76.0, 0.0, 228.5, 120.5, 152.5, 0.0, 93.5, 166.5, 82.5, 123.5, 228.0, 0.0, 0.0, 58.5, 0.0, 0.0, 0.0, 162.0, 34.5, 74.5, 79.5, 59.5, 50.5, 162.5, 0.0, 0.0, 0.0, 0.0, 57.5, 0.0, 0.0, 227.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 42: array([117.5, 218.5, 160.5, 33.5, 63.5, 142.5, 154.5, 19.5, 163.5, 0.0, 0.0, 111.5, 155.5, 170.5, 111.5, 0.0, 95.0, 30.5, 159.5, 136.5, 66.5, 51.5, 193.5, 143.0, 171.5, 0.0, 85.5, 56.5, 0.0, 0.0, 224.5, 123.0, 154.5, 146.5, 162.0, 0.0, 170.5, 0.0, 75.5, 0.0, 0.0, 153.5, 0.0, 152.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 43: array([117.5, 218.5, 160.5, 33.5, 63.5, 142.5, 154.5, 19.5, 163.5, 0.0, 0.0, 111.5, 155.5, 170.5, 111.5, 0.0, 95.0, 30.5, 159.5, 136.5, 66.5, 51.5, 193.5, 143.0, 171.5, 0.0, 85.5, 56.5, 0.0, 0.0, 224.5, 123.0, 154.5, 146.5, 162.0, 0.0, 170.5, 0.0, 75.5, 0.0, 0.0, 153.5, 0.0, 152.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 44: array([201.5, 237.5, 182.5, 221.5, 199.0, 192.5, 56.5, 185.5, 205.5, 196.5, 0.0, 96.5, 0.0, 0.0, 189.5, 128.5, 50.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 161.5, 0.0, 125.5, 102.5, 0.0, 170.5, 71.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 45: array([201.5, 237.5, 182.5, 221.5, 199.0, 192.5, 56.5, 185.5, 205.5, 196.5, 0.0, 96.5, 0.0, 0.0, 189.5, 128.5, 50.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 161.5, 0.0, 125.5, 102.5, 0.0, 170.5, 71.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 46: array([56.5, 68.5, 31.5, 112.5, 113.5, 24.5, 67.5, 19.5, 0.0, 0.0, 0.0, 0.0, 0.0, 66.0, 127.5, 0.0, 33.5, 0.0, 81.5, 61.5, 123.5, 0.0, 60.5, 0.0, 0.0, 102.0, 155.5, 106.0, 209.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 47: array([56.5, 68.5, 31.5, 112.5, 113.5, 24.5, 67.5, 19.5, 0.0, 0.0, 0.0, 0.0, 0.0, 66.0, 127.5, 0.0, 33.5, 0.0, 81.5, 61.5, 123.5, 0.0, 60.5, 0.0, 0.0, 102.0, 155.5, 106.0, 209.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 48: array([207.5, 223.5, 116.5, 192.5, 155.5, 0.0, 164.0, 163.5, 66.5, 0.0, 0.0, 0.0, 0.0, 127.5, 191.5, 97.5, 89.5, 125.5, 96.5, 115.5, 127.0, 0.0, 0.0, 0.0, 225.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 49: array([207.5, 223.5, 116.5, 192.5, 155.5, 0.0, 164.0, 163.5, 66.5, 0.0, 0.0, 0.0, 0.0, 127.5, 191.5, 97.5, 89.5, 125.5, 96.5, 115.5, 127.0, 0.0, 0.0, 0.0, 225.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 50: array([149.5, 131.5, 69.5, 183.5, 137.5, 179.5, 204.5, 136.5, 183.5, 66.0, 132.5, 158.5, 0.0, 59.5, 165.5, 159.5, 127.5, 104.5, 177.5, 0.0, 102.5, 0.0, 0.0, 0.0, 0.0, 0.0, 45.5, 0.0, 0.0, 50.5, 138.5, 82.5, 108.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 190.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 51: array([149.5, 131.5, 69.5, 183.5, 137.5, 179.5, 204.5, 136.5, 183.5, 66.0, 132.5, 158.5, 0.0, 59.5, 165.5, 159.5, 127.5, 104.5, 177.5, 0.0, 102.5, 0.0, 0.0, 0.0, 0.0, 0.0, 45.5, 0.0, 0.0, 50.5, 138.5, 82.5, 108.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 190.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 52: array([51.5, 32.5, 66.5, 0.0, 156.5, 202.5, 83.5, 133.5, 132.5, 29.5, 0.0, 61.5, 56.5, 154.5, 0.0, 0.0, 0.0, 0.0, 106.5, 0.0, 186.5, 150.5, 53.5, 0.0, 0.0, 62.5, 0.0, 103.5, 0.0, 0.0, 0.0, 0.0, 191.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 53: array([51.5, 32.5, 66.5, 0.0, 156.5, 202.5, 83.5, 133.5, 132.5, 29.5, 0.0, 61.5, 56.5, 154.5, 0.0, 0.0, 0.0, 0.0, 106.5, 0.0, 186.5, 150.5, 53.5, 0.0, 0.0, 62.5, 0.0, 103.5, 0.0, 0.0, 0.0, 0.0, 191.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 54: array([118.5, 128.5, 60.5, 84.5, 108.5, 90.5, 129.5, 59.5, 108.5, 0.0, 0.0, 0.0, 82.0, 187.5, 175.5, 40.5, 41.5, 147.5, 117.5, 0.0, 0.0, 201.5, 0.0, 120.5, 175.5, 0.0, 0.0, 0.0, 44.5, 82.5, 0.0, 98.5, 0.0, 88.5, 0.0, 0.0, 0.0, 151.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 55: array([118.5, 128.5, 60.5, 84.5, 108.5, 90.5, 129.5, 59.5, 108.5, 0.0, 0.0, 0.0, 82.0, 187.5, 175.5, 40.5, 41.5, 147.5, 117.5, 0.0, 0.0, 201.5, 0.0, 120.5, 175.5, 0.0, 0.0, 0.0, 44.5, 82.5, 0.0, 98.5, 0.0, 88.5, 0.0, 0.0, 0.0, 151.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 56: array([78.5, 154.5, 193.5, 48.5, 56.5, 138.5, 61.5, 0.0, 103.5, 0.0, 0.0, 113.5, 45.5, 0.0, 160.5, 58.5, 0.0, 68.5, 104.5, 0.0, 141.5, 169.5, 0.0, 0.0, 0.0, 0.0, 139.5, 109.0, 179.5, 125.5, 196.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 57: array([78.5, 154.5, 193.5, 48.5, 56.5, 138.5, 61.5, 0.0, 103.5, 0.0, 0.0, 113.5, 45.5, 0.0, 160.5, 58.5, 0.0, 68.5, 104.5, 0.0, 141.5, 169.5, 0.0, 0.0, 0.0, 0.0, 139.5, 109.0, 179.5, 125.5, 196.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 58: array([114.5, 129.5, 106.5, 152.5, 159.5, 114.0, 220.5, 123.5, 0.0, 0.0, 0.0, 0.0, 0.0, 138.5, 73.5, 35.5, 0.0, 38.5, 87.5, 0.0, 182.0, 44.5, 43.5, 0.0, 178.5, 116.0, 110.5, 115.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 59: array([114.5, 129.5, 106.5, 152.5, 159.5, 114.0, 220.5, 123.5, 0.0, 0.0, 0.0, 0.0, 0.0, 138.5, 73.5, 35.5, 0.0, 38.5, 87.5, 0.0, 182.0, 44.5, 43.5, 0.0, 178.5, 116.0, 110.5, 115.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 60: array([195.5, 81.5, 127.5, 57.5, 88.5, 156.5, 171.5, 0.0, 140.5, 170.5, 89.5, 116.5, 0.0, 0.0, 0.0, 115.5, 112.0, 102.5, 0.0, 129.5, 131.5, 0.0, 0.0, 56.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 89.5, 112.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 61: array([195.5, 81.5, 127.5, 57.5, 88.5, 156.5, 171.5, 0.0, 140.5, 170.5, 89.5, 116.5, 0.0, 0.0, 0.0, 115.5, 112.0, 102.5, 0.0, 129.5, 131.5, 0.0, 0.0, 56.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 89.5, 112.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 62: array([38.5, 22.5, 104.5, 0.0, 55.5, 159.5, 99.5, 0.0, 0.0, 32.5, 152.5, 200.5, 41.5, 0.0, 129.5, 116.0, 0.0, 108.0, 0.0, 0.0, 169.5, 164.5, 0.0, 0.0, 0.0, 0.0, 0.0, 66.5, 122.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 63: array([38.5, 22.5, 104.5, 0.0, 55.5, 159.5, 99.5, 0.0, 0.0, 32.5, 152.5, 200.5, 41.5, 0.0, 129.5, 116.0, 0.0, 108.0, 0.0, 0.0, 169.5, 164.5, 0.0, 0.0, 0.0, 0.0, 0.0, 66.5, 122.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 64: array([221.5, 66.5, 176.0, 105.5, 89.5, 0.0, 0.0, 90.5, 117.5, 57.5, 63.5, 0.0, 0.0, 0.0, 0.0, 0.0, 161.5, 0.0, 57.5, 84.5, 0.0, 0.0, 236.5, 0.0, 0.0, 0.0, 0.0]), 65: array([221.5, 66.5, 176.0, 105.5, 89.5, 0.0, 0.0, 90.5, 117.5, 57.5, 63.5, 0.0, 0.0, 0.0, 0.0, 0.0, 161.5, 0.0, 57.5, 84.5, 0.0, 0.0, 236.5, 0.0, 0.0, 0.0, 0.0]), 66: array([67.5, 97.5, 64.5, 64.5, 106.5, 119.5, 125.5, 0.0, 0.0, 0.0, 97.5, 0.0, 0.0, 76.5, 159.5, 0.0, 0.0, 0.0, 83.5, 152.5, 127.5, 86.5, 99.5, 126.5, 0.0, 0.0, 125.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 67: array([67.5, 97.5, 64.5, 64.5, 106.5, 119.5, 125.5, 0.0, 0.0, 0.0, 97.5, 0.0, 0.0, 76.5, 159.5, 0.0, 0.0, 0.0, 83.5, 152.5, 127.5, 86.5, 99.5, 126.5, 0.0, 0.0, 125.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 68: array([174.5, 158.5, 232.5, 196.5, 162.5, 175.5, 120.5, 34.5, 0.0, 0.0, 0.0, 0.0, 42.5, 0.0, 186.5, 0.0, 61.5, 0.0, 61.5, 0.0, 0.0, 85.5, 128.5, 0.0, 70.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 69: array([174.5, 158.5, 232.5, 196.5, 162.5, 175.5, 120.5, 34.5, 0.0, 0.0, 0.0, 0.0, 42.5, 0.0, 186.5, 0.0, 61.5, 0.0, 61.5, 0.0, 0.0, 85.5, 128.5, 0.0, 70.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 70: array([47.5, 75.5, 84.5, 0.0, 0.0, 136.5, 121.5, 70.5, 0.0, 69.5, 163.5, 0.0, 0.0, 0.0, 151.5, 38.5, 161.5, 56.5, 0.0, 0.0, 49.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 71: array([47.5, 75.5, 84.5, 0.0, 0.0, 136.5, 121.5, 70.5, 0.0, 69.5, 163.5, 0.0, 0.0, 0.0, 151.5, 38.5, 161.5, 56.5, 0.0, 0.0, 49.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 72: array([98.5, 93.5, 84.5, 63.5, 54.5, 0.0, 179.5, 0.0, 97.5, 0.0, 87.5, 99.5, 225.5, 83.5, 0.0, 0.0, 0.0, 0.0, 172.5, 149.5, 114.5, 0.0, 0.0, 54.5, 89.5, 110.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 73: array([98.5, 93.5, 84.5, 63.5, 54.5, 0.0, 179.5, 0.0, 97.5, 0.0, 87.5, 99.5, 225.5, 83.5, 0.0, 0.0, 0.0, 0.0, 172.5, 149.5, 114.5, 0.0, 0.0, 54.5, 89.5, 110.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 74: array([28.5, 25.5, 186.5, 0.0, 0.0, 141.5, 155.5, 46.5, 183.5, 0.0, 110.5, 113.5, 44.5, 93.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 51.5, 0.0, 165.5, 0.0, 0.0, 0.0, 0.0]), 75: array([28.5, 25.5, 186.5, 0.0, 0.0, 141.5, 155.5, 46.5, 183.5, 0.0, 110.5, 113.5, 44.5, 93.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 51.5, 0.0, 165.5, 0.0, 0.0, 0.0, 0.0]), 76: array([101.5, 64.5, 121.5, 47.5, 149.5, 145.5, 65.5, 0.0, 0.0, 115.5, 0.0, 0.0, 0.0, 133.5, 158.5, 128.5, 0.0, 0.0, 0.0, 94.5, 0.0, 0.0, 0.0, 84.5, 125.5, 0.0, 0.0, 0.0, 0.0]), 77: array([101.5, 64.5, 121.5, 47.5, 149.5, 145.5, 65.5, 0.0, 0.0, 115.5, 0.0, 0.0, 0.0, 133.5, 158.5, 128.5, 0.0, 0.0, 0.0, 94.5, 0.0, 0.0, 0.0, 84.5, 125.5, 0.0, 0.0, 0.0, 0.0]), 78: array([40.5, 48.5, 76.5, 0.0, 0.0, 129.5, 115.5, 110.5, 0.0, 157.5, 89.5, 0.0, 0.0, 155.5, 110.5, 64.5, 123.5, 84.5, 127.5, 0.0, 0.0, 0.0, 0.0, 115.5, 132.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 79: array([40.5, 48.5, 76.5, 0.0, 0.0, 129.5, 115.5, 110.5, 0.0, 157.5, 89.5, 0.0, 0.0, 155.5, 110.5, 64.5, 123.5, 84.5, 127.5, 0.0, 0.0, 0.0, 0.0, 115.5, 132.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 80: array([142.5, 131.5, 220.5, 65.5, 156.5, 99.5, 120.5, 61.5, 95.5, 0.0, 0.0, 0.0, 96.5, 0.0, 153.5, 0.0, 0.0, 0.0, 102.5, 0.0, 173.5, 0.0, 0.0, 0.0, 120.5, 0.0, 0.0, 0.0, 0.0]), 81: array([142.5, 131.5, 220.5, 65.5, 156.5, 99.5, 120.5, 61.5, 95.5, 0.0, 0.0, 0.0, 96.5, 0.0, 153.5, 0.0, 0.0, 0.0, 102.5, 0.0, 173.5, 0.0, 0.0, 0.0, 120.5, 0.0, 0.0, 0.0, 0.0]), 82: array([39.5, 55.5, 112.5, 0.0, 0.0, 134.5, 71.5, 47.5, 135.5, 0.0, 101.5, 0.0, 65.5, 0.0, 0.0, 90.5, 127.5, 0.0, 0.0, 0.0, 93.5, 109.5, 123.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 83: array([39.5, 55.5, 112.5, 0.0, 0.0, 134.5, 71.5, 47.5, 135.5, 0.0, 101.5, 0.0, 65.5, 0.0, 0.0, 90.5, 127.5, 0.0, 0.0, 0.0, 93.5, 109.5, 123.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 84: array([35.5, 0.0, 158.5, 135.5, 149.5, 157.5, 99.5, 81.5, 164.5, 71.5, 0.0, 0.0, 133.5, 0.0, 93.5, 0.0, 0.0, 0.0, 87.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), 85: array([35.5, 0.0, 158.5, 135.5, 149.5, 157.5, 99.5, 81.5, 164.5, 71.5, 0.0, 0.0, 133.5, 0.0, 93.5, 0.0, 0.0, 0.0, 87.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])}


def __convert(cell):
    value = str(cell)
    try:
        result = int(value)
        return result
    except ValueError:
        try:
            result=float(value)
            if math.isnan(result):
                print('NaN value found. Aborting.')
                sys.exit(1)
            return result
        except ValueError:
            result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
            return result
        except Exception as e:
            print(f"An exception of type {type(e).__name__} was encountered. Aborting.")
            sys.exit(1)


def __get_key(val, dictionary):
    if dictionary == {}:
        return val
    for key, value in dictionary.items(): 
        if val == value:
            return key
    if val not in dictionary.values:
        print("Label key does not exist")
        sys.exit(1)


def __convertclassid(cell, classlist=[]):

    value = str(cell)
    
    if value == '':
        print('Empty value encountered for a class label. Aborting.')
        sys.exit(1)
    
    if mapping != {}:
        result = -1
        try:
            result = mapping[cell]
        except KeyError:
            print(f"The class label {value} does not exist in the class mapping. Aborting.")
            sys.exit(1)
        except Exception as e:
            print(f"An exception of type {type(e).__name__} was encountered. Aborting.")
            sys.exit(1)
        if result != int(result):
            print(f"The label {value} is mapped to {result} but class labels must be mapped to integers. Aborting.")
            sys.exit(1)
        if str(result) not in classlist:
            classlist.append(str(result))
        return result
    
    try:
        result = float(cell)
        if str(result) not in classlist:
            classlist.append(str(result))
    except:
        result = (binascii.crc32(value.encode('utf8')) % (1 << 32))
        if result in classlist:
            result = classlist.index(result)
        else:
            classlist.append(str(result))
            result = classlist.index(result)
        if result != int(result):
            print(f"The label {value} is mapped to {result} but class labels must be mapped to integers. Aborting.")
            sys.exit(1)
    finally:
        if result < 0:
            print(f"The label {value} is mapped to {result} but class labels must be mapped to non-negative integers. Aborting.")
            sys.exit(1)

    return result


def __clean(filename, outfile, headerless=False, testfile=False, trim=False):
    classlist = []
    outbuf = []
    remove_bad_chars = lambda x: x.replace('"', '').replace(',', '').replace('(', '').replace(')', '')
    
    with open(filename, encoding='utf-8') as csv_file, open(outfile, "w+", encoding='utf-8') as f:
        
        reader = csv.reader(csv_file)
        if not headerless:
            next(reader, None)
        
        for i, row in enumerate(reader):

            if row == []:
                continue

            
            expected_row_length = len(important_idxs)
            if not trim:
                expected_row_length += len(ignorecolumns)
            if not testfile:
                expected_row_length += 1
            actual_row_length = len(row)

            if testfile and actual_row_length == expected_row_length + 1:
                error_str = f"We found {actual_row_length} columns but expected {expected_row_length} columns at row {i}. "
                error_str += f"Please check that the CSV contains no target column otherwise use -validate. Aborting."
                print(error_str)
                sys.exit(1)
            
            if actual_row_length != expected_row_length:
                print(f"We found {actual_row_length} columns but expected {expected_row_length} columns.")
                sys.exit(1)            

            if testfile:
                if len(row) == 1:
                    converted_row = [str(__convert(remove_bad_chars(row[0])))]
                else:
                    converted_row = [str(__convert(remove_bad_chars(element))) + "," for element in row[:-1]] + [str(__convert(remove_bad_chars(row[-1])))]         
            else:
                converted_row = [str(__convert(remove_bad_chars(element))) + "," for element in row[:-1]] + [str(__convertclassid(row[-1], classlist))]
            outbuf.extend(converted_row)

            if len(outbuf) < IOBUF:
                outbuf.append(os.linesep)
            else:
                print(''.join(outbuf), file=f)
                outbuf = []
        
        print(''.join(outbuf), end="", file=f)

    n_classes_found = len(classlist)
    if not testfile and n_classes_found < 2:
        print(f"Only {n_classes_found} classes were found. Aborting.")
        sys.exit(1)


def __confusion_matrix(y_true, y_pred, json, labels=None, sample_weight=None, normalize=None):
    stats = {}
    if labels is None:
        labels = np.array(list(set(list(y_true.astype('int')))))
    else:
        labels = np.asarray(labels)
        if np.all([l not in y_true for l in labels]):
            raise ValueError("At least one label specified must be in y_true")
    n_labels = labels.size

    for class_i in range(n_labels):
        stats[class_i] = {'TP':{},'FP':{},'FN':{},'TN':{}}
        class_i_indices = np.argwhere(y_true==class_i)
        not_class_i_indices = np.argwhere(y_true!=class_i)
        stats[int(class_i)]['TP'] = int(np.sum(y_pred[class_i_indices] == class_i))
        stats[int(class_i)]['FN'] = int(np.sum(y_pred[class_i_indices] != class_i))
        stats[int(class_i)]['TN'] = int(np.sum(y_pred[not_class_i_indices] != class_i))
        stats[int(class_i)]['FP'] = int(np.sum(y_pred[not_class_i_indices] == class_i))

    if not report_cmat:
        if json:
            return np.array([]), stats
        else:
            sys.exit(0)

    if sample_weight is None:
        sample_weight = np.ones(y_true.shape[0], dtype=np.int64)
    else:
        sample_weight = np.asarray(sample_weight)
    if y_true.shape[0]!=y_pred.shape[0]:
        raise ValueError("y_true and y_pred must be of the same length")

    if normalize not in ['true', 'pred', 'all', None]:
        raise ValueError("normalize must be one of {'true', 'pred', 'all', None}")


    label_to_ind = {y: x for x, y in enumerate(labels)}
    y_pred = np.array([label_to_ind.get(x, n_labels + 1) for x in y_pred])
    y_true = np.array([label_to_ind.get(x, n_labels + 1) for x in y_true])
    ind = np.logical_and(y_pred < n_labels, y_true < n_labels)
    y_pred = y_pred[ind]
    y_true = y_true[ind]

    sample_weight = sample_weight[ind]
    if sample_weight.dtype.kind in {'i', 'u', 'b'}:
        dtype = np.int64
    else:
        dtype = np.float64
    cm = coo_matrix((sample_weight, (y_true, y_pred)), shape=(n_labels, n_labels), dtype=dtype,).toarray()

    with np.errstate(all='ignore'):
        if normalize == 'true':
            cm = cm / cm.sum(axis=1, keepdims=True)
        elif normalize == 'pred':
            cm = cm / cm.sum(axis=0, keepdims=True)
        elif normalize == 'all':
            cm = cm / cm.sum()
        cm = np.nan_to_num(cm)
    return cm, stats


def __predict(arr, headerless, csvfile, trim=False):
    with open(csvfile, 'r', encoding='utf-8') as csvinput:
        reader = csv.reader(csvinput)
        if not headerless:
            if trim:
                header = ','.join([x for i, x in enumerate(next(reader, None)) if i in important_idxs] + ['Prediction'])
            else:
                header = ','.join(next(reader, None) + ['Prediction'])
            print(header)
        outputs = __classify(arr)
        for i, row in enumerate(reader):
            pred = str(__get_key(int(outputs[i]), mapping))
            if trim:
                row = ['"' + field + '"' if ',' in field else field for i, field in enumerate(row) if i in important_idxs]
            else:
                row = ['"' + field + '"' if ',' in field else field for field in row]            
            row.append(pred)
            print(','.join(row))


def __preprocess_and_clean_in_memory(arr):
    if not isinstance(arr, list) and not isinstance(arr, np.ndarray):
        print(f'The input to \'predict\' must be a list or np.ndarray but an input of type {type(arr).__name__} was found.')
        sys.exit(1)
    clean_arr = np.zeros((len(arr), len(important_idxs)))
    for i, row in enumerate(arr):
        try:
            row_used_cols_only = [row[i] for i in important_idxs]
        except IndexError:
            error_str = f"The input has shape ({len(arr)}, {len(row)}) but the expected shape is (*, {num_attr})."
            if len(arr) == num_attr and len(arr[0]) != num_attr:
                error_str += "\n\nNote: You may have passed an input directly to 'preprocess_and_clean_in_memory' or 'predict_in_memory' "
                error_str += "rather than as an element of a list. Make sure that even single instances "
                error_str += "are enclosed in a list. Example: predict_in_memory(0) is invalid but "
                error_str += "predict_in_memory([0]) is valid."
            print(error_str)
            sys.exit(1)
        clean_arr[i] = [float(__convert(field)) for field in row_used_cols_only]
    return clean_arr


def __evaluate_tree(xs, split_vals, split_feats, right_children, logits):
    if xs is None:
        xs = np.frombuffer(var_dict['X']).reshape(var_dict['X_shape'])

    current_node_per_row = np.zeros(xs.shape[0]).astype('int')
    values = np.empty(xs.shape[0])
    values.fill(np.nan)

    while np.isnan(values).any():

        row_idxs_at_leaf = np.argwhere(np.logical_and(right_children[current_node_per_row] == -1, np.isnan(values))).reshape(-1)
        row_idxs_at_branch = np.argwhere(right_children[current_node_per_row] != -1).reshape(-1)

        if row_idxs_at_leaf.shape[0] > 0:

            values[row_idxs_at_leaf] = logits[current_node_per_row[row_idxs_at_leaf]].reshape(-1)
            current_node_per_row[row_idxs_at_leaf] = -1

        if row_idxs_at_branch.shape[0] > 0:

            split_values_per_row = split_vals[current_node_per_row[row_idxs_at_branch]].astype('float64')
            split_features_per_row = split_feats[current_node_per_row[row_idxs_at_branch]].astype('int')
            feature_val_per_row = xs[row_idxs_at_branch, split_features_per_row].reshape(-1)

            branch_nodes = current_node_per_row[row_idxs_at_branch]
            current_node_per_row[row_idxs_at_branch] = np.where(feature_val_per_row < split_values_per_row,
                                                                right_children[branch_nodes].astype('int'),
                                                                (right_children[branch_nodes] + 1).astype('int'))

    return values


def __build_logit_func(n_trees, clss):

    def __logit_func(xs, serial, data_shape, pool=None):
        if serial:
            sum_of_leaf_values = np.zeros(xs.shape[0])
            for booster_index in range(clss, n_trees, n_classes):
                sum_of_leaf_values += __evaluate_tree(xs, split_vals_dict[booster_index], split_feats_dict[booster_index],
                                                right_children_dict[booster_index], logits_dict[booster_index])
        else:
            sum_of_leaf_values = np.sum(list(pool.starmap(__evaluate_tree,
                                            [(None, split_vals_dict[booster_index], split_feats_dict[booster_index],
                                              right_children_dict[booster_index], logits_dict[booster_index])
                                    for booster_index in range(clss, n_trees, n_classes)])), axis=0)
        return sum_of_leaf_values

    return __logit_func


def __init_worker(X, X_shape):
    var_dict['X'] = X
    var_dict['X_shape'] = X_shape


def __classify(rows, return_probabilities=False, force_serial=False):
    if force_serial:
        serial = True
    else:
        serial = default_to_serial
    if isinstance(rows, list):
        rows = np.array(rows)

    logits = [__build_logit_func(86, clss) for clss in range(n_classes)]

    if serial:
        o = np.array([logits[class_index](rows, True, rows.shape) for class_index in range(n_classes)]).T
    else:
        shared_arr = multiprocessing.RawArray('d', rows.shape[0] * rows.shape[1])
        shared_arr_np = np.frombuffer(shared_arr, dtype=rows.dtype).reshape(rows.shape)
        np.copyto(shared_arr_np, rows)

        procs = multiprocessing.cpu_count()
        pool = multiprocessing.Pool(processes=procs, initializer=__init_worker, initargs=(shared_arr, rows.shape))
        o = np.array([logits[class_index](None, False, rows.shape, pool) for class_index in range(n_classes)]).T

    if return_probabilities:
        
        argument = o[:, 0] - o[:, 1]
        p0 = 1.0 / (1.0 + np.exp(-argument)).reshape(-1, 1)
        p1 = 1.0 - p0
        output = np.concatenate((p0, p1), axis=1)
        
    else:
        output = np.argmax(o,axis=1)
    return output


def __validate_kwargs(kwargs):
    for key in kwargs:
        if key not in ['return_probabilities', 'force_serial']:
        
            print(f'{key} is not a keyword argument for Brainome\'s {classifier_type} predictor. Please see the documentation.')
            sys.exit(1)


def predict(arr, remap=True, **kwargs):
    """
    Parameters
    ----------
    arr : list[list]
        An array of inputs to be cleaned by 'preprocess_and_clean_in_memory'.

    remap : bool
        If True and 'return_probs' is False, remaps the output to the original class
        label. If 'return_probs' is True this instead adds a header indicating which
        original class label each column of output corresponds to.
    
    **kwargs :
        return_probabilities : bool
            If true, return class membership probabilities instead of classifications.
        force_serial : bool
            If true, model inference is done in serial rather than in parallel. This is
            useful if calling "predict" repeatedly inside a for-loop.
        
    Returns
    -------
    output : np.ndarray
        A numpy array of

            1. Class predictions if 'return_probabilities' is False.
            2. Class probabilities if 'return_probabilities' is True.
        """
    kwargs = kwargs or {}
    __validate_kwargs(kwargs)
    remove_bad_chars = lambda x: str(x).replace('"', '').replace(',', '').replace('(', '').replace(')', '')
    arr = [[remove_bad_chars(field) for field in row] for row in arr]
    arr = __preprocess_and_clean_in_memory(arr)
    output = __classify(arr, **kwargs)
    if remap:
        if len(output.shape) > 1: # probabilities were returned
            header = np.array([__get_key(i, mapping) for i in range(output.shape[1])], dtype=str).reshape(1, -1)
            output = np.concatenate((header, output), axis=0)
        else:
            output = np.array([__get_key(prediction, mapping) for prediction in output])
    return output


def validate(cleanarr):
    """
    Parameters
    ----------
    cleanarr : np.ndarray
        An array of float values that has undergone each pre-
        prediction step.

    Returns
    -------
    count : int
        A count of the number of instances in cleanarr.

    correct_count : int
        A count of the number of correctly classified instances in
        cleanarr.

    numeachclass : dict
        A dictionary mapping each class to its number of instances.

    outputs : np.ndarray
        The output of the predictor's '__classify' method on cleanarr.
    """
    outputs = __classify(cleanarr[:, :-1])
    count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0 = 0, 0, 0, 0, 0, 0, 0, 0
    correct_count = int(np.sum(outputs.reshape(-1) == cleanarr[:, -1].reshape(-1)))
    count = outputs.shape[0]
    num_TP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, cleanarr[:, -1].reshape(-1) == 1)))
    num_TN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, cleanarr[:, -1].reshape(-1) == 0)))
    num_FN = int(np.sum(np.logical_and(outputs.reshape(-1) == 0, cleanarr[:, -1].reshape(-1) == 1)))
    num_FP = int(np.sum(np.logical_and(outputs.reshape(-1) == 1, cleanarr[:, -1].reshape(-1) == 0)))
    num_class_0 = int(np.sum(cleanarr[:, -1].reshape(-1) == 0))
    num_class_1 = int(np.sum(cleanarr[:, -1].reshape(-1) == 1))
    return count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0, outputs
    

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on ' + str(TRAINFILE))
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    parser.add_argument('-json', action="store_true", default=False, help="report measurements as json")
    parser.add_argument('-trim', action="store_true", help="If true, the prediction will not output ignored columns.")
    args = parser.parse_args()
    faulthandler.enable()

    if args.validate:
        args.trim = True

    is_testfile = not args.validate
    
    cleanfile = tempfile.NamedTemporaryFile().name
    __clean(args.csvfile, cleanfile, args.headerless, is_testfile, trim=args.trim)
    cleanarr = np.loadtxt(cleanfile, delimiter=',', dtype='float64')
    if len(cleanarr.shape) == 1:
        if args.trim and len(important_idxs) == 1:
            cleanarr = cleanarr.reshape(-1, 1)
        elif len(open(cleanfile, 'r').read().splitlines()) == 1:
            cleanarr = cleanarr.reshape(1, -1)

    if not args.trim and ignorecolumns != []:
        cleanarr = cleanarr[:, important_idxs].reshape(-1, len(important_idxs))

    if not args.validate:
        __predict(cleanarr, args.headerless, args.csvfile, trim=args.trim)
    else:
        count, correct_count, num_TP, num_TN, num_FP, num_FN, num_class_1, num_class_0, preds = validate(cleanarr)
        
        true_labels = cleanarr[:, -1]
        classcounts = np.bincount(cleanarr[:, -1].astype('int32')).reshape(-1)
        classbalance = (classcounts[np.argwhere(classcounts > 0)] / cleanarr.shape[0]).reshape(-1).tolist()
        best_guess = round(100.0 * np.max(classbalance), 2)
        H = float(-1.0 * sum([classbalance[i] * math.log(classbalance[i]) / math.log(2) for i in range(len(classbalance))]))
        modelacc = int(float(correct_count * 10000) / count) / 100.0

        if args.json:
            FN = float(num_FN) * 100.0 / float(count)
            FP = float(num_FP) * 100.0 / float(count)
            TN = float(num_TN) * 100.0 / float(count)
            TP = float(num_TP) * 100.0 / float(count)

            if int(num_TP + num_FN) != 0:
                TPR = num_TP / (num_TP + num_FN)  # Sensitivity, Recall
            if int(num_TN + num_FP) != 0:
                TNR = num_TN / (num_TN + num_FP)  # Specificity
            if int(num_TP + num_FP) != 0:
                PPV = num_TP / (num_TP + num_FP)  # Recall
            if int(num_FN + num_TP) != 0:
                FNR = num_FN / (num_FN + num_TP)  # Miss rate
            if int(2 * num_TP + num_FP + num_FN) != 0:
                FONE = 2 * num_TP / (2 * num_TP + num_FP + num_FN)  # F1 Score
            if int(num_TP + num_FN + num_FP) != 0:
                TS = num_TP / (num_TP + num_FN + num_FP)  # Critical Success Index
            json_dict = {'instance_count': count,
                         'classifier_type': classifier_type,
                         'classes': n_classes,
                         'number_correct': correct_count,
                         'accuracy': {
                             'best_guess': best_guess,
                             'improvement': modelacc - best_guess,
                             'model_accuracy': modelacc,
                         },
                         'false_negative_instances': num_FN,
                         'false_positive_instances': num_FP,
                         'true_positive_instances': num_TP,
                         'true_negative_instances': num_TN,
                         'false_negatives': FN,
                         'false_positives': FP,
                         'true_negatives': TN,
                         'true_positives': TP,
                         'model_capacity': model_cap,
                         'generalization_ratio': int(float(correct_count * 100) / model_cap) / 100.0 * H,
                         'model_efficiency': int(100 * (modelacc - best_guess) / model_cap) / 100.0,
                         'shannon_entropy_of_labels': H,
                         'classbalance': classbalance} 
        else:
            print("Classifier Type:                    Random Forest")
            print(f"System Type:                        {n_classes}-way classifier")
            print()
            print("Accuracy:")
            print("    Best-guess accuracy:            {:.2f}%".format(best_guess))
            print("    Model accuracy:                 {:.2f}%".format(modelacc) + " (" + str(int(correct_count)) + "/" + str(count) + " correct)")
            print("    Improvement over best guess:    {:.2f}%".format(modelacc - best_guess) + " (of possible " + str(round(100 - best_guess, 2)) + "%)")
            print()
            print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
            if classifier_type == '\'NN\'':
                print("Model Capacity Utilized:            {:.0f} bits".format(cap_utilized))  # noqa
            print("Generalization ratio:               {:.2f}".format(int(float(correct_count * 100) / model_cap) / 100.0 * H) + " bits/bit")

        mtrx, stats = __confusion_matrix(np.array(true_labels).reshape(-1), np.array(preds).reshape(-1), args.json)

        if args.json:
            json_dict['confusion_matrix'] = mtrx.tolist()
            json_dict['multiclass_stats'] = stats
            print(json.dumps(json_dict))
        else:
            mtrx = mtrx.astype('str')
            labels = np.array(list(mapping.keys())).reshape(-1, 1)
            mtrx = np.concatenate((labels, mtrx), axis=1).astype('str')
            max_TP_len, max_FP_len, max_TN_len, max_FN_len = 0, 0, 0, 0
            max_class_name_len = len('target') + 2
            for classs in mapping.keys():
                max_class_name_len = max(max_class_name_len, len(classs))
            for key in stats.keys():
                class_stats = stats[key]
                max_TP_len, max_FP_len, max_TN_len, max_FN_len = max(max_TP_len, len(str(class_stats['TP']))), max(max_FP_len, len(str(class_stats['FP']))), max(
                    max_TN_len, len(str(class_stats['TN']))), max(max_FN_len, len(str(class_stats['FN'])))
            print()
            print("Confusion Matrix:")
            print()
            max_len_value = int(np.max(np.vectorize(len)(mtrx)))
            max_pred_len = (int(mtrx.shape[1]) - 1) * max_len_value

            print(" " * 4 + "{:>{}} |{:^{}}".format("Actual", max_class_name_len, "Predicted", max_pred_len))
            print(" " * 4 + "-" * (max_class_name_len + max_pred_len + mtrx.shape[1] + 1))
            for row in mtrx:
                print(str(" " * 4 + "{:>{}}".format(row[0], max_class_name_len)) + " |" + "{:^{}}".format(
                    (' '.join([str('{:>{}}'.format(i, max_len_value)) for i in row[1:]])), max_pred_len))
            print()
            print("Accuracy by Class:")
            print()
            print(" " * 4 + "{:>{}} | {:>{}} {:>{}} {:>{}} {:>{}} {:>7} {:>7} {:>7} {:>7} {:>7} {:>7}".format('target',
                                                                                                              max_class_name_len,
                                                                                                              'TP', max_TP_len,
                                                                                                              'FP', max_FP_len,
                                                                                                              'TN', max_TN_len,
                                                                                                              'FN', max_FN_len,
                                                                                                              'TPR', 'TNR',
                                                                                                              'PPV', 'NPV',
                                                                                                              'F1', 'TS'))
            print(" " * 4 + "-" * max_class_name_len + ' | ' + "-" * (
                max_TP_len) + ' ' + "-" * max_FP_len + ' ' + "-" * max_TN_len + ' ' + "-" * max_FN_len + (' ' + 7 * "-") * 6)
            for raw_class in mapping.keys():
                class_stats = stats[int(mapping[raw_class])]
                TPR = class_stats['TP'] / (class_stats['TP'] + class_stats['FN']) if int(
                    class_stats['TP'] + class_stats['FN']) != 0 else 0
                TNR = class_stats['TN'] / (class_stats['TN'] + class_stats['FP']) if int(
                    class_stats['TN'] + class_stats['FP']) != 0 else 0
                PPV = class_stats['TP'] / (class_stats['TP'] + class_stats['FP']) if int(
                    class_stats['TP'] + class_stats['FP']) != 0 else 0
                NPV = class_stats['TN'] / (class_stats['TN'] + class_stats['FN']) if int(
                    class_stats['TN'] + class_stats['FN']) != 0 else 0
                F1 = 2 * class_stats['TP'] / (2 * class_stats['TP'] + class_stats['FP'] + class_stats['FN']) if int(
                    (2 * class_stats['TP'] + class_stats['FP'] + class_stats['FN'])) != 0 else 0
                TS = class_stats['TP'] / (class_stats['TP'] + class_stats['FP'] + class_stats['FN']) if int(
                    (class_stats['TP'] + class_stats['FP'] + class_stats['FN'])) != 0 else 0
                print(" " * 4 + "{:>{}} | {:>{}} {:>{}} {:>{}} {:>{}} {:>7} {:>7} {:>7} {:>7} {:>7} {:>7}".format(raw_class,
                                                                                                                  max_class_name_len,
                                                                                                                  class_stats['TP'],
                                                                                                                  max_TP_len,
                                                                                                                  class_stats['FP'],
                                                                                                                  max_FP_len,
                                                                                                                  class_stats['TN'],
                                                                                                                  max_TN_len,
                                                                                                                  class_stats['FN'],
                                                                                                                  max_FN_len,
                                                                                                                  "{:0.2f}%".format(
                                                                                                                      round(100.0 * TPR, 2)),
                                                                                                                  "{:0.2f}%".format(
                                                                                                                      round(100.0 * TNR, 2)),
                                                                                                                  "{:0.2f}%".format(
                                                                                                                      round(100.0 * PPV, 2)),
                                                                                                                  "{:0.2f}%".format(
                                                                                                                      round(100.0 * NPV, 2)),
                                                                                                                  "{:0.2f}%".format(
                                                                                                                      round(100.0 * F1, 2)),
                                                                                                                  "{:0.2f}%".format(
                                                                                                                      round(100.0 * TS, 2))))
            
    os.remove(cleanfile)
    
